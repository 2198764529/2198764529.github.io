[{"id":0,"href":"/posts/%E6%AD%8C%E8%AF%8D/","title":"歌词","section":"  ","content":"写，就是为了记住。\n忘记过去就是背叛，不要忘记，不要悲伤\n明天是上帝给你的礼物，要好好珍惜。\n"},{"id":1,"href":"/posts/%E4%B8%AA%E4%BA%BA/","title":"个人","section":"  ","content":"写，就是为了记住。\n忘记过去就是背叛，不要忘记，不要悲伤\n明天是上帝给你的礼物，要好好珍惜。\n"},{"id":2,"href":"/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/","title":"技术","section":"  ","content":"写，就是为了记住。\n忘记过去就是背叛，不要忘记，不要悲伤\n明天是上帝给你的礼物，要好好珍惜。\n"},{"id":3,"href":"/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/","title":"理论知识","section":"  ","content":"写，就是为了记住。\n忘记过去就是背叛，不要忘记，不要悲伤\n明天是上帝给你的礼物，要好好珍惜。\n"},{"id":4,"href":"/posts/%E6%9D%82%E6%80%9D/","title":"杂思","section":"  ","content":"写，就是为了记住。\n忘记过去就是背叛，不要忘记，不要悲伤\n明天是上帝给你的礼物，要好好珍惜。\n"},{"id":5,"href":"/posts/%E6%9D%82%E6%80%9D/23%E5%B9%B4%E5%8E%BB%E6%B7%B1%E5%9C%B3%E8%AE%A1%E5%88%92/","title":"22年去深圳计划","section":"杂思","content":" 计划明细 项目项 具体值 出发时间 待定 出发工具 待定 目的地 固戌 要带的东西 见【物品清单】 要做的事情 见【事情清单】 物品清单 要带的东西 电脑 鼠标，键盘 手机 (mi9, iphone6坏掉的) 硬盘(一个256固态, 一个1T机械) 电水壶 背包 配件类，电脑充电器，手机充电器（typec，mirc) 几个n95口罩 两瓶水 毛巾、洗漱牙刷杯子牙膏 要买的东西 厨房用具：电饭煲， 锅 插板 显示器 洗澡: 拖鞋, 衣架 篮球鞋 事情清单 走之前要做的事 剪头发 收拾房间 到之后要做的事 打电话 相关信息 衡阳到深圳的交通费用\n火车，坐106，卧180，8小时\n顺风车，350，11个小时\n飞机，520，一天\n"},{"id":6,"href":"/posts/","title":"  ","section":"好记性不如烂笔头","content":"写，就是为了记住。\n忘记过去就是背叛，不要忘记，不要悲伤\n明天是上帝给你的礼物，要好好珍惜。\n"},{"id":7,"href":"/posts/%E6%9D%82%E6%80%9D/22%E5%B9%B4%E8%BF%87%E5%B9%B4%E8%BF%90%E5%8A%A8%E8%AE%B0%E8%B4%A6/","title":"22年过年运动记账","section":"杂思","content":" 1月4号 25\n1月5号 40\n1月6号 43 已结\n1月7号 40\n1月8号 35\n1月9号 60 已结\n1月10号 30\n1月11号 25\n1月13号 45 已结\n1月14号 40 （第十天）\n1月17号 30\n1月18号 2 已结\n1月19号 53\n1月20号 57\n1月21号 59 已结（剩下54元）\n1月25号 14\n1月26号 20\n1月27号 30 (已结)\n1月28号 73\n1月29号 34\n1月30号 37 已结\n320 = 140+65+53+57+5 已结清\n项目规则：\n跑步，一圈5元，每天最多跑4圈 深蹲，50个15元，每天最多做100个 羽毛球，20个4元，40个7元，60个10元，每天最多60个 "},{"id":8,"href":"/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/git%E6%93%8D%E4%BD%9C/","title":"git操作","section":"技术","content":" Git 所有操作及命令 Git 是一个分布式版本控制系统，常用于管理代码的版本和协作开发。以下是 Git 的一些常用操作和命令：\nusage: git [-v | --version] [-h | --help] [-C \u0026lt;path\u0026gt;] [-c \u0026lt;name\u0026gt;=\u0026lt;value\u0026gt;] [--exec-path[=\u0026lt;path\u0026gt;]] [--html-path] [--man-path] [--info-path] [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare] [--git-dir=\u0026lt;path\u0026gt;] [--work-tree=\u0026lt;path\u0026gt;] [--namespace=\u0026lt;name\u0026gt;] [--config-env=\u0026lt;name\u0026gt;=\u0026lt;envvar\u0026gt;] \u0026lt;command\u0026gt; [\u0026lt;args\u0026gt;] These are common Git commands used in various situations: start a working area (see also: git help tutorial) clone Clone a repository into a new directory init Create an empty Git repository or reinitialize an existing one work on the current change (see also: git help everyday) add Add file contents to the index mv Move or rename a file, a directory, or a symlink restore Restore working tree files rm Remove files from the working tree and from the index examine the history and state (see also: git help revisions) bisect Use binary search to find the commit that introduced a bug diff Show changes between commits, commit and working tree, etc grep Print lines matching a pattern log Show commit logs show Show various types of objects status Show the working tree status grow, mark and tweak your common history branch List, create, or delete branches commit Record changes to the repository merge Join two or more development histories together rebase Reapply commits on top of another base tip reset Reset current HEAD to the specified state switch Switch branches tag Create, list, delete or verify a tag object signed with GPG collaborate (see also: git help workflows) fetch Download objects and refs from another repository pull Fetch from and integrate with another repository or a local branch push Update remote refs along with associated objects Git diff 在默认的 Git diff 输出中，您通常会看到以下内容：\n- 行：表示被删除的行。 + 行：表示被添加的行。 @@ -1,14 +1,22 @@：表示文件的上下文（context），以及行号的范围。 具体来说：\n@@ 标志表示一个差异块的开始。 -1,14 表示在原文件中，从第 1 行开始的 14 行代码。 +1,22 表示在修改后的文件中，从第 1 行开始的 22 行代码。 这个输出告诉您在两个版本之间的文件中，原始文件的第 1 行到第 14 行与修改后的文件的第 1 行到第 22 行之间有差异。\n通常，- 行下面的内容表示原文件的内容，+ 行下面的内容表示修改后的文件的内容。这使您可以轻松比较文件的变化。如果要了解更多关于 Git diff 的信息，您可以使用 git help diff 命令来查看 Git 的官方文档。\n"},{"id":9,"href":"/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/hugo-%E6%96%B9%E6%B3%95%E5%8F%82%E8%80%83/","title":"Hugo 方法参考","section":"技术","content":" String:用于字符串处理 trim ：从字符串中删除前导和尾随空格。 {{ trim \u0026#34; 你好，世界！ \u0026#34; }} upper ：将字符串转换为小写或大写。 {{ lower \u0026#34;你好\u0026#34; }} {{ upper \u0026#34;world\u0026#34; }} title ：将字符串中每个单词的首字母转换为大写。 {{ title \u0026#34;hello world\u0026#34; }} replace ：用另一个子字符串替换子字符串的出现。 {{ replace \u0026#34;你好，世界！\u0026#34; \u0026#34;你好\u0026#34; \u0026#34;嗨\u0026#34; }} substr ：返回给定字符串的子字符串，从指定位置开始，可选长度。 {{ substr \u0026#34;你好，世界！\u0026#34; 7 5 }} len ：返回字符串的长度。 {{ len \u0026#34;你好，世界！\u0026#34; }} printf ：使用fmt.Printf语法格式化字符串。 {{ printf \u0026#34;你好，%s！\u0026#34; \u0026#34;世界\u0026#34; }} urlize ：将字符串转换为适合URL的格式。 {{ urlize \u0026#34;这是一个示例字符串\u0026#34; }} humanize ：将字符串转换为人类可读的格式。 {{ humanize \u0026#34;some_string\u0026#34; }} pluralize ：基于计数返回词的复数形式。 {{ with index .Site.Data.translations (printf \u0026#34;%s.toml\u0026#34; .Site.Language.Lang) }} {{ .home | default \u0026#34;Home\u0026#34; | pluralize .Site.RegularPages | title }} {{ end }} Collections:用于集合处理 您好，这是Bing。我可以用md格式回答您的问题，给出一些常用的hugo函数的代码示例。请看以下内容：\nAfter(seq: Seq, item: Any) -\u0026gt; Seq: 返回一个序列，包含给定序列中指定元素之后的所有元素。如果给定序列中没有指定元素，返回空序列。例如： {{ $seq := slice 1 2 3 4 5 }} {{ $item := 3 }} {{ $result := after $seq $item }} {{/* result = [4 5] */}} Append:(seq: Seq, item: Any) -\u0026gt; Seq: 返回一个新的序列，包含给定序列和指定元素的连接。例如： {{ $seq := slice 1 2 3 }} {{ $item := 4 }} {{ $result := append $seq $item }} {{/* result = [1 2 3 4] */}} Apply:(seq: Seq, key: String, fn: Func) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中每个元素的key字段经过fn函数处理后的值。例如： {{ $seq := slice (dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20) (dict \u0026#34;name\u0026#34; \u0026#34;Bob\u0026#34; \u0026#34;age\u0026#34; 25) }} {{ $key := \u0026#34;name\u0026#34; }} {{ $fn := upper }} {{ $result := apply $seq $key $fn }} {{/* result = [\u0026#34;ALICE\u0026#34; \u0026#34;BOB\u0026#34;] */}} Complement:(seq1: Seq, seq2: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中不在另一个序列中的元素。例如： {{ $seq1 := slice 1 2 3 4 }} {{ $seq2 := slice 3 4 5 6 }} {{ $result := complement $seq1 $seq2 }} {{/* result = [1 2] */}} Delimit:(seq: Seq, delimiter: String) -\u0026gt; String: 返回一个字符串，包含给定序列中的元素用指定的分隔符连接起来。例如： {{ $seq := slice \u0026#34;a\u0026#34; \u0026#34;b\u0026#34; \u0026#34;c\u0026#34; }} {{ $delimiter := \u0026#34;,\u0026#34; }} {{ $result := delimit $seq $delimiter }} {{/* result = \u0026#34;a,b,c\u0026#34; */}} Dictionary:(args: Any…) -\u0026gt; Map: 返回一个新的映射，包含给定的键值对。参数必须是偶数个，且奇数位的参数为键，偶数位的参数为值。例如： {{ $result := dictionary \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20 }} {{/* result = {\u0026#34;name\u0026#34;: \u0026#34;Alice\u0026#34;, \u0026#34;age\u0026#34;: 20} */}} First:(limit: Int, seq: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的前limit个元素。如果limit大于给定序列的长度，返回整个序列。例如： {{ $limit := 2 }} {{ $seq := slice 1 2 3 4 5 }} {{ $result := first $limit $seq }} {{/* result = [1 2] */}} Group:(seq: Seq, key: String) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的元素按照key字段的值分组后的结果。每个分组是一个映射，包含两个键：key和values。例如： {{ $seq := slice (dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20) (dict \u0026#34;name\u0026#34; \u0026#34;Bob\u0026#34; \u0026#34;age\u0026#34; 25) (dict \u0026#34;name\u0026#34; \u0026#34;Charlie\u0026#34; \u0026#34;age\u0026#34; 20) }} {{ $key := \u0026#34;age\u0026#34; }} {{ $result := group $seq $key }} {{/* result = [{\u0026#34;age\u0026#34;: 20, \u0026#34;values\u0026#34;: [(dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20) (dict \u0026#34;name\u0026#34; \u0026#34;Charlie\u0026#34; \u0026#34;age\u0026#34; 20)]}, {\u0026#34;age\u0026#34;: 25, \u0026#34;values\u0026#34;: [(dict \u0026#34;name\u0026#34; \u0026#34;Bob\u0026#34; \u0026#34;age\u0026#34; 25)]}] */}} In:(seq: Seq, item: Any) -\u0026gt; Bool: 返回一个布尔值，表示给定的元素是否在给定的序列中。例如： {{ $seq := slice 1 2 3 4 5 }} {{ $item := 3 }} {{ $result := in $seq $item }} {{/* result = true */}} Index:(seq: Seq, index: Int) -\u0026gt; Any: 返回给定序列中指定索引的元素。如果索引超出范围，返回nil。例如： {{ $seq := slice 1 2 3 4 5 }} {{ $index := 2 }} {{ $result := index $seq $index }} {{/* result = 3 */}} Intersect:(seq1: Seq, seq2: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的公共元素。例如： {{ $seq1 := slice 1 2 3 4 }} {{ $seq2 := slice 3 4 5 6 }} {{ $result := intersect $seq1 $seq2 }} {{/* result = [3 4] */}} IsSet:(seq: Seq, key: String) -\u0026gt; Bool: 返回一个布尔值，表示给定的序列是否包含指定的键。例如： {{ $seq := dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20 }} {{ $key := \u0026#34;name\u0026#34; }} {{ $result := isset $seq $key }} {{/* result = true */}} KeyVals:(seq: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的键值对。每个键值对是一个包含两个元素的切片。例如： {{ $seq := dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20 }} {{ $result := keyVals $seq }} {{/* result = [[\u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34;] [\u0026#34;age\u0026#34; 20]] */}} Last:(limit: Int, seq: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的后limit个元素。如果limit大于给定序列的长度，返回整个序列。例如： {{ $limit := 2 }} {{ $seq := slice 1 2 3 4 5 }} {{ $result := last $limit $seq }} {{/* result = [4 5] */}} Merge:(seq1: Seq, seq2: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的元素合并后的结果。如果两个序列都是切片，返回一个新的切片。如果两个序列都是映射，返回一个新的映射，其中seq2中的键值对会覆盖seq1中的键值对。例如： {{ $seq1 := slice 1 2 3 }} {{ $seq2 := slice 4 5 6 }} {{ $result := merge $seq1 $seq2 }} {{/* result = [1 2 3 4 5 6] */}} {{ $seq1 := dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20 }} {{ $seq2 := dict \u0026#34;age\u0026#34; 25 \u0026#34;gender\u0026#34; \u0026#34;female\u0026#34; }} {{ $result := merge $seq1 $seq2 }} {{/* result = {\u0026#34;name\u0026#34;: \u0026#34;Alice\u0026#34;, \u0026#34;age\u0026#34;: 25, \u0026#34;gender\u0026#34;: \u0026#34;female\u0026#34;} */}} NewScratch:() -\u0026gt; Scratch: 返回一个新的Scratch对象，用于在模板中存储临时数据。例如： {{ $scratch := newScratch }} {{ $scratch.Set \u0026#34;foo\u0026#34; \u0026#34;bar\u0026#34; }} {{ $result := $scratch.Get \u0026#34;foo\u0026#34; }} {{/* result = \u0026#34;bar\u0026#34; */}} Querify:(args: Any…) -\u0026gt; String: 返回一个字符串，包含给定的键值对转换为URL查询参数的结果。参数必须是偶数个，且奇数位的参数为键，偶数位的参数为值。例如： {{ $result := querify \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20 }} {{/* result = \u0026#34;name=Alice\u0026amp;age=20\u0026#34; */}} Reverse:(seq: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的元素反转后的结果。例如： {{ $seq := slice 1 2 3 4 5 }} {{ $result := reverse $seq }} {{/* result = [5 4 3 2 1] */}} 好的，我继续回答您的问题，给出一些常用的hugo函数的代码示例。请看以下内容：\nSeq:(args: Any…) -\u0026gt; Seq: 返回一个新的序列，包含给定的参数。例如： {{ $result := seq 1 2 3 4 5 }} {{/* result = [1 2 3 4 5] */}} Shuffle(seq: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的元素随机打乱后的结果。例如： {{ $seq := slice 1 2 3 4 5 }} {{ $result := shuffle $seq }} {{/* result = [3 5 1 4 2] */}} Slice:(args: Any…) -\u0026gt; Slice: 返回一个新的切片，包含给定的参数。例如： {{ $result := slice 1 2 3 4 5 }} {{/* result = [1 2 3 4 5] */}} Sort:(seq: Seq, key: String) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的元素按照key字段的值排序后的结果。如果key为空，按照元素本身的值排序。例如： {{ $seq := slice 5 4 3 2 1 }} {{ $key := \u0026#34;\u0026#34; }} {{ $result := sort $seq $key }} {{/* result = [1 2 3 4 5] */}} {{ $seq := slice (dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20) (dict \u0026#34;name\u0026#34; \u0026#34;Bob\u0026#34; \u0026#34;age\u0026#34; 25) (dict \u0026#34;name\u0026#34; \u0026#34;Charlie\u0026#34; \u0026#34;age\u0026#34; 20) }} {{ $key := \u0026#34;name\u0026#34; }} {{ $result := sort $seq $key }} {{/* result = [(dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20) (dict \u0026#34;name\u0026#34; \u0026#34;Bob\u0026#34; \u0026#34;age\u0026#34; 25) (dict \u0026#34;name\u0026#34; \u0026#34;Charlie\u0026#34; \u0026#34;age\u0026#34; 20)] */}} SymDiff:(seq1: Seq, seq2: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的对称差集，即两个序列中不同时出现的元素。例如： {{ $seq1 := slice 1 2 3 4 }} {{ $seq2 := slice 3 4 5 6 }} {{ $result := symDiff $seq1 $seq2 }} {{/* result = [1 2 5 6] */}} Union:(seq1: Seq, seq2: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的并集，即两个序列中的所有元素。例如： {{ $seq1 := slice 1 2 3 4 }} {{ $seq2 := slice 3 4 5 6 }} {{ $result := union $seq1 $seq2 }} {{/* result = [1 2 3 4 5 6] */}} Uniq:(seq: Seq) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中的唯一元素，即去除重复的元素。例如： {{ $seq := slice 1 2 3 3 4 4 5 }} {{ $result := uniq $seq }} {{/* result = [1 2 3 4 5] */}} Where:(seq: Seq, key: String, op: String, value: Any) -\u0026gt; Seq: 返回一个新的序列，包含给定序列中满足指定条件的元素。key是要比较的字段，op是要使用的比较运算符，value是要比较的值。op可以是以下之一：=，!=，\u0026lt;，\u0026lt;=，\u0026gt;，\u0026gt;=，in，not in。例如： {{ $seq := slice (dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20) (dict \u0026#34;name\u0026#34; \u0026#34;Bob\u0026#34; \u0026#34;age\u0026#34; 25) (dict \u0026#34;name\u0026#34; \u0026#34;Charlie\u0026#34; \u0026#34;age\u0026#34; 20) }} {{ $key := \u0026#34;age\u0026#34; }} {{ $op := \u0026#34;=\u0026#34; }} {{ $value := 20 }} {{ $result := where $seq $key $op $value }} {{/* result = [(dict \u0026#34;name\u0026#34; \u0026#34;Alice\u0026#34; \u0026#34;age\u0026#34; 20) (dict \u0026#34;name\u0026#34; \u0026#34;Charlie\u0026#34; \u0026#34;age\u0026#34; 20)] */}} Compare: 两个或者多个值比较 eq： 相等 {{ if eq 2 2 }} \u0026lt;!-- 这个块将会执行，因为 2 等于 2 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} ne： 不等 {{ if ne 3 5 }} \u0026lt;!-- 这个块将会执行，因为 3 不等于 5 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} gt： 大于 {{ if gt 10 5 }} \u0026lt;!-- 这个块将会执行，因为 10 大于 5 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} ge： 大于等于 {{ if ge 7 7 }} \u0026lt;!-- 这个块将会执行，因为 7 大于等于 7 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} lt： 小于 {{ if lt 4 8 }} \u0026lt;!-- 这个块将会执行，因为 4 小于 8 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} le： 小于等于 {{ if le 6 6 }} \u0026lt;!-- 这个块将会执行，因为 6 小于等于 6 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} and： 逻辑与 {{ if and (eq 2 2) (gt 5 3) }} \u0026lt;!-- 这个块将会执行，因为两个条件都为真 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} or： 逻辑或 {{ if or (eq 2 3) (lt 5 3) }} \u0026lt;!-- 这个块将会执行，因为至少一个条件为真 --\u0026gt; {{ else }} \u0026lt;!-- 这个块不会执行 --\u0026gt; {{ end }} cond： 条件 {{ cond (eq 2 2) \u0026#34;条件1为真\u0026#34; (ne 3 5) \u0026#34;条件2为真\u0026#34; (gt 10 5) \u0026#34;条件3为真\u0026#34; \u0026#34;默认条件\u0026#34; }} default： 默认 {{ $value := default \u0026#34;default_value\u0026#34; .someVariable }} \u0026lt;!-- 如果 .someVariable 为空，则 $value 将设置为 \u0026#34;default_value\u0026#34; --\u0026gt; Data \u0026amp; Debug:数据和模板处理 readFile： 读取本地文件 {{ $localFileContent := readFile \u0026#34;path/to/local/file.txt\u0026#34; }} \u0026lt;!-- $localFileContent 将包含文件的内容 --\u0026gt; getJSON： 读取远程 JSON 文件 {{ $remoteJsonData := getJSON \u0026#34;https://example.com/data.json\u0026#34; }} \u0026lt;!-- $remoteJsonData 将包含 JSON 文件的数据 --\u0026gt; getCSV： 读取远程 CSV 文件 {{ $remoteCsvData := getCSV \u0026#34;https://example.com/data.csv\u0026#34; }} \u0026lt;!-- $remoteCsvData 将包含 CSV 文件的数据 --\u0026gt; dump： 打印变量详细信息 {{ dump $remoteJsonData }} \u0026lt;!-- 使用 dump 打印 $remoteJsonData 变量的详细信息 --\u0026gt; timer： 计算模板执行时间 {{ $timer := timer }} \u0026lt;!-- 执行一些模板操作 --\u0026gt; {{ $elapsedTime := $timer }} {{/* $elapsedTime 包含从 timer 开始到当前位置的时间间隔 */}} encoding 数据的编码和解码 base64Encode 和 base64Decode： Base64 编码和解码 {{ $originalData := \u0026#34;Hello, World!\u0026#34; }} {{ $encodedData := $originalData | base64Encode }} {{ $decodedData := $encodedData | base64Decode }} \u0026lt;!-- $encodedData 包含 \u0026#34;SGVsbG8sIFdvcmxkIQ==\u0026#34; --\u0026gt; \u0026lt;!-- $decodedData 包含 \u0026#34;Hello, World!\u0026#34; --\u0026gt; urlize 和 unurlize： URL 编码和解码 {{ $originalData := \u0026#34;Hello, World!\u0026#34; }} {{ $urlEncodedData := $originalData | urlize }} {{ $urlDecodedData := $urlEncodedData | unurlize }} \u0026lt;!-- $urlEncodedData 包含 \u0026#34;Hello%2C%20World%21\u0026#34; --\u0026gt; \u0026lt;!-- $urlDecodedData 包含 \u0026#34;Hello, World!\u0026#34; --\u0026gt; jsonify： 将数据转换为 JSON 格式 {{ $data := map \u0026#34;key\u0026#34; \u0026#34;value\u0026#34; }} {{ $jsonData := $data | jsonify }} \u0026lt;!-- $jsonData 包含 \u0026#39;{\u0026#34;key\u0026#34;:\u0026#34;value\u0026#34;}\u0026#39; --\u0026gt; Hugo 库 hugo.BuildDate： 提供 Hugo 构建的日期和时间。 hugo.CommitHash： 提供 Hugo 代码库的 Git 提交哈希。 hugo.Deps： 提供 Hugo 使用的 Go 语言依赖项的信息。 hugo.Environment： 提供 Hugo 当前运行的环境，例如 \u0026ldquo;production\u0026rdquo; 或 \u0026ldquo;development\u0026rdquo;。 hugo.Generator： 提供 Hugo 站点生成器的信息。 hugo.GoVersion： 提供 Hugo 使用的 Go 语言版本。 hugo.IsDevelopment： 如果 Hugo 当前在开发环境中运行，则为 true。 hugo.IsExtended： 如果 Hugo 当前是扩展版本，则为 true。 hugo.IsProduction： 如果 Hugo 当前在生产环境中运行，则为 true。 hugo.IsServer： 如果 Hugo 当前作为服务器运行，则为 true。 hugo.Version： 提供 Hugo 的版本号。 hugo.WorkingDir： 提供 Hugo 当前的工作目录。 Image:图像处理库 以下是一些使用 images 包中的函数的代码示例：\nBrightness： 调整图像的亮度。 {{ $brightImage := $image | images.Brightness 20 }} ColorBalance： 调整图像的色彩平衡。 {{ $balancedImage := $image | images.ColorBalance 10 -5 15 }} Colorize： 对图像进行着色。 {{ $colorizedImage := $image | images.Colorize \u0026#34;#FF0000\u0026#34; }} Config： 获取图像的配置信息。 {{ $imageConfig := $image.Config }} Contrast： 调整图像的对比度。 {{ $contrastedImage := $image | images.Contrast 10 }} Filter： 应用滤镜效果。 {{ $filteredImage := $image | images.Filter \u0026#34;blur\u0026#34; }} Gamma： 调整图像的伽马值。 {{ $gammaImage := $image | images.Gamma 1.5 }} GaussianBlur： 对图像应用高斯模糊。 {{ $blurredImage := $image | images.GaussianBlur 5 }} Grayscale： 将图像转换为灰度。 {{ $grayImage := $image | images.Grayscale }} Hue： 调整图像的色调。 {{ $huedImage := $image | images.Hue 30 }} inflect:单词处理 Humanize： 使单词更具人性化 {{ $humanizedWord := i18n \u0026#34;word\u0026#34; 1 (slice \u0026#34;en\u0026#34; \u0026#34;humanize\u0026#34;) }} Pluralize： 将单词转为复数形式 {{ $pluralWord := i18n \u0026#34;word\u0026#34; 2 (slice \u0026#34;en\u0026#34; \u0026#34;pluralize\u0026#34;) }} Singularize： 将单词转为单数形式 {{ $singularWord := i18n \u0026#34;words\u0026#34; 1 (slice \u0026#34;en\u0026#34; \u0026#34;singularize\u0026#34;) }} Math:数字运算 add： 加法 {{ $sum := add 5 3 }} \u0026lt;!-- $sum 包含 8 --\u0026gt; sub： 减法 {{ $difference := sub 10 3 }} \u0026lt;!-- $difference 包含 7 --\u0026gt; mul： 乘法 {{ $product := mul 4 6 }} \u0026lt;!-- $product 包含 24 --\u0026gt; div： 除法 {{ $quotient := div 12 4 }} \u0026lt;!-- $quotient 包含 3 --\u0026gt; mod： 取余 {{ $remainder := mod 10 3 }} \u0026lt;!-- $remainder 包含 1 --\u0026gt; math.Abs： 绝对值 {{ $absoluteValue := math.Abs -5 }} \u0026lt;!-- $absoluteValue 包含 5 --\u0026gt; math.Ceil 和 math.Floor： 向上取整和向下取整 {{ $ceiledValue := math.Ceil 4.3 }} \u0026lt;!-- $ceiledValue 包含 5 --\u0026gt; {{ $flooredValue := math.Floor 4.8 }} \u0026lt;!-- $flooredValue 包含 4 --\u0026gt; math.Max 和 math.Min： 最大值和最小值 {{ $maxValue := math.Max 10 7 }} \u0026lt;!-- $maxValue 包含 10 --\u0026gt; {{ $minValue := math.Min 5 3 }} \u0026lt;!-- $minValue 包含 3 --\u0026gt; math.Mod： 取余 {{ $remainder := math.Mod 10 3 }} \u0026lt;!-- $remainder 包含 1 --\u0026gt; math.ModBool： 取余的布尔值 {{ $isEven := math.ModBool 6 2 }} \u0026lt;!-- $isEven 包含 true --\u0026gt; math.Mul： 乘法 {{ $product := math.Mul 4 6 }} \u0026lt;!-- $product 包含 24 --\u0026gt; math.Pow： 指数运算 {{ $power := math.Pow 2 3 }} \u0026lt;!-- $power 包含 8 --\u0026gt; math.Product： 计算多个数字的乘积 {{ $result := math.Product 2 3 4 }} \u0026lt;!-- $result 包含 24 --\u0026gt; math.Round： 四舍五入 {{ $roundedValue := math.Round 4.5 }} \u0026lt;!-- $roundedValue 包含 5 --\u0026gt; math.Sqrt： 平方根 {{ $squareRoot := math.Sqrt 16 }} \u0026lt;!-- $squareRoot 包含 4 --\u0026gt; math.Sub： 减法 {{ $difference := math.Sub 10 3 }} \u0026lt;!-- $difference 包含 7 --\u0026gt; math.Sum： 计算多个数字的和 {{ $total := math.Sum 2 3 4 }} \u0026lt;!-- $total 包含 9 --\u0026gt; OS:系统 os.FileExists： 检查文件是否存在 {{ $filePath := \u0026#34;path/to/file.txt\u0026#34; }} {{ with resources.Get $filePath }} {{ $fileExists := ne .MediaType.Type \u0026#34;unknown\u0026#34; }} {{ if $fileExists }} \u0026lt;!-- 文件存在的处理 --\u0026gt; {{ else }} \u0026lt;!-- 文件不存在的处理 --\u0026gt; {{ end }} {{ end }} os.Getenv： 获取环境变量 在 Hugo 模板中无法直接获取环境变量。建议在生成网站前使用其他工具或脚本设置环境变量。\nos.ReadDir： 读取目录内容 {{ $dirPath := \u0026#34;path/to/directory\u0026#34; }} {{ $files := resources.Match $dirPath \u0026#34;**/*\u0026#34; }} {{ range $files }} {{ /* 处理每个文件 */ }} {{ end }} os.ReadFile： 读取文件内容 {{ $filePath := \u0026#34;path/to/file.txt\u0026#34; }} {{ with resources.Get $filePath }} {{ $fileContent := .Content }} \u0026lt;!-- 使用 $fileContent 进行进一步处理 --\u0026gt; {{ end }} os.Stat： 获取文件状态 {{ $filePath := \u0026#34;path/to/file.txt\u0026#34; }} {{ with resources.Get $filePath }} {{ $fileContent := .Content }} \u0026lt;!-- 使用 $fileContent 进行进一步处理 --\u0026gt; {{ end }} partial： 调用局部模板 {{ partial \u0026#34;myPartial.html\u0026#34; . }} \u0026lt;!-- 调用名为 \u0026#34;myPartial.html\u0026#34; 的局部模板，并传递当前上下文数据（.） --\u0026gt; partialCached： 调用缓存的局部模板 {{ partialCached \u0026#34;myCachedPartial.html\u0026#34; . \u0026#34;myCacheKey\u0026#34; }} \u0026lt;!-- 使用缓存键 \u0026#34;myCacheKey\u0026#34; 调用名为 \u0026#34;myCachedPartial.html\u0026#34; 的缓存局部模板，并传递当前上下文数据（.） --\u0026gt; 请注意，`partialCached` 函数允许您使用缓存键来缓存调用的结果，以提高性能。 Time:时间处理 AsTime: 这个函数可以将一个字符串表示的日期/时间值转换为一个time.Time类型的值。您可以指定一个时区，如果不指定，就使用本地时区。例如： {{ $input := \u0026#34;2023-11-27 16:06:22\u0026#34; }} {{ $timezone := \u0026#34;Asia/Singapore\u0026#34; }} {{ $result := time.AsTime $input $timezone }} {{/* result = 2023-11-27 16:06:22 +0800 +08 */}} Duration: 这个函数可以根据给定的时间单位和数字，返回一个time.Duration类型的值。时间单位可以是以下之一：ns，us，ms，s，m，h。例如： {{ $time_unit := \u0026#34;s\u0026#34; }} {{ $number := 60 }} {{ $result := time.Duration $time_unit $number }} {{/* result = 1m0s */}} Format: 这个函数可以将一个日期/时间值格式化为一个字符串，您可以指定一个布局来控制输出的格式。您也可以使用一些预定义的布局，如ANSIC，UnixDate，RFC3339等。例如： {{ $layout := \u0026#34;2006-01-02 15:04:05\u0026#34; }} {{ $input := time.Now }} {{ $result := time.Format $layout $input }} {{/* result = \u0026#34;2023-11-27 16:06:22\u0026#34; */}} Now: 这个函数可以返回当前的本地时间，是一个time.Time类型的值。例如： {{ $result := time.Now }} {{/* result = 2023-11-27 16:06:22 +0800 +08 */}} ParseDuration: 这个函数可以将一个字符串表示的持续时间值转换为一个time.Duration类型的值。字符串必须符合以下格式：[number][unit]，其中number是一个十进制数，unit是一个时间单位，可以是以下之一：ns，us，ms，s，m，h。例如： {{ $duration := \u0026#34;1h30m\u0026#34; }} {{ $result := time.ParseDuration $duration }} {{/* result = 1h30m0s */}} Layout string:格式化字符参照 时间 内容 年 \u0026ldquo;2006\u0026rdquo; \u0026ldquo;06\u0026rdquo; 月 \u0026ldquo;Jan\u0026rdquo; \u0026ldquo;January\u0026rdquo; \u0026ldquo;01\u0026rdquo; \u0026ldquo;1\u0026rdquo; 星期几 \u0026ldquo;Mon\u0026rdquo; \u0026ldquo;Monday\u0026rdquo; 月的第几天 \u0026ldquo;2\u0026rdquo; \u0026ldquo;_2\u0026rdquo; \u0026ldquo;02\u0026rdquo; 年的第几天 \u0026ldquo;__2\u0026rdquo; \u0026ldquo;002\u0026rdquo; 几点 \u0026ldquo;15\u0026rdquo; \u0026ldquo;3\u0026rdquo; \u0026ldquo;03\u0026rdquo; 几分 \u0026ldquo;4\u0026rdquo; \u0026ldquo;04\u0026rdquo; 几秒 \u0026ldquo;5\u0026rdquo; \u0026ldquo;05\u0026rdquo; 上午还是下午 \u0026ldquo;PM\u0026rdquo; 时区 \u0026ldquo;-0700\u0026rdquo; \u0026ldquo;-07:00\u0026rdquo; \u0026ldquo;-07\u0026rdquo; \u0026ldquo;-070000\u0026rdquo; \u0026ldquo;-07:00:00\u0026rdquo; Page:页面 Aliases: 当前页面的别名。\n{{ .Aliases }} AllTranslations: 当前页面的所有翻译版本。\n{{ .AllTranslations }} AlternativeOutputFormats: 当前页面的替代输出格式。\n{{ .AlternativeOutputFormats }} Ancestors: 当前页面的祖先页面。\n{{ .Ancestors }} BundleType: 内容包的类型。\n{{ .BundleType }} CodeOwners: 从仓库根目录获取 CODEOWNERS 文件。\n{{ .CodeOwners }} Content: 当前页面的原始内容。\n{{ .Content }} CurrentSection: 当前页面所属的部分。\n{{ .CurrentSection }} Data: 从 data 目录获取数据文件。\n{{ .Data }} Date: 当前页面的日期。\n{{ .Date }} Description: 当前页面的描述。\n{{ .Description }} Draft: 检查当前页面是否是草稿。\n{{ .Draft }} Eq: 检查两个值是否相等。\n{{ if eq .Variable1 .Variable2 }} {{ end }} **ExpiryDate:**当前页面的过期日期。 {{ .ExpiryDate }} **File:**当前内容文件的信息。 {{ .File }} **FirstSection:**当前页面所属的第一个部分。 {{ .FirstSection }} **Fragments:**当前内容的片段。 {{ .Fragments }} **FuzzyWordCount:**当前页面的模糊字数统计。 {{ .FuzzyWordCount }} **GetPage:**获取指定页面。 {{ getPage \u0026#34;path/to/page\u0026#34; }} **GetTerms:**获取给定分类法的术语。 {{ getTerms \u0026#34;categories\u0026#34; }} **GitInfo:**获取有关 Git 仓库的信息。 {{ .GitInfo }} **HasMenuCurrent:**检查菜单项是否当前选定。 {{ if .HasMenuCurrent }} \u0026lt;!-- do something --\u0026gt; {{ end }} **HasShortcode:**检查当前内容是否包含指定的 shortcode。 {{ if .HasShortcode \u0026#34;shortcodeName\u0026#34; }} \u0026lt;!-- do something --\u0026gt; {{ end }} **HeadingsFiltered:**返回过滤后的当前内容标题。 {{ .HeadingsFiltered \u0026#34;h2|h3\u0026#34; }} **InSection:**检查当前内容是否在指定部分中。 {{ inSection \u0026#34;sectionName\u0026#34; }} **IsAncestor:**检查页面是否为指定页面的祖先。 {{ .IsAncestor \u0026#34;path/to/ancestor\u0026#34; }} **IsDescendant:**检查页面是否为指定页面的后代。 {{ .IsDescendant \u0026#34;path/to/descendant\u0026#34; }} **IsHome:**检查当前内容是否为首页。 {{ .IsHome }} **IsMenuCurrent:**检查菜单项是否是当前页面。 {{ .IsMenuCurrent }} **IsNode:**检查变量是否为节点。 {{ .IsNode .Variable }} **IsPage:**检查变量是否为页面。 {{ .IsPage .Variable }} **IsSection:**检查变量是否为部分。 {{ .IsSection .Variable }} **IsTranslated:**检查当前页面是否有翻译。 {{ .IsTranslated }} **Keywords:**当前页面的关键字。 {{ .Keywords }} **Kind:**当前内容的种类（例如，\u0026ldquo;page\u0026rdquo; 或 \u0026ldquo;section\u0026rdquo;）。 {{ .Kind }} **Language:**当前页面的语言。 {{ .Language }} **Lastmod:**当前页面的最后修改时间。 {{ .Lastmod }} **Layout:**当前内容的布局。 {{ .Layout }} **Len:**返回切片、映射或字符串的长度。 {{ len .Variable }} **LinkTitle:**当前页面的链接标题。 {{ .LinkTitle }} **Next:**返回下一个同级页面。 {{ .Next }} **NextInSection:**返回同一部分中的下一个页面。 {{ .NextInSection }} **OutputFormats:**当前页面的输出 "},{"id":10,"href":"/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/markdown-%E8%AF%AD%E6%B3%95/","title":"markDown 语法","section":"技术","content":" 标题：使用\u0026quot;#\u0026ldquo;字符表示标题，数量代表标题级别，最多支持6级标题。例如：\n# 一级标题 ## 二级标题 ### 三级标题 ... ###### 六级标题 段落：段落之间以空行分隔。\n强调：使用\u0026rdquo;*\u0026ldquo;或\u0026rdquo;_\u0026ldquo;将需要强调的文本包围起来。例如：\n*斜体* _斜体_ **粗体** __粗体__ ***粗斜体*** ___粗斜体___ 列表：有序列表以数字和句点开始，无序列表以\u0026rdquo;*\u0026quot;、\u0026quot;+\u0026ldquo;或\u0026rdquo;-\u0026ldquo;开始。例如：\n1. 第一项 2. 第二项 3. 第三项 - 无序列表项1 - 无序列表项2 - 嵌套的无序列表项 - 更深层次的无序列表项 * 无序列表项A * 无序列表项B * 嵌套的无序列表项 * 更深层次的无序列表项 + 无序列表项X + 无序列表项Y + 嵌套的无序列表项 + 更深层次的无序列表项 链接：使用\u0026rdquo; 链接文本\u0026ldquo;的格式添加链接。例如：\n[Google](https://www.google.com) 图片：使用\u0026rdquo; \u0026ldquo;的格式插入图片。例如：\n![示例图片](https://example.com/image.jpg) 引用：使用\u0026rdquo;\u0026gt;\u0026ldquo;字符表示引用。例如：\n\u0026gt; 这是一段引用的文本。 代码块：使用三个反引号(`)包围代码块，并在开始位置指定代码语言（可选）。例如：\ndef hello_world(): print(\u0026#34;Hello, world!\u0026#34;) 表格：使用\u0026rdquo;|\u0026ldquo;和\u0026rdquo;-\u0026ldquo;分隔表头和表格内容，并使用\u0026rdquo;:\u0026ldquo;来对齐表格内容。例如：\n| 列1标题 | 列2标题 | |---------|---------| | 内容1 | 内容2 | | 内容3 | 内容4 | 左对齐列1标题 | 右对齐列2标题 :------------|-------------: 左对齐内容1 | 右对齐内容2 左对齐内容3 | 右对齐内容4 水平线：使用三个或更多连续的\u0026rdquo;*\u0026quot;、\u0026quot;-\u0026ldquo;或\u0026rdquo;_\u0026ldquo;表示水平线。例如：\n*** --- ___ "},{"id":11,"href":"/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/python-%E6%96%B9%E6%B3%95%E5%8F%82%E8%80%83/","title":"python 方法参考","section":"技术","content":" Number(数字) ceil(x)： 返回不小于 x 的最小整数 import math result = math.ceil(4.2) # 返回 5 floor(x)： 返回不大于 x 的最大整数 import math result = math.floor(4.8) # 返回 4 sqrt(x)： 返回 x 的平方根 import math result = math.sqrt(25) # 返回 5.0 pow(x, y)： 返回 x 的 y 次方 import math result = math.pow(2, 3) # 返回 8.0 exp(x)： 返回 e 的 x 次方 import math result = math.exp(2) # 返回 7.389... log(x)： 返回 x 的自然对数 import math result = math.log(10) # 返回 2.302... log10(x)： 返回 x 的以 10 为底的对数 import math result = math.log10(100) # 返回 2.0 sin(x)： 返回 x 弧度的正弦值 import math result = math.sin(math.pi/2) # 返回 1.0 cos(x)： 返回 x 弧度的余弦值 import math result = math.cos(0) # 返回 1.0 tan(x)： 返回 x 弧度的正切值 import math result = math.tan(math.pi/4) # 返回 1.0 random.random()： 返回 [0.0, 1.0) 范围内的随机浮点数 import random result = random.random() # 返回 0.523... random.randint(a, b)： 返回 [a, b] 范围内的随机整数 import random result = random.randint(1, 10) # 返回 5 random.choice(seq)： 从序列中随机选择一个元素 import random result = random.choice([\u0026#39;apple\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;orange\u0026#39;]) # 返回 \u0026#39;banana\u0026#39; random.shuffle(seq)： 随机打乱序列中的元素 import random mylist = [1, 2, 3, 4, 5] random.shuffle(mylist) # mylist 现在被随机打乱 random.sample(population, k)： 从总体中选择 k 个不重复的元素 import random result = random.sample([1, 2, 3, 4, 5], 3) # 返回 [2, 5, 1] sin(x)： 返回 x 弧度的正弦值 import math result = math.sin(math.pi/2) # 返回 1.0 cos(x)： 返回 x 弧度的余弦值 import math result = math.cos(0) # 返回 1.0 tan(x)： 返回 x 弧度的正切值 import math result = math.tan(math.pi/4) # 返回 1.0 asin(x)： 返回 x 的反正弦值 import math result = math.asin(1) # 返回 pi/2 acos(x)： 返回 x 的反余弦值 import math result = math.acos(0) # 返回 pi/2 atan(x)： 返回 x 的反正切值 import math result = math.atan(1) # 返回 pi/4 pi： 圆周率 import math result = math.pi # 返回 3.141592653589793 e： 自然对数的底 import math result = math.e # 返回 2.718281828459045 # String(字符串) #### **capitalize()：** 将字符串的第一个字符大写 ```python result = \u0026#39;hello world\u0026#39;.capitalize() # 返回 \u0026#39;Hello world\u0026#39; casefold()： 将字符串中所有字符转换为小写，并处理特殊字符 result = \u0026#39;Hello World\u0026#39;.casefold() # 返回 \u0026#39;hello world\u0026#39; center(width[, fillchar])： 返回一个指定宽度的居中字符串，可指定填充字符 result = \u0026#39;hello\u0026#39;.center(10) # 返回 \u0026#39; hello \u0026#39; count(sub[, start[, end]])： 返回字符串中子字符串出现的次数 result = \u0026#39;hello hello\u0026#39;.count(\u0026#39;hello\u0026#39;) # 返回 2 encode([encoding[, errors]])： 返回字符串的编码版本 result = \u0026#39;hello\u0026#39;.encode(\u0026#39;utf-8\u0026#39;) # 返回 b\u0026#39;hello\u0026#39; endswith(suffix[, start[, end]])： 检查字符串是否以指定后缀结束 result = \u0026#39;hello world\u0026#39;.endswith(\u0026#39;world\u0026#39;) # 返回 True expandtabs([tabsize])： 将字符串中的制表符扩展为空格 result = \u0026#39;hello\\tworld\u0026#39;.expandtabs(4) # 返回 \u0026#39;hello world\u0026#39; find(sub[, start[, end]])： 查找子字符串第一次出现的位置，未找到返回 -1 result = \u0026#39;hello world\u0026#39;.find(\u0026#39;world\u0026#39;) # 返回 6 **format(*args, kwargs)： 格式化字符串 result = \u0026#39;My name is {} and I\\\u0026#39;m {} years old\u0026#39;.format(\u0026#39;Alice\u0026#39;, 30) # 返回 \u0026#39;My name is Alice and I\u0026#39;m 30 years old\u0026#39; format_map(mapping)： 使用字典或其他映射来格式化字符串 result = \u0026#39;My name is {name} and I\\\u0026#39;m {age} years old\u0026#39;.format_map({\u0026#39;name\u0026#39;: \u0026#39;Alice\u0026#39;, \u0026#39;age\u0026#39;: 30}) # 返回 \u0026#39;My name is Alice and I\u0026#39;m 30 years old\u0026#39; index(sub[, start[, end]])： 查找子字符串第一次出现的位置，未找到引发 ValueError result = \u0026#39;hello world\u0026#39;.index(\u0026#39;world\u0026#39;) # 返回 6 isalnum()： 检查字符串是否由字母和数字组成 result = \u0026#39;hello123\u0026#39;.isalnum() # 返回 True isalpha()： 检查字符串是否由字母组成 result = \u0026#39;hello\u0026#39;.isalpha() # 返回 True isascii()： 检查字符串是否仅包含 ASCII 字符 result = \u0026#39;hello\u0026#39;.isascii() # 返回 True isdecimal()： 检查字符串是否只包含十进制字符 result = \u0026#39;12345\u0026#39;.isdecimal() # 返回 True isdigit()： 检查字符串是否只包含数字 result = \u0026#39;12345\u0026#39;.isdigit() # 返回 True isidentifier()： 检查字符串是否是有效的标识符 result = \u0026#39;hello123\u0026#39;.isidentifier() # 返回 False islower()： 检查字符串是否都是小写字母 result = \u0026#39;hello\u0026#39;.islower() # 返回 True isnumeric()： 检查字符串是否只包含数字字符 result = \u0026#39;12345\u0026#39;.isnumeric() # 返回 True isprintable()： 检查字符串是否是可打印的 result = \u0026#39;hello\\nworld\u0026#39;.isprintable() # 返回 False isspace()： 检查字符串是否只包含空格字符 result = \u0026#39; \u0026#39;.isspace() # 返回 True istitle()： 检查字符串是否是标题化的（每个单词的首字母大写） result = \u0026#39;Hello World\u0026#39;.istitle() # 返回 True isupper()： 检查字符串是否都是大写字母 result = \u0026#39;HELLO\u0026#39;.isupper() # 返回 True join(iterable)： 将可迭代对象的元素连接成字符串 result = \u0026#39;,\u0026#39;.join([\u0026#39;apple\u0026#39;, \u0026#39;banana\u0026#39;, \u0026#39;orange\u0026#39;]) # 返回 \u0026#39;apple,banana,orange\u0026#39; ljust(width[, fillchar])： 返回一个指定宽度的左对齐字符串，可指定填充字符 result = \u0026#39;hello\u0026#39;.ljust(10) # 返回 \u0026#39;hello \u0026#39; lower()： 将字符串转换为小写 result = \u0026#39;Hello World\u0026#39;.lower() # 返回 \u0026#39;hello world\u0026#39; lstrip([chars])： 去除字符串左边的指定字符，默认为空格 result = \u0026#39; hello\u0026#39;.lstrip() # 返回 \u0026#39;hello\u0026#39; maketrans(x[, y[, z]])： 创建字符映射转换表 trans = str.maketrans(\u0026#39;aeiou\u0026#39;, \u0026#39;12345\u0026#39;) partition(sep)： 根据第一次出现的分隔符将字符串分成三部分 result = \u0026#39;hello world\u0026#39;.partition(\u0026#39;o\u0026#39;) # 返回 (\u0026#39;hell\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39; world\u0026#39;) replace(old, new[, count])： 将字符串中的指定子字符串替换为新字符串 result = \u0026#39;hello world\u0026#39;.replace(\u0026#39;world\u0026#39;, \u0026#39;universe\u0026#39;) # 返回 \u0026#39;hello universe\u0026#39; rfind(sub[, start[, end]])： 查找子字符串最后一次出现的位置，未找到返回 -1 result = \u0026#39;hello world\u0026#39;.rfind(\u0026#39;o\u0026#39;) # 返回 7 rindex(sub[, start[, end]])： 查找子字符串最后一次出现的位置，未找到引发 ValueError result = \u0026#39;hello world\u0026#39;.rindex(\u0026#39;o\u0026#39;) # 返回 7 rjust(width[, fillchar])： 返回一个指定宽度的右对齐字符串，可指定填充字符 result = \u0026#39;hello\u0026#39;.rjust(10) # 返回 \u0026#39; hello\u0026#39; rpartition(sep)： 根据最后一次出现的分隔符将字符串分成三部分 result = \u0026#39;hello world\u0026#39;.rpartition(\u0026#39;o\u0026#39;) # 返回 (\u0026#39;hello w\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;rld\u0026#39;) rsplit([sep[, maxsplit]])： 从右边开始拆分字符串 result = \u0026#39;hello world\u0026#39;.rsplit(\u0026#39; \u0026#39;) # 返回 [\u0026#39;hello\u0026#39;, \u0026#39;world\u0026#39;] rstrip([chars])： 去除字符串右边的指定字符，默认为空格 result = \u0026#39;hello \u0026#39;.rstrip() # 返回 \u0026#39;hello\u0026#39; split([sep[, maxsplit]])： 拆分字符串 result = \u0026#39;hello world\u0026#39;.split(\u0026#39; \u0026#39;) # 返回 [\u0026#39;hello\u0026#39;, \u0026#39;world\u0026#39;] splitlines([keepends])： 按行拆分字符串 result = \u0026#39;hello\\nworld\u0026#39;.splitlines() # 返回 [\u0026#39;hello\u0026#39;, \u0026#39;world\u0026#39;] startswith(prefix[, start[, end]])： 检查字符串是否以指定前缀开头 result = \u0026#39;hello world\u0026#39;.startswith(\u0026#39;hello\u0026#39;) # 返回 True strip([chars])： 去除字符串两边的指定字符，默认为空格 result = \u0026#39; hello \u0026#39;.strip() # 返回 \u0026#39;hello\u0026#39; swapcase()： 将字符串中的大小写翻转 result = \u0026#39;Hello World\u0026#39;.swapcase() # 返回 \u0026#39;hELLO wORLD\u0026#39; title()： 将字符串转换为标题化的形式 result = \u0026#39;hello world\u0026#39;.title() # 返回 \u0026#39;Hello World\u0026#39; upper()： 将字符串转换为大写 result = \u0026#39;hello world\u0026#39;.upper() # 返回 \u0026#39;HELLO WORLD\u0026#39; zfill(width)： 返回一个指定宽度的右对齐字符串，前面填充0 result = \u0026#39;42\u0026#39;.zfill(5) # 返回 \u0026#39;00042\u0026#39; List(列表) len(list)： 返回列表元素的个数 result = len([1, 2, 3]) # 返回 3 *max(iterable, [, key, default])： 返回可迭代对象中最大的元素 result = max([1, 3, 2]) # 返回 3 *min(iterable, [, key, default])： 返回可迭代对象中最小的元素 result = min([1, 3, 2]) # 返回 1 sum(iterable, /, start=0)： 返回可迭代对象中所有元素的和 result = sum([1, 2, 3]) # 返回 6 *sorted(iterable, [, key, reverse])： 返回一个排序后的列表 result = sorted([3, 1, 2]) # 返回 [1, 2, 3] list(iterable)： 将可迭代对象转换为列表 result = list((1, 2, 3)) # 返回 [1, 2, 3] any(iterable)： 如果可迭代对象中至少有一个元素为 True，则返回 True result = any([False, True, False]) # 返回 True all(iterable)： 如果可迭代对象中所有元素都为 True，则返回 True result = all([True, True, True]) # 返回 True enumerate(iterable, start=0)： 返回可迭代对象中元素的索引和值 result = list(enumerate([\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;])) # 返回 [(0, \u0026#39;a\u0026#39;), (1, \u0026#39;b\u0026#39;), (2, \u0026#39;c\u0026#39;)] filter(function, iterable)： 使用函数过滤可迭代对象中的元素 result = list(filter(lambda x: x % 2 == 0, [1, 2, 3, 4])) # 返回 [2, 4] map(function, iterable, \u0026hellip;)： 将函数应用于可迭代对象中的每个元素 result = list(map(lambda x: x * 2, [1, 2, 3])) # 返回 [2, 4, 6] reversed(seq)： 返回反转的可迭代对象 result = list(reversed([1, 2, 3])) # 返回 [3, 2, 1] zip(iter1, iter2, \u0026hellip;)： 返回元组的迭代器，其中的元素来自各个可迭代对象 result = list(zip([1, 2, 3], [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;])) # 返回 [(1, \u0026#39;a\u0026#39;), (2, \u0026#39;b\u0026#39;), (3, \u0026#39;c\u0026#39;)] append(x)： 在列表末尾添加元素 mylist = [1, 2, 3] mylist.append(4) extend(iterable)： 将可迭代对象的元素追加到列表末尾 mylist = [1, 2, 3] mylist.extend([4, 5]) insert(i, x)： 在指定位置插入元素 mylist = [1, 2, 3] mylist.insert(1, 4) remove(x)： 移除列表中第一个值为 x 的元素 mylist = [1, 2, 3] mylist.remove(2) pop([i])： 移除并返回指定位置的元素，默认移除最后一个元素 mylist = [1, 2, 3] element = mylist.pop(1) clear()： 移除列表中的所有元素 mylist = [1, 2, 3] mylist.clear() index(x[, start[, end]])： 返回第一个值为 x 的元素的索引 mylist = [1, 2, 3] index = mylist.index(2) count(x)： 返回值为 x 的元素在列表中出现的次数 mylist = [1, 2, 2, 3] count = mylist.count(2) sort(*[, key, reverse])： 对列表进行排序 mylist = [3, 1, 2] mylist.sort() reverse()： 反转列表中的元素 mylist = [1, 2, 3] mylist.reverse() copy()： 返回列表的浅复制 mylist = [1, 2, 3] newlist = mylist.copy() Dict(字典) clear： 移除字典中的所有元素 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} mydict.clear() copy： 返回字典的浅复制 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} newdict = mydict.copy() fromkeys(seq[, value])： 创建一个新字典，以序列中的元素作为键，值为 value（默认为 None） result = dict.fromkeys([\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;], 0) # 返回 {\u0026#39;a\u0026#39;: 0, \u0026#39;b\u0026#39;: 0} get(key[, default])： 返回指定键的值，如果键不存在则返回默认值 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} result = mydict.get(\u0026#39;a\u0026#39;, 0) # 返回 1 items： 返回字典中包含的所有键值对的视图 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} result = mydict.items() # 返回 dict_items([(\u0026#39;a\u0026#39;, 1), (\u0026#39;b\u0026#39;, 2)]) keys： 返回字典中所有键的视图 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} result = mydict.keys() # 返回 dict_keys([\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;]) values： 返回字典中所有值的视图 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} result = mydict.values() # 返回 dict_values([1, 2]) pop(key[, default])： 移除并返回指定键的值，如果键不存在则返回默认值 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} result = mydict.pop(\u0026#39;a\u0026#39;) # 返回 1 popitem： 随机移除并返回字典中的一对键值对 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} result = mydict.popitem() # 返回 (\u0026#39;a\u0026#39;, 1) setdefault(key[, default])： 返回指定键的值，如果键不存在则设置默认值 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} result = mydict.setdefault(\u0026#39;c\u0026#39;, 0) # 返回 0 update([other])： 更新字典，将其他字典或键值对添加到该字典 mydict = {\u0026#39;a\u0026#39;: 1, \u0026#39;b\u0026#39;: 2} mydict.update({\u0026#39;c\u0026#39;: 3}) Set(集合) add： 向集合添加元素 myset = {1, 2, 3} myset.add(4) clear： 移除集合中的所有元素 myset = {1, 2, 3} myset.clear() copy： 返回集合的浅复制 myset = {1, 2, 3} newset = myset.copy() difference： 返回与其他集合的差集 myset = {1, 2, 3} other_set = {2, 3, 4} result = myset.difference(other_set) difference_update： 移除与其他集合的相同元素 myset = {1, 2, 3} other_set = {2, 3, 4} myset.difference_update(other_set) discard： 移除集合中的指定元素，如果不存在则不报错 myset = {1, 2, 3} myset.discard(2) intersection： 返回与其他集合的交集 myset = {1, 2, 3} other_set = {2, 3, 4} result = myset.intersection(other_set) intersection_update： 保留与其他集合的交集，移除其他元素 myset = {1, 2, 3} other_set = {2, 3, 4} myset.intersection_update(other_set) isdisjoint： 如果两个集合没有相同的元素，返回 True myset = {1, 2, 3} other_set = {4, 5, 6} result = myset.isdisjoint(other_set) issubset： 如果集合是其他集合的子集，返回 True myset = {1, 2} other_set = {1, 2, 3} result = myset.issubset(other_set) issuperset： 如果集合是其他集合的超集，返回 True myset = {1, 2, 3} other_set = {1, 2} result = myset.issuperset(other_set) pop： 移除并返回集合中的一个任意元素，如果集合为空则报错 myset = {1, 2, 3} element = myset.pop() remove： 移除集合中的指定元素，如果不存在则报错 myset = {1, 2, 3} myset.remove(2) symmetric_difference： 返回与其他集合的对称差集 myset = {1, 2, 3} other_set = {2, 3, 4} result = myset.symmetric_difference(other_set) symmetric_difference_update： 更新集合为与其他集合的对称差集 myset = {1, 2, 3} other_set = {2, 3, 4} myset.symmetric_difference_update(other_set) union： 返回与其他集合的并集 myset = {1, 2, 3} other_set = {3, 4, 5} result = myset.union(other_set) update： 更新集合为与其他集合的并集 myset = {1, 2, 3} other_set = {3, 4, 5} myset.update(other_set) File(文件) 以下是 Python 中与文件 (File) 相关的方法：\nopen(file, mode=\u0026lsquo;r\u0026rsquo;, buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)： 打开文件并返回文件对象 file = open(\u0026#39;example.txt\u0026#39;, \u0026#39;r\u0026#39;) # 打开名为 \u0026#39;example.txt\u0026#39; 的文件以供读取 file.read(size=-1)： 读取文件中的指定字节数或全部内容 content = file.read() # 读取整个文件内容 file.readline(size=-1)： 读取文件中的一行内容 line = file.readline() # 读取文件的一行 file.readlines(hint=-1)： 读取文件中的所有行并返回列表 lines = file.readlines() # 读取文件的所有行并返回列表 file.write(string)： 将字符串写入文件 file.write(\u0026#39;Hello, World!\u0026#39;) # 将字符串写入文件 file.writelines(lines)： 将字符串列表写入文件 lines = [\u0026#39;Line 1\\n\u0026#39;, \u0026#39;Line 2\\n\u0026#39;, \u0026#39;Line 3\\n\u0026#39;] file.writelines(lines) # 将字符串列表写入文件 file.flush()： 刷新文件缓冲区 file.flush() # 刷新文件缓冲区 file.close()： 关闭文件 file.close() # 关闭文件 file.seek(offset, whence=0)： 移动文件指针到指定位置 file.seek(0) # 移动文件指针到文件开头 file.tell()： 返回文件指针当前位置 position = file.tell() # 返回文件指针当前位置 file.truncate(size=None)： 截断文件到指定大小 file.truncate(10) # 将文件截断到 10 个字节 os.path.exists(path)： 检查文件或目录是否存在 import os exists = os.path.exists(\u0026#39;example.txt\u0026#39;) # 检查文件是否存在 os.path.isfile(path)： 检查路径是否为文件 import os is_file = os.path.isfile(\u0026#39;example.txt\u0026#39;) # 检查路径是否为文件 os.path.isdir(path)： 检查路径是否为目录 import os is_directory = os.path.isdir(\u0026#39;my_folder\u0026#39;) # 检查路径是否为目录 os.path.getsize(path)： 获取文件大小 import os size = os.path.getsize(\u0026#39;example.txt\u0026#39;) # 获取文件大小 这些方法用于处理文件的打开、读取、写入、关闭等操作，同时也包括了一些通过 os 模块检查文件状态的方法。\nOS(系统) 以下是 Python 3 中与文件和目录操作相关的一些常用的 os 模块方法：\nos.getcwd()： 获取当前工作目录 import os current_directory = os.getcwd() # 获取当前工作目录 os.chdir(path)： 修改当前工作目录 import os os.chdir(\u0026#39;/path/to/directory\u0026#39;) # 将当前工作目录切换到指定路径 os.listdir(path=\u0026rsquo;.\u0026rsquo;)： 返回指定目录下的所有文件和目录列表 import os contents = os.listdir(\u0026#39;/path/to/directory\u0026#39;) # 获取指定目录下的所有文件和目录列表 *os.mkdir(path, mode=0o777, , dir_fd=None)： 创建新目录 import os os.mkdir(\u0026#39;/path/to/new_directory\u0026#39;) # 在指定路径下创建新目录 os.makedirs(name, mode=0o777, exist_ok=False)： 递归地创建新目录 import os os.makedirs(\u0026#39;/path/to/new/directory\u0026#39;, exist_ok=True) # 递归地在指定路径下创建新目录，如果目录已存在且 exist_ok 为 True，则不会引发异常 *os.rmdir(path, , dir_fd=None)： 删除目录 import os os.rmdir(\u0026#39;/path/to/directory_to_remove\u0026#39;) # 删除指定目录 os.removedirs(path)： 递归地删除目录 import os os.removedirs(\u0026#39;/path/to/directory_to_remove\u0026#39;) # 递归地删除指定目录及其上级目录（如果为空） *os.remove(path, , dir_fd=None)： 删除文件 import os os.remove(\u0026#39;/path/to/file_to_remove\u0026#39;) # 删除指定文件 *os.rename(src, dst, , src_dir_fd=None, dst_dir_fd=None)： 重命名文件或目录 import os os.rename(\u0026#39;/path/to/old_name\u0026#39;, \u0026#39;/path/to/new_name\u0026#39;) # 重命名文件或目录 os.path.exists(path)： 检查文件或目录是否存在 import os exists = os.path.exists(\u0026#39;/path/to/file_or_directory\u0026#39;) # 检查文件或目录是否存在 os.path.isfile(path)： 检查路径是否为文件 import os is_file = os.path.isfile(\u0026#39;/path/to/file\u0026#39;) # 检查路径是否为文件 os.path.isdir(path)： 检查路径是否为目录 import os is_directory = os.path.isdir(\u0026#39;/path/to/directory\u0026#39;) # 检查路径是否为目录 os.path.join(path1, path2, \u0026hellip;)： 拼接路径 import os full_path = os.path.join(\u0026#39;/path/to\u0026#39;, \u0026#39;file_or_directory\u0026#39;) # 拼接路径，得到 \u0026#39;/path/to/file_or_directory\u0026#39; os.path.abspath(path)： 获取绝对路径 import os absolute_path = os.path.abspath(\u0026#39;relative_path\u0026#39;) # 获取相对路径对应的绝对路径 Datetime(日期和时间) now()： 获取当前日期和时间 from datetime import datetime now = datetime.now() strptime(date_string, format)： 将字符串转换为日期时间对象 from datetime import datetime date_str = \u0026#39;2023-01-01\u0026#39; date_format = \u0026#39;%Y-%m-%d\u0026#39; date_obj = datetime.strptime(date_str, date_format) strftime(format)： 将日期时间对象格式化为字符串 formatted_date = date_obj.strftime(\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;) date()： 获取日期部分 date_part = date_obj.date() time()： 获取时间部分 time_part = date_obj.time() year： 获取年份 year = date_obj.year month： 获取月份 month = date_obj.month day： 获取日期 day = date_obj.day hour： 获取小时 hour = date_obj.hour minute： 获取分钟 minute = date_obj.minute second： 获取秒数 second = date_obj.second timestamp()： 将日期时间对象转换为 POSIX 时间戳 timestamp = date_obj.timestamp() fromtimestamp(timestamp)： 将 POSIX 时间戳转换为日期时间对象 from_timestamp = datetime.fromtimestamp(timestamp) timedelta(days, seconds, microseconds)： 表示两个日期时间对象之间的差异 difference = date_obj1 - date_obj2 JSON dumps(obj, indent=None, separators=None, default=None, sort_keys=False)： 将 Python 对象转换为 JSON 字符串 import json data = {\u0026#39;name\u0026#39;: \u0026#39;John\u0026#39;, \u0026#39;age\u0026#39;: 30, \u0026#39;city\u0026#39;: \u0026#39;New York\u0026#39;} json_str = json.dumps(data, indent=2, sort_keys=True) loads(s, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None)： 将 JSON 字符串转换为 Python 对象 import json json_str = \u0026#39;{\u0026#34;name\u0026#34;: \u0026#34;John\u0026#34;, \u0026#34;age\u0026#34;: 30, \u0026#34;city\u0026#34;: \u0026#34;New York\u0026#34;}\u0026#39; python_obj = json.loads(json_str) **dump(obj, fp, *, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, kw)： 将 Python 对象写入 JSON 文件 import json data = {\u0026#39;name\u0026#39;: \u0026#39;John\u0026#39;, \u0026#39;age\u0026#39;: 30, \u0026#39;city\u0026#39;: \u0026#39;New York\u0026#39;} with open(\u0026#39;data.json\u0026#39;, \u0026#39;w\u0026#39;) as json_file: json.dump(data, json_file, indent=2, sort_keys=True) **load(fp, *, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, kw)： 从 JSON 文件中读取数据并返回 Python 对象 import json with open(\u0026#39;data.json\u0026#39;, \u0026#39;r\u0026#39;) as json_file: python_obj = json.load(json_file) JSONEncoder.default(o)： JSON 编码器的默认方法，用于处理不可序列化的对象 class MyEncoder(json.JSONEncoder): def default(self, o): if isinstance(o, MyCustomClass): return o.__dict__ return super().default(o) data = {\u0026#39;name\u0026#39;: \u0026#39;John\u0026#39;, \u0026#39;age\u0026#39;: 30, \u0026#39;custom_obj\u0026#39;: MyCustomClass()} json_str = json.dumps(data, cls=MyEncoder) JSONDecoder.object_hook(d)： JSON 解码器的默认方法，用于处理对象字典 class MyDecoder(json.JSONDecoder): def object_hook(self, d): if \u0026#39;custom_obj\u0026#39; in d: return MyCustomClass(**d[\u0026#39;custom_obj\u0026#39;]) return d json_str = \u0026#39;{\u0026#34;name\u0026#34;: \u0026#34;John\u0026#34;, \u0026#34;age\u0026#34;: 30, \u0026#34;custom_obj\u0026#34;: {\u0026#34;property1\u0026#34;: \u0026#34;value1\u0026#34;, \u0026#34;property2\u0026#34;: \u0026#34;value2\u0026#34;}}\u0026#39; python_obj = json.loads(json_str, cls=MyDecoder) Time time()： 返回当前时间的时间戳（1970纪元后经过的浮点秒数） import time timestamp = time.time() sleep(secs)： 推迟调用线程的运行，secs指秒数 import time print(\u0026#34;Start\u0026#34;) time.sleep(2) # 暂停2秒 print(\u0026#34;End\u0026#34;) localtime([secs])： 将秒数转换为表示当地时间的 struct_time，secs为可选参数，默认为当前时间戳 import time local_time = time.localtime() strftime(format, t)： 格式化表示时间的字符串，format为格式化字符串，t为可选参数，默认为当前时间 import time formatted_time = time.strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;, time.localtime()) strptime(string, format)： 将格式化字符串转换为 struct_time import time time_string = \u0026#34;2023-01-01 12:00:00\u0026#34; structured_time = time.strptime(time_string, \u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;) mktime(t)： 将 struct_time 转换为秒数 import time structured_time = time.localtime() timestamp = time.mktime(structured_time) clock()： 返回自程序开始以来的CPU时间，包含了睡眠时间 import time start_time = time.clock() # 执行一些任务 end_time = time.clock() elapsed_time = end_time - start_time process_time()： 返回当前进程的系统和用户CPU时间的总和 import time start_time = time.process_time() # 执行一些任务 end_time = time.process_time() elapsed_time = end_time - start_time "},{"id":12,"href":"/posts/%E6%9D%82%E6%80%9D/emjoy/","title":"表情","section":"杂思","content":" 笑脸与人 😀😃😄😁😆😅🤣😂🙂🙃🫠😉😊😇🥰😍🤩😘😗😚😙🥲😋😛😜🤪😝🤑🤗🤭🫢🫣🤫🤔🫡🤐🤨😐😑😶🫥😶‍🌫️😏😒🙄😬😮‍💨🤥😌😔😪🤤😴😷🤒🤕🤢🤮🤧🥵🥶🥴😵😵‍💫🤯🤠🥳🥸😎🤓🧐😕🫤😟🙁☹️😮😯😲😳🥺🥹😦😧😨😰😥😢😭😱😖😣😞😓😩😫🥱😤😡😠🤬😈👿💀☠️💩🤡👹👺👻👽👾🤖😺😸😹😻😼😽🙀😿😾🙈🙉🙊💋💯💢💥💫💦💨🕳️💤👋🤚🖐️✋🖖🫱🫲🫳🫴👌🤌🤏✌️🤞🫰🤟🤘🤙👈👉👆🖕👇☝️🫵👍👎✊👊🤛🤜👏🙌🫶👐🤲🤝🙏✍️💅🤳💪🦾🦿🦵🦶👂🦻👃🧠🫀🫁🦷🦴👀👁️👅👄🫦👶🧒👦👧🧑👱👨🧔🧔‍♂️🧔‍♀️👨‍🦰👨‍🦱👨‍🦳👨‍🦲👩👩‍🦰🧑‍🦰👩‍🦱🧑‍🦱👩‍🦳🧑‍🦳👩‍🦲🧑‍🦲👱‍♀️👱‍♂️🧓👴👵🙍🙍‍♂️🙍‍♀️🙎🙎‍♂️🙎‍♀️🙅🙅‍♂️🙅‍♀️🙆🙆‍♂️🙆‍♀️💁💁‍♂️💁‍♀️🙋🙋‍♂️🙋‍♀️🧏🧏‍♂️🧏‍♀️🙇🙇‍♂️🙇‍♀️🤦🤦‍♂️🤦‍♀️🤷🤷‍♂️🤷‍♀️🫅🤴👸👳👳‍♂️👳‍♀️👲🧕🤵🤵‍♂️🤵‍♀️👰👰‍♂️👰‍♀️🤰🫃🫄🤱👩‍🍼👨‍🍼🧑‍🍼🧍🧍‍♂️🧍‍♀️🧎🧎‍♂️🧎‍♀️💃🕺🛀🛌🧑‍🤝‍🧑👭👫👬💏👩‍❤️‍💋‍👨👨‍❤️‍💋‍👨👩‍❤️‍💋‍👩💑👩‍❤️‍👨👨‍❤️‍👨👩‍❤️‍👩💌💘💝💖💗💓💞💕💟❣️💔❤❤️‍🩹❤️🧡💛💚💙💜🤎🖤🤍\n动物与自然 🐵🐒🦍🦧🐶🐕🦮🐕‍🦺🐩🐺🦊🦝🐱🐈🐈‍⬛🦁🐯🐅🐆🐴🐎🦄🦓🦌🦬🐮🐂🐃🐄🐷🐖🐗🐽🐏🐑🐐🐪🐫🦙🦒🐘🦣🦏🦛🐭🐁🐀🐹🐰🐇🐿️🦫🦔🦇🐻🐻‍❄️🐨🐼🦥🦦🦨🦘🦡🐾🦃🐔🐓🐣🐤🐥🐦🐧🕊️🦅🦆🦢🦉🦤🪶🦩🦚🦜🐦‍⬛🐸🐊🐢🦎🐍🐲🐉🦕🦖🐳🐋🐬🦭🐟🐠🐡🦈🐙🐚🪸🐌🦋🐛🐜🐝🪲🐞🦗🪳🕷️🕸️🦂🦟🪰🪱🦠💐🌸💮🪷🏵️🌹🥀🌺🌻🌼🌷🌱🪴🌲🌳🌴🌵🌾🌿☘️🍀🍁🍂🍃🪹🪺🍄\n饮食 🍇🍈🍉🍊🍋🍌🍍🥭🍎🍏🍐🍑🍒🍓🫐🥝🍅🫒🥥🥑🍆🥔🥕🌽🌶️🫑🥒🥬🥦🧄🧅🥜🫘🌰🍞🥐🥖🫓🥨🥯🥞🧇🧀🍖🍗🥩🥓🍔🍟🍕🌭🥪🌮🌯🫔🥙🧆🥚🍳🥘🍲🫕🥣🥗🍿🧈🧂🥫🍱🍘🍙🍚🍛🍜🍝🍠🍢🍣🍤🍥🥮🍡🥟🥠🥡🦀🦞🦐🦑🦪🍦🍧🍨🍩🍪🎂🍰🧁🥧🍫🍬🍭🍮🍯🍼🥛☕🫖🍵🍶🍾🍷🍸🍹🍺🍻🥂🥃🫗🥤🧋🧃🧉🧊🥢🍽️🍴🥄🔪🫙🏺\n行为 🎃🎄🎆🎇🧨✨🎈🎉🎊🎋🎍🎎🎏🎐🎑🧧🎀🎁🎗️🎟️🎫🎖️🏆🏅🥇🥈🥉⚽⚾🥎🏀🏐🏈🏉🎾🥏🎳🏏🏑🏒🥍🏓🏸🥊🥋🥅⛳⛸️🎣🤿🎽🎿🛷🥌🎯🪀🪁🔫🎱🔮🪄🎮🕹️🎰🎲🧩🧸🪅🪩🪆♠️♥️♦️♣️♟️🃏🀄🎴🎭🖼️🎨🧵🪡🧶🪢🧑‍⚕️👨‍⚕️👩‍⚕️🧑‍🎓👨‍🎓👩‍🎓🧑‍🏫👨‍🏫👩‍🏫🧑‍⚖️👨‍⚖️👩‍⚖️🧑‍🌾👨‍🌾👩‍🌾🧑‍🍳👨‍🍳👩‍🍳🧑‍🔧👨‍🔧👩‍🔧🧑‍🏭👨‍🏭👩‍🏭🧑‍💼👨‍💼👩‍💼🧑‍🔬👨‍🔬👩‍🔬🧑‍💻👨‍💻👩‍💻🧑‍🎤👨‍🎤👩‍🎤🧑‍🎨👨‍🎨👩‍🎨🧑‍✈️👨‍✈️👩‍✈️🧑‍🚀👨‍🚀👩‍🚀🧑‍🚒👨‍🚒👩‍🚒👮👮‍♂️👮‍♀️🕵️🕵️‍♂️🕵️‍♀️💂💂‍♂️💂‍♀️🥷👷👷‍♂️👷‍♀️👼🎅🤶🧑‍🎄🦸🦸‍♂️🦸‍♀️🦹🦹‍♂️🦹‍♀️🧙🧙‍♂️🧙‍♀️🧚🧚‍♂️🧚‍♀️🧛🧛‍♂️🧛‍♀️🧜🧜‍♂️🧜‍♀️🧝🧝‍♂️🧝‍♀️🧞🧞‍♂️🧞‍♀️🧟🧟‍♂️🧟‍♀️🧌💆💆‍♂️💆‍♀️🧑‍🦯👨‍🦯👩‍🦯🧑‍🦼👨‍🦼👩‍🦼🧑‍🦽👨‍🦽👩‍🦽🏃🏃‍♂️🏃‍♀️🚶🚶‍♂️🚶‍♀️💇💇‍♂️💇‍♀️🕴️👯👯‍♂️👯‍♀️🧖🧖‍♂️🧖‍♀️🧗🧗‍♂️🧗‍♀️🤺🏇⛷️🏂🏌️🏌️‍♂️🏌️‍♀️🏄🏄‍♂️🏄‍♀️🚣🚣‍♂️🚣‍♀️🏊🏊‍♂️🏊‍♀️⛹️⛹️‍♂️⛹️‍♀️🏋️🏋️‍♂️🏋️‍♀️🚴🚴‍♂️🚴‍♀️🚵🚵‍♂️🚵‍♀️🤸🤸‍♂️🤸‍♀️🤼🤼‍♂️🤼‍♀️🤽🤽‍♂️🤽‍♀️🤾🤾‍♂️🤾‍♀️🤹🤹‍♂️🤹‍♀️🧘🧘‍♂️🧘‍♀️👪👨‍👩‍👦👨‍👩‍👧👨‍👩‍👧‍👦👨‍👩‍👦‍👦👨‍👩‍👧‍👧👨‍👨‍👦👨‍👨‍👧👨‍👨‍👧‍👦👨‍👨‍👦‍👦👨‍👨‍👧‍👧👩‍👩‍👦👩‍👩‍👧👩‍👩‍👧‍👦👩‍👩‍👦‍👦👩‍👩‍👧‍👧👨‍👦👨‍👦‍👦👨‍👧👨‍👧‍👦👨‍👧‍👧👩‍👦👩‍👦‍👦👩‍👧👩‍👧‍👦👩‍👧‍👧\n出行与地点 🌍🌎🌏🌐🗺️🗾🧭🏔️⛰️🌋🗻🏕️🏖️🏜️🏝️🏞️🏟️🏛️🏗️🧱🪨🪵🛖🏘️🏚️🏠🏡🏢🏣🏤🏥🏦🏨🏩🏪🏫🏬🏭🏯🏰💒🗼🗽⛪🕌🛕🕍⛩️🕋⛲⛺🌁🌃🏙️🌄🌅🌆🌇🌉♨️🎠🛝🎡🎢💈🎪🚂🚃🚄🚅🚆🚇🚈🚉🚊🚝🚞🚋🚌🚍🚎🚐🚑🚒🚓🚔🚕🚖🚗🚘🚙🛻🚚🚛🚜🏎️🏍️🛵🦽🦼🛺🚲🛴🛹🛼🚏🛣️🛤️🛢️⛽🛞🚨🚥🚦🛑🚧⚓🛟⛵🛶🚤🛳️⛴️🛥️🚢✈️🛩️🛫🛬🪂💺🚁🚟🚠🚡🛰️🚀🛸🛎️🧳⌛⏳⌚⏰⏱️⏲️🕰️🕛🕧🕐🕜🕑🕝🕒🕞🕓🕟🕔🕠🕕🕡🕖🕢🕗🕣🕘🕤🕙🕥🕚🕦🌑🌒🌓🌔🌕🌖🌗🌘🌙🌚🌛🌜🌡️☀️🌝🌞🪐⭐🌟🌠🌌☁️⛅⛈️🌤️🌥️🌦️🌧️🌨️🌩️🌪️🌫️🌬️🌀🌈🌂☂️☔⛱️⚡❄️☃️⛄☄️🔥💧🌊\n物体 👓🕶️🥽🥼🦺👔👕👖🧣🧤🧥🧦👗👘🥻🩱🩲🩳👙👚👛👜👝🛍️🎒🩴👞👟🥾🥿👠👡🩰👢🪮👑👒🎩🎓🧢🪖⛑️📿💄💍💎🔇🔈🔉🔊📢📣📯🔔🔕🎼🎵🎶🎙️🎚️🎛️🎤🎧📻🎷🪗🎸🎹🎺🎻🪕🥁🪘📱📲☎️📞📟📠🔋🪫🔌💻🖥️🖨️⌨️🖱️🖲️💽💾💿📀🧮🎥🎞️📽️🎬📺📷📸📹📼🔍🔎🕯️💡🔦🏮🪔📔📕📖📗📘📙📚📓📒📃📜📄📰🗞️📑🔖🏷️💰🪙💴💵💶💷💸💳🧾💹✉️📧📨📩📤📥📦📫📪📬📭📮🗳️✏️✒️🖋️🖊️🖌️🖍️📝💼📁📂🗂️📅📆🗒️🗓️📇📈📉📊📋📌📍📎🖇️📏📐✂️🗃️🗄️🗑️🔒🔓🔏🔐🔑🗝️🔨🪓⛏️⚒️🛠️🗡️⚔️💣🪃🏹🛡️🪚🔧🪛🔩⚙️🗜️⚖️🦯🔗⛓️🪝🧰🧲🪜⚗️🧪🧫🧬🔬🔭📡💉🩸💊🩹🩼🩺🩻🚪🛗🪞🪟🛏️🛋️🪑🚽🪠🚿🛁🪤🪒🧴🧷🧹🧺🧻🪣🧼🫧🪥🧽🧯🛒🚬⚰️🪦⚱️🧿🪬🗿🪧🪪\n符号 🏧🚮🚰♿🚹🚺🚻🚼🚾🛂🛃🛄🛅🗣️👤👥🫂👣\n⚠️🚸⛔🚫🚳🚭🚯🚱🚷📵🔞☢️☣️\n⬆️↗️➡️↘️⬇️↙️⬅️↖️↕️↔️↩️↪️⤴️⤵️🔃🔄🔙🔚🔛🔜🔝\n🛐⚛️🕉️✡️☸️☯️✝️☦️☪️☮️🕎🔯♈♉♊♋♌♍♎♏♐♑♒♓⛎\n🔀🔁🔂▶️⏩⏭️⏯️◀️⏪⏮️🔼⏫🔽⏬⏸️⏹️⏺️⏏️🎦\n🔅🔆📶🛜📳📴♀️♂️⚧️✖️➕➖➗🟰♾️‼️⁉️❓❔❕❗〰️💱💲⚕️♻️⚜️🔱📛🔰⭕✅☑️✔️❌❎➰➿〽️✳️✴️❇️©️®️™️\n#️⃣*️⃣0️⃣1️⃣2️⃣3️⃣4️⃣5️⃣6️⃣7️⃣8️⃣9️⃣🔟🔠🔡🔢🔣🔤🅰️🆎🅱️🆑🆒🆓ℹ️🆔Ⓜ️🆕🆖🅾️🆗🅿️🆘🆙🆚🈁🈂️🈷️🈶🈯🉐🈹🈚🈲🉑🈸🈴🈳㊗️㊙️🈺🈵\n🔴🟠🟡🟢🔵🟣🟤⚫⚪🟥🟧🟨🟩🟦🟪🟫⬛⬜◼️◻️◾◽▪️▫️\n🔶🔷🔸🔹🔺🔻💠🔘🔳🔲💬👁️‍🗨️🗨️🗯️💭\n旗帜 🏁🚩🎌🏴🏳️🏳️‍🌈🏳️‍⚧️🏴‍☠️🇦🇨🇦🇩🇦🇪🇦🇫🇦🇬🇦🇮🇦🇱🇦🇲🇦🇴🇦🇶🇦🇷🇦🇸🇦🇹🇦🇺🇦🇼🇦🇽🇦🇿🇧🇦🇧🇧🇧🇩🇧🇪🇧🇫🇧🇬🇧🇭🇧🇮🇧🇯🇧🇱🇧🇲🇧🇳🇧🇴🇧🇶🇧🇷🇧🇸🇧🇹🇧🇻🇧🇼🇧🇾🇧🇿🇨🇦🇨🇨🇨🇩🇨🇫🇨🇬🇨🇭🇨🇮🇨🇰🇨🇱🇨🇲🇨🇳🇨🇴🇨🇵🇨🇷🇨🇺🇨🇻🇨🇼🇨🇽🇨🇾🇨🇿🇩🇪🇩🇬🇩🇯🇩🇰🇩🇲🇩🇴🇩🇿🇪🇦🇪🇨🇪🇪🇪🇬🇪🇭🇪🇷🇪🇸🇪🇹🇪🇺🇫🇮🇫🇯🇫🇰🇫🇲🇫🇴🇫🇷🇬🇦🇬🇧🇬🇩🇬🇪🇬🇫🇬🇬🇬🇭🇬🇮🇬🇱🇬🇲🇬🇳🇬🇵🇬🇶🇬🇷🇬🇸🇬🇹🇬🇺🇬🇼🇬🇾🇭🇰🇭🇲🇭🇳🇭🇷🇭🇹🇭🇺🇮🇨🇮🇩🇮🇪🇮🇱🇮🇲🇮🇳🇮🇴🇮🇶🇮🇷🇮🇸🇮🇹🇯🇪🇯🇲🇯🇴🇯🇵🇰🇪🇰🇬🇰🇭🇰🇮🇰🇲🇰🇳🇰🇵🇰🇷🇰🇼🇰🇾🇰🇿🇱🇦🇱🇧🇱🇨🇱🇮🇱🇰🇱🇷🇱🇸🇱🇹🇱🇺🇱🇻🇱🇾🇲🇦🇲🇨🇲🇩🇲🇪🇲🇫🇲🇬🇲🇭🇲🇰🇲🇱🇲🇲🇲🇳🇲🇴🇲🇵🇲🇶🇲🇷🇲🇸🇲🇹🇲🇺🇲🇻🇲🇼🇲🇽🇲🇾🇲🇿🇳🇦🇳🇨🇳🇪🇳🇫🇳🇬🇳🇮🇳🇱🇳🇴🇳🇵🇳🇷🇳🇺🇳🇿🇴🇲🇵🇦🇵🇪🇵🇫🇵🇬🇵🇭🇵🇰🇵🇱🇵🇲🇵🇳🇵🇷🇵🇸🇵🇹🇵🇼🇵🇾🇶🇦🇷🇪🇷🇴🇷🇸🇷🇺🇷🇼🇸🇦🇸🇧🇸🇨🇸🇩🇸🇪🇸🇬🇸🇭🇸🇮🇸🇯🇸🇰🇸🇱🇸🇲🇸🇳🇸🇴🇸🇷🇸🇸🇸🇹🇸🇻🇸🇽🇸🇾🇸🇿🇹🇦🇹🇨🇹🇩🇹🇫🇹🇬🇹🇭🇹🇯🇹🇰🇹🇱🇹🇲🇹🇳🇹🇴🇹🇷🇹🇹🇹🇻🇹🇼🇹🇿🇺🇦🇺🇬🇺🇲🇺🇳🇺🇸🇺🇾🇺🇿🇻🇦🇻🇨🇻🇪🇻🇬🇻🇮🇻🇳🇻🇺🇼🇫🇼🇸🇽🇰🇾🇪🇾🇹🇿🇦🇿🇲🇿🇼🏴󠁧󠁢󠁥󠁮󠁧󠁿🏴󠁧󠁢󠁳󠁣󠁴󠁿🏴󠁧󠁢󠁷󠁬󠁳󠁿\n"},{"id":13,"href":"/posts/%E6%9D%82%E6%80%9D/%E4%B8%81%E4%BB%B2%E7%A4%BC%E4%B8%8E%E6%9F%B4%E9%9D%99%E7%A2%B3%E6%8E%92%E6%94%BE/","title":"丁仲礼院士与柴静【碳排放】","section":"杂思","content":"柴静:这次哥本哈根(气候会议)\n丁仲礼:我\n"},{"id":14,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E5%85%B3%E4%BA%8E%E7%AF%AE%E7%90%83/","title":"关于篮球","section":"个人","content":"健壮的身体和娴熟的技术\n关于投篮 动作要点: 调整脚步,左脚在前,右脚在后 想象下面有个凳子坐下去,接着像弹簧一样起来 辅助手确定最左出手范围，控制方向 直臂出手,打直手腕 手指拨球,压腕让球保持高度和旋速 保持投篮动作 目标是弧度尽量高，发力尽量轻松 要往上发力投篮，就要往下下面压，下半身和上半身要发力不脱节 投篮手不要抓球，食指和中指张开，压腕时合拢 辅助手确定投篮范围，控制方向 在脚发力完成之前， 投篮夹角＜90度 投篮弧度要是一个抛物线，高度要高于篮板上沿 几个重要的指标：球旋速、球高度 关于上篮 果冻上篮，手心正对着篮板，旋球到篮板的左上角或者右上角 多观察全局位置 攻击前侧脚 关于运球 减少运球时间 只突破不经常终结，多多分球 踮脚尖走路能锻炼小腿肌肉和踝关节稳定性。 一直收肚子能减少身体负担 "},{"id":15,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E5%85%B3%E4%BA%8E%E7%9D%A1%E8%A7%89/","title":"关于睡觉","section":"个人","content":" 喝牛奶 晒太阳（促进褪黑素分泌） 晚上10点半以后不看手机 不焦虑 多听音乐 "},{"id":16,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E5%85%B3%E4%BA%8E%E6%88%91/","title":"关于我","section":"个人","content":" 个人介绍 23 岁, 1年工作经验,软工专业, 一名软件开发者。\n热爱互联网行业, 擅长做后端开发, 略懂一点对话AI。\n爱做项目, 编程 5 年间, 有 15+ 独立项目开发经验 。\n喜欢记录总结, www.ltao.cc 博客目前已运行近 1 年\n个人经历 大学期间, 我自学了多种编程语言和技术栈, 包括Python 后端、前端、大数据等，大三曾取得金砖大赛国二奖,\n大四毕业取得湖南省程序设计二等奖和省优秀毕业生,并以基于用户行为的新能源充电桩项目入选校企合作名单。\n毕业后, 实习顺利入职湖南超能机器人做 AI 对话, 作为项目核心开发者,将该 AI 对话项目由零迭代到上线。\n目前就职深圳亿达信息， 担任 Python 工程师, 负责公司后端接口开发与测试。\n工作经历 2021年11月-2023年3月 湖南超能机器人 AI助理 智能问诊项目 负责人 清洗训练数据近 2w 条, 处理NLU 和 NLG 部分工作, 并对接后端开始内部测试 从零推动 AI 对话项目版本迭代到上线开售 2023年4月-至今 深圳亿达信息 Python开发 支付分账项目 参与者 迭代项目版本 测试 技术栈 熟悉Python的Django,Flask等后端框架，掌握基本的数据结构和常见算法 熟悉Pandas、Numpy、Sklearn等自然语言处理工具 熟悉Linux系统应用部署以及管理，能独立部署项目到服务器 熟练掌握文本处理相关任务,如意图识别、词槽解析、语义匹配、信息抽取（实体、关系、事件抽取）、词向 量、文本纠错等 联系我 邮箱: liao4256@qq.com\n电话: 17742542564\n所在地: 深圳\n"},{"id":17,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E5%85%B3%E4%BA%8E%E5%81%9A%E4%BA%8B/","title":"关于做事","section":"个人","content":" 发展 发展才能解决一切问题 悲观和乐观 悲观带来怀疑、沮丧、恐惧、绝望、焦虑和抑郁，乐观带来坚定、韧性、勇气、希望、开朗和阳光\n尝试 做事情就像搭建木，前期可以大胆尝试，坍塌的代价不过几块小积木而已，后期则必须小心翼翼，不然花费很多时间的高楼将重头再来搭建。 在当下，大部分事情是无意义且有害的 当下找不到意义的事情，影响往往是长远的 多去说话，弥补自己说话吞吞吐吐的缺点 做了总比不做好 休息 闲下来充分休息，不要忙得没时间思考 态度 因地制宜,因时制宜,什么时候就做应该做的事情\n逆水行舟，不进则退\n忌讳是懒惰，绝对不要拖延症\n慢工出细活\n凡事预则立，不预则废，没有准备的事情失败是应该的，顺利则是侥幸\n为长远记，目光短浅是会患得患失的，是会后悔的\n注意边际效应\n慌张,可能是准备不足\n急躁,可能是经历不够\n轻浮,可能是眼光不远\n烦乱,可能是思路不清\n压力,可能是期待太高\n恐惧,可能是欲求太满\n心累,可能是想法太多\n劳累,可能是方法不对\n懒散,可能是目标不明\n"},{"id":18,"href":"/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","title":"计算机网络","section":"理论知识","content":" 概述 flowchart TB; subgraph OSI的体系结构 direction TB a1[应用层]--\u0026gt;a2[表示层]--\u0026gt;a3[会话层]--\u0026gt;a4[运输层]--\u0026gt;a5[网络层]--\u0026gt;a6[数据链路层]--\u0026gt;a7[物理层] end subgraph TCP/ID的体系结构 direction TB\tb1[应用层]--\u0026gt;|Link text|b2[运输层]--\u0026gt;b3[网际层]--\u0026gt;b4[网络接口层] end subgraph 五层协议 direction TB\tc5--\u0026gt;|比特流|c4--\u0026gt;|帧|c3--\u0026gt;|数据帧|c2--\u0026gt;|报文|c1 c1[应用层]--\u0026gt;|应用数据|c2[运输层]--\u0026gt;|报文|c3[网络层]--\u0026gt;|数据帧|c4[数据链路层]--\u0026gt;|帧|c5[物理层] end mindmap 体系结构 五层协议 应用 运输 网络 数据链路 物理 OSI七层协议 应用 表示 会话 运输 网络 数据链路 物理 TCP/IP五层协议 应用 运输 网际 网络接口 mindmap 物理层 特性 机械 电气 功能 过程 设备 中继器 集线器 信道 类型 单工 半双工 全双工 应用层 应用层协议是为了各应用进程需要不同的通信规则而存在的, 也是要依赖运输层所提供的基本通信服务。\n概念 应用层主要包括以下内容\n域名系统 DNS WWW 和 HTTP 协议 电子邮件的相关协议，SMTP 协议和 POP3 协议、IMAP 协议 域名系统 DNS DNS 的作用是将域名转为IP地址，具体的过程是应用进程调用 resolver（解析程序），发送包含待解析的域名的 DNS 请求报文，通过 UDP 进行再包装发送到本地域名服务器，本地域名服务器搜索以后，把对应的 IP 地址放在回答报文返回。\n域名 域名是一个空间概念，可比作一个盒子，最大的一个盒就是顶级域名，再里面的盒子叫做二级域名，再里面的盒子叫做三级域名。\n如www.baidu.com这个域名，从左到右域名等级依次提高，com就是顶级域名，baidu则是二级域名，www是三级域名。\n这些顶级域名和二级域名以及其他等级的域名都是要遵守域名规则\n必须是英文字母或数字，不区分大小写 一个域名长度不超过 63 个字符 所有域名加起来长度 255 个字符 运输层 TCP 协议 特点:面向连接(虚连接);点对点;可靠有序,不丢不重;全双工通信;字节流\n全双工通信:发送缓存和接收缓存\nTCP首部 0 8 16 24 31 --------------------------------------------------------------------------- 源端口 | 目的端口 --------------------------------------------------------------------------- 序号(seq) --------------------------------------------------------------------------- 确认号 --------------------------------------------------------------------------- 首部长度|保留|[URG,ACK,PSH,RST,SYN,FIN] |\t接收窗口大小 --------------------------------------------------------------------------- 检验和 | 紧急指针 --------------------------------------------------------------------------- 选项(长度可变) | 填充 --------------------------------------------------------------------------- 图 TCP的报文段首部 说明: 1.TCP首部总长为21B(20B固定,1B占位),第一行总长度都是4B(32位), `|`表示所占区分割线,如源端口所占为[0,16]的区域 2. 序号(seq):在TCP连接的字节流中,报文段中第一个字节的序号 确认号: 下一个要收报文段的序号, 序号为N, 则序号到N-1的数据都已收到 首部长度:表示TCP首部的长度,单位为4B URG:紧急位,调整报文段优先级 ACK: TCP连接之后,ACk=1,标识为有效报文 PSH: 不需要等发送缓存填满才发 SYN: 标识为同步报文 FIN: 标识为终止报文 接收窗口大小:能够接收窗口的大小 检验和:检验首部+数据,检验要加12B伪首部,第四个字段为6 紧急指针: URG=1才有意义,紧急数据的字节数 选项: 最大报文长度MSS, 窗口扩大,时间戳 三次握手(连接) B -------[SYN=1,seq=x]----------------------\u0026gt;\u0026gt; S B \u0026lt;\u0026lt;-------[SYN=1, ACK=1,seq=y,ack=x+1]------- S # S分配缓存和变量 B -------[ACK=1,seq=x+1,ack=y+1]------------\u0026gt;\u0026gt; S # B分配缓存和变量,可携带数据 四次挥手(断开) B -------[FIN=1,seq=x]-------------------\u0026gt;\u0026gt; S # 停止发送,断开连接 B \u0026lt;\u0026lt;--------------[ACK=1,seq=y,ack=x+1]---- S # 确认关闭 B \u0026lt;\u0026lt;----[FIN=1,ACK=1,seq=z,ack=x+1]-------- S # 断开连接 B -------[ACK=1,seq=x+1,ack=z+1]---------\u0026gt;\u0026gt; S # 确认关闭,最长报文段寿命2MSL结束,两者连接彻底关闭 可靠传输 检验 序号 确认 重传:超时,冗余确认 等待重传 ACK 冗余确认\n流量控制 特点:局部出发,控制速率\nTCP 会利用滑动窗口机制实现流量控制,根据接收缓存的大小,动态改变发送方的发送窗口\n发送窗口 = Min(接收窗口rwnd,拥塞窗口cwnd)\n拥塞控制 特点:点对点,全局出发,控制总量\n条件:对资源需求 \u0026gt; 可用资源\n目的是防止过多的数据注入到网络中\n接收窗口:接收方根据接收缓存设置的值,并告诉发送方,反映接收方容量\n拥塞窗口:发送方根据估算网络拥塞程度设置的值,反映网络容量\n慢开始,拥塞避免:(cwnd)指数增长-\u0026gt;sshrend-\u0026gt;线性增长-\u0026gt;0,接着重复该过程\n快重传,快恢复:慢开始的改进,最后一步-\u0026gt;(sshrend/2)\n"},{"id":19,"href":"/posts/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/","title":"技术记录","section":"  ","content":" hugo 添加mermaid作图 在 footer.html(页面尾部) 添加以下代码,即可启用mermaid作图\n{{ if (.Params.mermaid) }} \u0026lt;!-- MermaidJS support --\u0026gt; \u0026lt;script async src=\u0026#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; // Replace mermaid pre.code to div Array.from(document.getElementsByClassName(\u0026#34;language-mermaid\u0026#34;)).forEach( (el) =\u0026gt; { el.parentElement.outerHTML = `\u0026lt;div class=\u0026#34;mermaid\u0026#34;\u0026gt;${el.innerText}\u0026lt;/div\u0026gt;`; } ); \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; /* Set svg to center */ .mermaid svg { display: block; margin: auto; } \u0026lt;/style\u0026gt; {{ end }} 参考\nhttps://cloud.tencent.com/developer/article/1944123\nhttps://note.qidong.name/2020/07/mermaid/\nCSS 字体 在CSS中，font-size属性可以使用多种单位来指定字体大小。以下是一些常见的font-size单位：\n😋\n像素（px）：像素是绝对单位，它会直接指定字体的像素大小。例如，font-size: 16px; 将文本字体设置为16像素高。\n磅（pt）：磅是印刷单位，通常用于打印。1磅等于1/72英寸，因此它也可以用于屏幕上的字体大小。例如，font-size: 12pt; 将字体设置为12磅。\n毫米（mm）：毫米是长度单位，也可以用于字体大小。例如，font-size: 5mm; 将字体大小设置为5毫米。\n厘米（cm）：厘米也是长度单位，可以用于指定字体大小。例如，font-size: 0.5cm; 将字体大小设置为0.5厘米。\n百分比（%）：百分比是相对于父元素的大小来定义字体大小。例如，font-size: 150%; 表示字体大小是父元素字体大小的150%。\nem：em单位是相对于当前元素的字体大小来定义的。例如，font-size: 1.5em; 表示字体大小是当前元素字体大小的1.5倍。\nrem：rem单位也是相对于根元素（html元素）的字体大小来定义的。这可以使字体大小在整个文档中保持一致。例如，font-size: 1.2rem; 表示字体大小是根元素字体大小的1.2倍。\n刷机参考 TWRP刷机 https://zhuanlan.zhihu.com/p/96968140 Magisk 刷入 https://magiskcn.com/ 沸米计划 https://mi.fiime.cn/FiimePlan/24.html#gallery hugo 日期转时间戳 原因是这样的,我在设置文章更新时间的时候,大部分的日期转时间戳貌似都没问题,除了当天的时间转时间戳,当时时间为当天的 14 点,出来的时间戳一转成时间,结果居然是 22 点, 不断测试,发现不是我代码的问题.\n多次修改无果,问了chatGPT才知道,转时间戳的过程原来还有其他东西会影响\n在处理时间戳时，有一些需要注意的重要事项, ChatGPT 的回答如下\n时间戳精度： 时间戳可以是秒级或毫秒级的，具体取决于系统和编程语言。确保您清楚时间戳的精度，以免出现错误。\n时区和区域性： 时间戳通常是与协调世界时 (UTC) 相关的。时区和区域性的问题可能会导致时间戳的解释不正确。在处理时间戳时，考虑时区和区域性，以便正确地显示和解释日期时间。\n时间戳格式： 时间戳可以采用不同的格式，包括整数（秒或毫秒）、ISO 8601（例如：2023-10-11T14:44:16Z）等。确保您了解所使用的时间戳格式，以正确解释和显示日期时间。\n溢出和范围： 时间戳的范围是有限的，因此要小心处理超出范围的情况。对于以秒为单位的时间戳，通常范围在约1970年至2038年之间。对于以毫秒为单位的时间戳，范围更大，但仍然有限。\n精确性： 根据时间戳的精度，可能会存在一些精度问题。毫秒级时间戳可以提供更高的精度，但仍然有限。在某些情况下，您可能需要考虑四舍五入或截断精度以满足需求。\n跨时区计算： 如果涉及到多个时区，确保正确进行时区转换。使用合适的工具和库来处理跨时区问题。\n日期时间显示： 在显示时间戳时，考虑最终用户的需求和偏好。提供适当的日期时间格式，并考虑将时间戳转换为本地时区以获得更好的用户体验。\n维护和更新： 时间戳可能需要在未来进行维护和更新，以适应不同的需求或问题。时刻注意更新可能会影响应用程序的行为。\n总之，处理时间戳需要小心，要理解时间戳的精度、格式、时区和区域性，以及如何正确地显示和处理日期时间数据。这可以确保您的应用程序或系统在时间方面表现正确。\nhugo 字段bug publishDate字段会有时候让文章显示不出来, 或许是 hugo 内部编译执行的过程出错\nfrontmatter: # publishDate: # - datetimeCreate lastmod: - datetimeUpdate git 代理设置和解决 git config --global https.proxy http://127.0.0.1:1080 git config --global https.proxy https://127.0.0.1:1080 git config --global --unset http.proxy git config --global --unset https.proxy npm config delete proxy 转载 https://gist.github.com/laispace/666dd7b27e9116faece6\n蓝牙音量不正常 经常有小伙伴反馈蓝牙耳机音量小的问题，这里科普一下为什么蓝牙耳机音量小？\n蓝牙耳机音量小，无非两种情况:\n1.手机输出音量小\n2.耳机自生音量调节小了\n好比一根水管，有两个阀门，如果其中一个开关调小，流量就会变小，要想全速流淌，必须要把两个开关全部打开。\n很多小伙伴反馈的是手机音量已经调节到最大还是音量小，其实此时手机的输出已经是最大了，要想调大音量，就必须要调节另一个水龙头，此水龙头自然就是蓝牙耳机自己的音量调节开关了。\n但是，为了把耳机做小，现在很多耳机，特别是TWS耳机，经常没有音量调节按钮，此时想要调节耳机音量，就必须要靠杀器 :蓝牙绝对音量 了。\n那么什么是 蓝牙绝对音量呢？其实，绝对音量就相当于给水管的两个水龙头加了一个联动装置，不管调节哪一个开关，两个水龙头都会同步调节，这样就不存在手机音量调节到最大，耳机或者音箱仍然音量小了。\n但是，需要注意的是，绝对音量功能并不是每个耳机都支持的，有个别耳机，音箱，及车机就是不支持绝对音量的（常见于比较老旧的设备及蓝牙芯片），判断耳机是否支持绝对音量的方法是:\n如果耳机自带音量调节按键，在手机开发者选项中开启绝对音量，然后重新连接蓝牙耳机，重连后从耳机上调节音量，如果手机能显示音量进度条，那么此耳机就是支持绝对音量的。反之则耳机不支持绝对音量。\n当然，如果有的耳机一开始可以调节，可是突然有一天，不能同步调节手机音量了，可能是手机记录了某些不规范操作，把此耳机拉黑了，此时可以尝试从手机端解除配对，重新配对的方式看是否能恢复。\n另外，也有可能是耳机自己记录了手机某些信息，将手机拉黑了，此时可以尝试将耳机恢复出厂设置，通常将耳机恢复出厂设置的方法不会写入说明书，你只能联系销售客服，咨询恢复重置耳机的方法，\n例如大多数TWS耳机重置的方法是:\n1.清除手机配对记录：无蓝牙、无TWS连接状态下，长按触控按键15秒（左右耳分别执行）\n2.断开手机连接：连接手机状态下，无音乐播放、无通话，长按主耳机触控按键5秒\n转载 https://www.realmebbs.com/post-details/1245148418070818816\n"},{"id":20,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E7%9B%AE%E6%A0%87/","title":"目标","section":"个人","content":" 长期目标 利用chatgpt之类的大模型接入一个语音助手 瘦下来到120斤 保持最佳状态(睡足、吃好) 跳槽准备 短期目标 投影仪 计算机网络复习 数据结构复习 英语学习 "},{"id":21,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E6%B8%85%E5%8D%95/","title":"清单","section":"个人","content":" 安卓手机 软件 小黑屋 appShare Cemiuiler magisk: 苹方字体模块 神仙救砖 LSPosed-zygisk 爱玩机工具箱 ES 文件浏览器 Via 浏览器 b站(带漫游模块) Clash NoActive 手机性能排行 GKD(跳广告) 讯飞输入法: ios Apple music Telegram X Play 商店 MIUI 主题: 遇见IOS (AP景深宠物岛) 主题破解 测试 win 软件 QQ 输入法 vscode 图吧工具箱 vivaldi 浏览器 Dark Reader https://chromewebstore.google.com/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh AdGuard https://chromewebstore.google.com/detail/bgnkhhnnamicmpeenaelnjfhikgbkllg Stylus https://chromewebstore.google.com/detail/clngdbkpkpeebahjckkjfobafhncgmne /* bilibili.com */ #arc_toolbar_report { border-bottom: none; } #v_tag, .video-share-wrap, .main-reply-box, .fixed-reply-box, .v-popover-wrap, .upinfo-btn-panel .new-charge-btn, #danmukuBox, .fixed-sidenav-storage div:nth-of-type(2), aside.right, .bili-dyn-sidebar, .recommended-swipe, .floor-single-card, .pop-live-small-mode, .bili-dyn-publishing, .reply-notice, .bottom-line, .vip-entry-containter, .mini-header__title, .activity-m-v1, .sub-reply-info, .elec { display: none !important; } .header-avatar-wrap, .left-entry li:nth-of-type(1), .right-entry li:nth-of-type(3), .right-entry li:nth-of-type(5) { display: list-item!important; } *::-webkit-scrollbar { width: 10px; /* 调整滚动条宽度 */ } *::-webkit-scrollbar-thumb { background-color:#293c4a; /* 滚动条颜色 */ } .chat-container{ margin:0 !important; } .capabilities-disclaimer ,.icon-container ,header,.gb_nd { display:none!important; } Tampermonkey https://chromewebstore.google.com/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo Obsidian autoHotKey ; Esc 映射成 AltTab *Esc::send \u0026#34;{Blind}!{Tab}\u0026#34; ; 左Alt 映射成 Ctrl *LAlt::Ctrl ;大写键映射成删除键 *CapsLock::Backspace +CapsLock::Del ;win+鼠标滚轮上(下滚)滚增加(减少)音量 ;win+点击鼠标滚轮暂停或者播放 A_HotkeyInterval := 0 #WheelUp::Volume_Up #WheelDown::Volume_Down #MButton::Media_Play_Pause ;禁用按win键开始菜单弹出,快捷键不受影响 ~LWin::Send \u0026#34;{Blind}{vkE8}\u0026#34; "},{"id":22,"href":"/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/","title":"数据结构和算法","section":"理论知识","content":" 参考 https://www.cs.usfca.edu/~galles/visualization/Algorithms\n查找 评价指标: 查找长度(SL) 平均查找长度(ASL):考虑查找成功和失败的平均SL 顺序查找 O(n) def search_seq(ls,k): for i in range(len(ls)): if k == ls[i]: return i return -1 二分查找 O(Log2n) def search_bin(ls,k): low = 0 high = len(ls)-1 while low\u0026lt;=high: mid = (high-low)/2 if ls[mid] == k: return mid elif ls[mid]\u0026lt;k: high = mid+1 else: low = mid-1 如果取整为向上(向下),则左子树比右子数量大(小)1个或相等\n排序 评价指标 稳定性 时间复杂度 空间复杂度 读写次数(外部排序时) 分类 数据是否全部在内存中 内部排序:数据都在内存中 外部排序:数据太多,无法全部放入内存中 直接插入排序 元素都要从头到尾遍历自己前面的数组,如果另外一个元素比自己大,移动到后面一格,否则自己插入到另外一个元素的后面,等于说,每个元素都要执行下面的流程\ngraph TB; n_start([开始])--\u0026gt;n1[\u0026#34;从头到尾遍历自己前面的数组\u0026#34;] n1 --\u0026gt; n2[\u0026#34;指针越界而且指针元素比自己大\u0026#34;] n2--T--\u0026gt;n3[\u0026#34;指针元素移后一格\u0026#34;]--\u0026gt;n4[\u0026#34;指针前移一格\u0026#34;]--\u0026gt;n2 n2--F--\u0026gt;n5[\u0026#34;插入到指针的后一格\u0026#34;] n5--\u0026gt;n_end([结束]) def insertionSort(arr): for i in range(len(arr)): preIndex = i - 1 for j in range(preIndex, 0): if arr[j] \u0026lt; arr[i-1]: arr[j+1] = arr[i] break 冒泡排序 第i个元素都要自己后面的元素进行两两比较\ngraph TB; n_start([开始])--\u0026gt;n0[\u0026#34;for i in range(1, len(arr)):\u0026#34;]--T--\u0026gt;n1 n1[\u0026#34;for j in range(0, len(arr)-i):\u0026#34;]-- T --\u0026gt;n2[\u0026#34;if arr[j] \u0026gt; arr[j+1]:\u0026#34;] n2--T--\u0026gt;n3[\u0026#34;arr[j], arr[j + 1] = arr[j + 1], arr[j]\u0026#34;] n2--F--\u0026gt;n1 n3--\u0026gt;n1 n1--F--\u0026gt;n0 n0--F--\u0026gt;n_end([结束]) def bubbleSort(arr): for i in range(1, len(arr)): for j in range(0, len(arr)-i): if arr[j] \u0026gt; arr[j+1]: arr[j], arr[j + 1] = arr[j + 1], arr[j] return arr 选择排序 在数组 arr 中,假设要对 e 元素进行选择排序,流程如下\ngraph TB; n_start([开始])--\u0026gt;n0[\u0026#34;找到一个\u0026#34;]--\u0026gt;n1{\u0026#34;遍历指针指向 e \u0026#34;} n1-- T --\u0026gt;n2[\u0026#34;两者交换位置\u0026#34;]--\u0026gt;n1 n1-- F --\u0026gt;n_end([\u0026#34;结束\u0026#34;]) "},{"id":23,"href":"/posts/%E6%9D%82%E6%80%9D/%E6%95%B0%E6%8D%AE%E5%B1%95%E7%A4%BA/","title":"数据展示","section":"杂思","content":" colors.json CMYK RGB hex name pinyin [4 5 18 0] [249 244 220] #f9f4dc 乳白 rubai [3 8 30 0] [249 236 195] #f7e8aa 杏仁黄 xingrenhuang [4 13 67 0] [248 223 114] #f8df72 茉莉黄 molihuang [5 14 68 1] [248 223 112] #f8df70 麦秆黄 maiganhuang [2 16 84 0] [251 218 65] #fbda41 油菜花黄 youcaihuahuang [1 18 94 0] [254 215 26] #fed71a 佛手黄 foshouhuang [3 16 50 0] [247 222 152] #f7de98 篾黄 miehuang [3 17 69 0] [248 216 106] #f8d86a 葵扇黄 kuishanhuang [0 20 87 0] [252 211 55] #fcd337 柠檬黄 ningmenghuang [0 20 95 0] [252 210 23] #fcd217 金瓜黄 jinguahuang [0 21 94 0] [254 209 16] #ffd111 藤黄 tenghuang [2 16 39 0] [246 222 173] #f6dead 酪黄 laohuang [1 17 50 0] [247 218 148] #f7da94 香水玫瑰黄 xiangshuimeiguihuang [1 21 70 0] [249 211 103] #f9d367 淡密黄 danmihuang [0 23 88 0] [251 205 49] #fbcd31 大豆黄 dadouhuang [0 24 94 0] [252 203 22] #fccb16 素馨黄 suxinhuang [0 24 94 0] [254 204 17] #fecc11 向日葵黄 xiangrikuihuang [0 27 88 0] [251 200 47] #fbc82f 雅梨黄 yalihuang [0 28 94 0] [252 197 21] #fcc515 黄连黄 huanglianhuang [0 29 95 0] [252 195 7] #fcc307 金盏黄 jinzhanhuang [0 32 52 0] [248 195 135] #f8c387 蛋壳黄 dankehuang [0 32 52 0] [247 193 115] #f7c173 肉色 rouse [0 35 89 0] [251 185 41] #fbb929 鹅掌黄 ezhanghuang [0 36 93 0] [251 182 18] #fbb612 鸡蛋黄 jidanhuang [0 35 94 0] [252 183 10] #fcb70a 鼬黄 youhuang [0 44 84 0] [249 166 51] #f9a633 榴萼黄 liuehuang [0 45 92 0] [251 164 20] #fba414 淡橘橙 danjucheng [0 47 92 0] [252 161 6] #fca106 枇杷黄 pipahuang [0 47 92 0] [252 161 4] #fca104 橙皮黄 chengpihuang [0 56 87 0] [252 140 35] #fc8c23 北瓜黄 beiguahuang [0 54 92 0] [250 142 22] #f28e16 杏黄 xinghuang [0 51 91 0] [255 153 0] #ff9900 雄黄 xionghuang [0 56 91 0] [251 139 5] #fb8b05 万寿菊黄 wanshoujuhuang [10 13 35 1] [233 221 182] #e9ddb6 菊蕾白 juleibai [8 19 84 1] [238 208 69] #eed045 秋葵黄 qiukuihuang [6 20 92 1] [242 206 43] #f2ce2b 硫华黄 liuhuahuang [6 22 92 0] [241 202 23] #f1ca17 柚黄 youhuang [15 20 66 2] [221 200 113] #ddc871 芒果黄 mangguohuang [14 22 85 2] [223 194 67] #dfc243 蒿黄 haohuang [12 24 95 2] [226 192 39] #e2c027 姜黄 jianghuang [11 25 99 1] [228 191 17] #e4bf11 香蕉黄 xiangjiaohuang [17 27 94 4] [210 180 44] #d2b42c 草黄 caohuang [17 29 100 4] [210 177 22] #d2b116 新禾绿 xinhelv [28 26 45 7] [183 174 143] #b7ae8f 月灰 yuehui [30 30 70 12] [173 158 85] #ad9e5f 淡灰绿 danhuilv [38 38 76 24] [142 128 75] #8e804b 草灰绿 caohuilv [36 42 100 29] [136 115 34] #887322 苔绿 tailv [36 42 100 30] [134 112 24] #867018 碧螺春绿 biluochunlv [47 47 65 42] [104 94 72] #685e48 燕羽灰 yanyuhui [46 47 69 42] [105 94 69] #695e45 蟹壳灰 xiekehui [48 48 100 45] [100 88 34] #645822 潭水绿 tanshuilv [50 50 10 48] [94 83 20] #5e5314 橄榄绿 ganlanlv [2 6 18 0] [249 241 219] #f9f1db 蚌肉白 bangroubai [3 10 31 0] [248 232 193] #f8e8c1 豆汁黄 douzhihuang [1 19 66 0] [249 215 112] #f9d770 淡茧黄 danjianhuang [0 26 94 0] [255 201 12] #ffc90c 乳鸭黄 ruyahuang [5 11 22 0] [242 230 206] #f2e6ce 荔肉白 liroubai [5 19 50 0] [240 214 149] #f0d695 象牙黄 xiangyahuang [3 23 69 0] [244 206 105] #f4ce69 炒米黄 chaomihuang [1 28 89 0] [246 196 48] #f6c430 鹦鹉冠黄 yingwuguanhuang [0 30 95 0] [249 193 22] #f9c116 木瓜黄 muguahuang [0 32 95 0] [249 189 16] #f9bd10 浅烙黄 qianlaohuang [11 18 39 1] [229 211 170] #e5d3aa 莲子白 lianzibai [5 35 99 0] [232 176 4] #e8b004 谷黄 guhuang [3 36 99 0] [235 177 13] #ebb10d 栀子黄 zhizihuang [11 39 100 2] [217 164 14] #d9a40e 芥黄 jiehuang [28 27 43 8] [181 170 144] #b5aa90 银鼠灰 yinshuhui [26 31 57 10] [182 164 118] #b6a476 尘灰 chenhui [21 43 100 11] [183 141 18] #b78d12 枯绿 kulv [35 44 80 30] [135 114 62] #87723e 鲛青 jiaoqing [32 50 100 31] [135 104 24] #876818 粽叶绿 zongyelv [31 51 100 30] [138 105 19] #8a6913 灰绿 huilv [52 56 64 62] [74 64 53] #4a4035 鹤灰 hehui [48 58 70 62] [77 64 48] #4d4030 淡松烟 dansongyan [45 56 100 56] [88 71 23] #584717 暗海水绿 anhaishuilv [45 55 100 54] [91 73 19] #5b4913 棕榈绿 zonglvlv [1 11 24 0] [249 223 205] #f9e9cd 米色 mise [1 15 38 0] [248 224 176] #f8e0b0 淡肉色 danrouse [0 23 59 0] [249 210 125] #f9d27d 麦芽糖黄 maiyatanghuang [0 34 93 0] [254 186 7] #feba07 琥珀黄 hupohuang [1 31 79 0] [243 191 76] #f3bf4c 甘草黄 gancaohuang [0 33 83 0] [248 188 49] #f8bc31 初熟杏黄 chushuxinghuang [10 27 59 1] [226 193 124] #e2c17c 浅驼色 qiantuose [7 32 78 1] [229 183 81] #e5b751 沙石黄 shashihuang [3 38 97 0] [234 173 26] #eaad1a 虎皮黄 hupihuang [12 41 98 2] [214 160 29] #d6a01d 土黄 tuhuang [28 28 41 9] [180 169 146] #b4a992 百灵鸟灰 bailingniaohui [21 44 97 11] [183 139 38] #b78b26 山鸡黄 shanjihuang [35 47 71 33] [130 107 72] #826b48 龟背黄 guibeihuang [34 52 85 35] [128 99 50] #806332 苍黄 canghuang [32 56 96 34] [129 95 37] #815f25 莱阳梨黄 laiyanglihuang [31 57 100 33] [131 94 29] #835e1d 蜴蜊绿 yililv [46 59 68 61] [79 64 50] #4f4032 松鼠灰 songshuhui [44 61 76 62] [80 62 42] #503e2a 橄榄灰 ganlanhui [43 63 88 61] [81 60 32] #513c20 蟹壳绿 xiekelv [42 64 94 60] [83 60 27] #533c1b 古铜绿 gutonglv [41 66 94 60] [85 59 24] #553b18 焦茶绿 jiaochalv [1 7 13 0] [251 242 227] #fbf2e3 粉白 fenbai [1 12 22 0] [249 232 208] #f9e8d0 落英淡粉 luoyingdanfen [0 27 51 0] [249 203 139] #f9cb8b 瓜瓤粉 guarangfen [0 36 72 0] [251 185 87] #fbb957 蜜黄 mihuang [0 44 91 0] [255 166 15] #ffa60f 金叶黄 jinyehuang [0 43 82 0] [244 168 58] #f4a83a 金莺黄 jinyinghuang [8 31 50 1] [227 189 141] #e3bd8d 鹿角棕 lujiaozong [2 44 83 0] [231 162 63] #e7a23f 凋叶棕 diaoyezong [10 41 72 1] [218 164 90] #daa45a 玳瑁黄 daimaohuang [7 45 82 1] [222 158 68] #de9e44 软木黄 ruanmuhuang [6 51 95 1] [220 145 35] #dc9123 风帆黄 fengfanhuang [19 44 75 7] [192 147 81] #c09351 桂皮淡棕 guipidanzong [32 40 53 22] [151 132 108] #97846c 猴毛灰 houmaohui [27 60 97 21] [152 101 36] #986524 山鸡褐 shanjihe [37 65 84 49] [102 70 42] #66462a 驼色 tuose [38 69 90 54] [93 61 33] #5d3d21 茶褐 chahe [37 74 96 55] [92 55 25] #5c3719 古铜褐 gutonghe [0 10 14 0] [251 236 222] #fbecde 荷花白 hehuabai [0 40 52 0] [248 179 127] #f8b37f 玫瑰粉 meiguifen [0 62 88 0] [249 125 28] #f97d1c 橘橙 jucheng [0 62 85 0] [250 126 35] #fa7e23 美人焦橙 meirenjiaocheng [0 28 25 0] [247 205 188] #f7cdbc 润红 runhong [0 28 22 0] [246 206 193] #f6cec1 淡桃红 dantaohong [0 53 65 0] [240 148 93] #f0945d 海螺橙 hailuocheng [0 44 32 0] [240 173 160] #f0ada0 桃红 taohong [0 45 34 0] [238 170 156] #eeaa9c 颊红 jiahong [0 49 41 0] [238 160 140] #eea08c 淡罂粟红 danyingsuhong [0 58 67 0] [234 137 88] #ea8958 晨曦红 chenxihong [0 65 80 0] [242 118 53] #f27635 蟹壳红 xiekehong [0 69 86 0] [248 107 29] #f86b1d 金莲花橙 jinlianhuacheng [0 69 70 0] [239 111 72] #ef6f48 草莓红 caomeihong [0 72 82 0] [239 99 43] #ef632b 龙睛鱼红 longjingyuhong [0 81 84 0] [241 68 29] #f1441d 蜻蜓红 qingtinghong [0 80 83 0] [240 75 34] #f04b22 大红 dahong [0 80 85 0] [242 72 27] #f2481b 柿红 shihong [0 80 85 0] [243 71 24] #f34718 榴花红 liuhuahong [0 83 87 0] [244 62 6] #f43e06 银朱 yinzhu [0 78 83 0] [237 81 38] #ed5126 朱红 zhuhong [0 50 68 0] [240 156 90] #f09c5a 鲑鱼红 guiyuhong [5 69 87 0] [242 123 31] #f26b1f 金黄 jinhuang [7 52 71 1] [217 145 86] #d99156 鹿皮褐 lupihe [4 57 82 1] [219 133 64] #db8540 醉瓜肉 zuiguarou [0 64 93 0] [222 118 34] #de7622 麂棕 jizong [22 28 34 6] [193 178 163] #c1b2a3 淡银灰 danyinhui [18 57 76 6] [190 126 74] #be7e4a 淡赭 danzhe [14 69 100 4] [193 101 26] #c1651a 槟榔综 binglangzong [34 42 46 23] [145 128 114] #918072 银灰 yinhui [42 40 46 20] [154 136 120] #9a8878 海鸥灰 haiouhui [27 69 85 22] [148 88 51] #945833 淡咖啡 dankafei [26 76 97 20] [150 77 34] #964d22 岩石棕 yanshizong [25 80 100 20] [149 68 22] #954416 芒果棕 mangguozong [39 60 58 51] [98 73 65] #624941 石板灰 shibanhui [38 63 63 50] [100 72 61] #64483d 珠母灰 zhumuhui [32 83 96 41] [113 54 29] #71361d 丁香棕 dingxiangzong [30 87 100 38] [117 49 23] #753117 咖啡 kafei [30 89 100 39] [115 46 18] #732e12 筍皮棕 sunpizong [0 72 86 0] [252 99 21] #fc6315 燕颔红 yanhanhong [3 38 39 0] [232 180 154] #e8b49a 玉粉红 yufenhong [0 70 87 0] [228 104 40] #e46828 金驼 jintuo [0 76 97 0] [216 89 22] #d85916 铁棕 tiezong [23 35 38 10] [183 160 145] #b7a091 蛛网灰 zhuwanghui [16 77 100 6] [183 81 29] #b7511d 淡可可棕 dankekezong [31 63 66 31] [139 97 77] #8b614d 中红灰 zhonghonghui [28 76 82 26] [140 75 49] #8c4b31 淡土黄 dantuhuang [28 83 92 28] [135 61 36] #873d24 淡豆沙 dandousha [27 85 98 27] [136 58 30] #883a1e 椰壳棕 yekezong [40 64 61 56] [91 66 58] #5b423a 淡铁灰 dantiehui [37 72 72 52] [96 61 48] #603d30 中灰驼 zhonghuituo [34 82 85 47] [103 52 36] #673424 淡栗棕 danlizong [33 89 92 48] [101 43 28] #652b1c 可可棕 kekezong [32 90 95 45] [105 42 27] #692a1b 柞叶棕 zhayezong [0 53 59 0] [251 153 104] #fb9968 野蔷薇红 yeqiangweihong [0 65 79 0] [252 121 48] #fc7930 菠萝红 boluohong [2 31 31 0] [237 195 174] #edc3ae 藕荷 ouhe [0 70 91 0] [225 103 35] #e16723 陶瓷红 taocihong [16 23 27 2] [212 196 183] #d4c4b7 晓灰 xiaohui [9 64 78 1] [207 117 67] #cf7543 余烬红 yujinhong [8 72 93 1] [205 98 39] #cd6227 火砖红 huozhuanhong [22 64 71 12] [170 106 76] #aa6a4c 火泥棕 huonizong [20 76 92 9] [166 82 44] #a6522c 绀红 ganhong [31 79 77 37] [119 61 49] #773d31 橡树棕 xiangshuzong [45 68 57 66] [72 51 50] #483332 海报灰 haibaohui [41 76 64 65] [175 46 43] #4b2e2b 玫瑰灰 meiguihui [41 84 71 67] [72 37 34] #482522 火山棕 huoshanzong [40 92 78 66] [72 30 28] #481e1c 豆沙 dousha [0 9 12 0] [251 238 226] #fbeee2 淡米粉 danmifen [0 19 19 0] [246 220 206] #f6dcce 初桃粉红 chutaofenhong [0 27 27 0] [247 207 186] #f7cfba 介壳淡粉红 jieqiaodanfenhong [0 43 43 0] [246 173 143] #f6ad8f 淡藏花红 dancanghuahong [0 58 61 0] [246 140 96] #f68c60 瓜瓤红 guaranghong [0 67 74 0] [249 114 61] #f9723d 芙蓉红 furonghong [0 74 85 0] [250 93 25] #fa5d19 莓酱红 meijianghong [0 62 66 0] [238 128 85] #ee8055 法螺红 faluohong [4 82 99 0] [207 72 19] #cf4813 落霞红 luoxiahong [21 43 43 9] [184 148 133] #b89485 淡玫瑰灰 danmeiguihui [18 80 92 7] [177 75 40] #b14b28 蟹蝥红 xiemaohong [27 91 95 28] [134 48 32] #863020 火岩棕 huoyanzong [27 96 100 27] [134 38 23] #862617 赭石 zheshi [36 90 82 56] [89 38 32] #592620 暗驼棕 antuozong [35 96 88 55] [90 31 27] #5a1f1b 酱棕 jiangzong [34 98 91 53] [92 30 25] #5c1e19 栗棕 lizong [0 31 24 0] [244 199 186] #f4c7ba 洋水仙红 yangshuixianhong [0 67 55 0] [241 118 102] #f17666 谷鞘红 guqiaohong [0 77 69 0] [241 86 66] #f15642 苹果红 pingguohong [0 84 82 0] [245 57 28] #f5391c 铁水红 tieshuihong [0 76 67 0] [242 90 71] #f25a47 桂红 guihong [0 84 82 0] [243 59 31] #f33b1f 极光红 jiguanghong [0 38 25 0] [242 185 178] #f2b9b2 粉红 fenhong [0 53 36 0] [241 151 144] #f19790 舌红 shehong [0 76 68 0] [240 90 70] #f05a46 曲红 quhong [0 83 81 0] [242 62 35] #f23e23 红汞红 honggonghong [0 29 16 0] [242 202 201] #f2cac9 淡绯 danfei [0 43 24 0] [239 175 173] #efafad 无花果红 wuhuaguohong [0 57 36 0] [241 144 140] #f1908c 榴子红 liuzihong [0 83 81 0] [240 63 36] #f03f24 胭脂红 yanzhihong [0 50 23 0] [240 161 168] #f0a1a8 合欢红 hehuanhong [0 56 27 0] [241 147 156] #f1939c 春梅红 chunmeihong [0 65 38 0] [240 124 130] #f07c82 香叶红 xiangyehong [0 80 72 0] [240 74 58] #f04a3a 珊瑚红 shanhuhong [0 84 82 0] [241 60 34] #f13c22 萝卜红 luobohong [0 65 29 0] [231 124 142] #e77c8e 淡茜红 danqianhong [0 77 49 0] [237 90 101] #ed5a65 艳红 yanhong [0 81 66 0] [237 72 69] #ed4845 淡菽红 danshuhong [0 84 76 0] [237 59 47] #ed3b2f 鱼鳃红 yusaihong [0 86 82 0] [237 51 33] #ed3321 樱桃红 yingtaohong [0 82 44 0] [238 72 102] #ee4866 淡蕊香红 danruixianghong [0 82 46 0] [238 72 99] #ee4863 石竹红 shizhuhong [0 82 50 0] [239 71 93] #ef475d 草茉莉红 caomolihong [0 84 60 0] [238 63 77] #ee3f4d 茶花红 chahuahong [0 86 74 0] [237 51 51] #ed3333 枸枢红 goushuhong [0 88 81 0] [236 43 36] #ec2b24 秋海棠红 qiuhaitanghong [0 89 84 0] [235 38 26] #eb261a 丽春红 lichunhong [0 90 90 0] [222 42 24] #de2a18 夕阳红 xiyanghong [0 92 95 0] [212 37 23] #d42517 鹤顶红 hedinghong [19 89 85 9] [171 55 47] #ab372f 鹅血石红 exueshihong [17 98 100 8] [172 31 24] #ac1f18 覆盆子红 fupenzihong [36 81 64 54] [93 49 49] #5d3131 貂紫 diaozi [35 94 77 53] [92 34 35] #5c2223 暗玉紫 anyuzi [35 100 85 54] [90 25 27] #5a191b 栗紫 lizi [35 100 80 54] [90 18 22] #5a1216 葡萄酱紫 putaojiangzi [0 49 27 0] [238 162 164] #eea2a4 牡丹粉红 mudanfenhong [0 78 44 0] [237 85 106] #ed556a 山茶红 shanchahong [0 86 55 0] [240 55 82] #f03752 海棠红 haitanghong [13 83 62 3] [192 72 81] #c04851 玉红 yuhong [11 93 77 2] [192 44 56] #c02c38 高粱红 gaolianghong [22 76 54 12] [167 83 90] #a7535a 满江红 manjianghong [28 100 86 33] [124 24 35] #7c1823 枣红 zaohong [39 92 67 64] [76 31 36] #4c1f24 葡萄紫 putaozi [39 100 79 63] [77 16 24] #4d1018 酱紫 jiangzi [0 89 62 0] [238 39 70] #ee2746 淡曙红 danshuhong [0 93 76 0] [222 28 49] #de1c31 唐菖蒲红 tangchangpuhong [1 95 82 0] [209 26 45] #d11a2d 鹅冠红 eguanhong [13 76 50 2] [196 90 101] #c45a65 莓红 meihong [10 96 82 2] [194 31 48] #c21f30 枫叶红 fengyehong [19 99 86 11] [166 27 41] #a61b29 苋菜红 xiancaihong [29 73 51 28] [137 78 84] #894e54 烟红 yanhong [27 98 79 30] [130 32 43] #82202b 暗紫苑红 anziyuanhong [27 100 90 29] [130 17 31] #82111f 殷红 yanhong [36 95 71 59] [84 30 36] #541e24 猪肝紫 zhuganzi [38 100 81 61] [80 10 22] #500a16 金鱼紫 jinyuzi [1 11 9 0] [248 235 230] #f8ebe6 草珠红 caozhuhong [0 68 21 0] [236 118 150] #ec7696 淡绛红 danjianghong [0 86 30 0] [239 52 115] #ef3473 品红 pinhong [0 69 22 0] [234 114 147] #ea7293 凤仙花红 fengxianhuahong [0 52 18 0] [236 155 173] #ec9bad 粉团花红 fentuanhuahong [0 80 28 0] [235 80 126] #eb507e 夹竹桃红 jiazhutaohong [0 88 36 0] [237 47 106] #ed2f6a 榲桲红 wenpohong [0 39 14 0] [238 184 195] #eeb8c3 姜红 jianghong [0 80 27 0] [234 81 127] #ea517f 莲瓣红 lianbanhong [0 33 11 0] [241 196 205] #f1c4cd 水红 shuihong [0 60 18 0] [236 138 164] #ec8aa4 报春红 baochunhong [8 78 35 1] [206 87 109] #ce5777 月季红 yuejihong [0 52 15 0] [237 157 178] #ed9db2 豇豆红 jiangdouhong [0 63 18 0] [239 130 160] #ef82a0 霞光红 xiaguanghong [0 85 33 0] [235 60 112] #eb3c70 松叶牡丹红 songyemudanhong [0 88 40 0] [236 44 100] #ec2c64 喜蛋红 xidanhong [5 38 20 0] [227 180 184] #e3b4b8 鼠鼻红 shubihong [5 96 73 1] [204 22 58] #cc163a 尖晶玉红 jianjingyuhong [16 61 34 4] [194 124 136] #c27c88 山黎豆红 shanlidouhong [13 90 56 3] [191 53 83] #bf3553 锦葵红 jinkuihong [41 64 44 36] [115 87 92] #73575c 鼠背灰 shubeihui [33 100 75 49] [98 22 36] #621624 甘蔗紫 ganzhezi [32 100 84 49] [99 7 28] #63071c 石竹紫 shizhuzi [57 72 54 74] [54 40 43] #36282b 苍蝇灰 cangyinghui [52 88 58 81] [48 22 28] #30161c 卵石紫 luanshizi [56 88 62 84] [43 18 22] #2b1216 李紫 lizi [58 90 63 83] [45 12 19] #2d0c13 茄皮紫 qiepizi [0 76 16 0] [206 94 138] #ce5e8a 吊钟花红 diaozhonghuahong [0 81 18 0] [236 78 138] #ec4e8a 兔眼红 tuyanhong [0 87 24 0] [238 44 121] #ee2c79 紫荆红 zijinghong [24 99 52 19] [149 28 72] #951c48 菜头紫 caitouzi [34 97 54 50] [98 29 52] #621d34 鹞冠紫 yaoguanzi [33 100 58 60] [98 16 46] #62102e 葡萄酒红 putaojiuhong [53 81 50 74] [56 33 41] #382129 磨石紫 moshizi [48 90 50 76] [56 25 36] #381924 檀紫 tanzi [50 91 54 79] [51 20 30] #33141e 火鹅紫 huoezi [53 92 55 81] [49 15 27] #310f1b 墨紫 mozi [0 48 15 0] [238 166 183] #eea6b7 晶红 jinghong [0 82 16 0] [239 73 139] #ef498b 扁豆花红 biandouhuahong [2 66 22 0] [222 120 151] #de7897 白芨红 baijihong [0 85 24 0] [222 63 124] #de3f7c 嫩菱红 nenlinghong [5 87 30 1] [209 60 116] #d13c74 菠根红 bogenhong [15 68 28 2] [197 112 139] #c5708b 酢酱草红 cujiangcaohong [22 83 34 11] [168 69 107] #a8456b 洋葱紫 yangcongzi [40 92 47 64] [75 30 47] #4b1e2f 海象紫 haixiangzi [41 97 49 68] [70 22 41] #461629 绀紫 ganzi [42 99 51 69] [68 14 37] #440e25 古铜紫 gutongzi [0 30 12 0] [240 201 207] #f0c9cf 石蕊红 shiruihong [0 50 16 0] [235 160 179] #eba0b3 芍药耕红 shaoyaogenghong [0 88 23 0] [236 45 122] #ec2d7a 藏花红 canghuahong [0 71 18 0] [225 108 150] #e16c96 初荷红 chuhehong [6 13 7 0] [237 227 231] #ede3e7 马鞭草紫 mabiancaozi [7 20 8 0] [233 215 223] #e9d7df 丁香淡紫 dingxiangdanzi [7 79 18 0] [210 86 140] #d2568c 丹紫红 danzihong [4 89 21 0] [210 53 125] #d2357d 玫瑰红 meiguihong [19 27 9 0] [209 194 211] #d1c2d3 淡牵牛紫 danqianniuzi [21 37 12 0] [200 173 196] #c8adc4 凤信紫 fengxinzi [23 53 14 1] [192 142 175] #c08eaf 萝兰紫 luolanzi [18 91 18 2] [186 47 123] #ba2f7b 玫瑰紫 meiguizi [58 56 17 2] [128 118 163] #8076a3 藤萝紫 tengluozi [57 62 16 2] [128 109 158] #806d9e 槿紫 jinzi [56 72 15 1] [129 92 148] #815c94 蕈紫 xunzi [54 89 12 1] [129 60 133] #813c85 桔梗紫 jiegengzi [52 100 17 7] [126 22 113] #7e1671 魏紫 weizi [3 26 10 0] [233 204 211] #e9ccd3 芝兰紫 zhilanzi [10 67 12 0] [210 118 163] #d276a3 菱锰红 lingmenghong [11 97 10 0] [204 85 149] #cc5595 龙须红 longxuhong [8 22 12 0] [230 210 213] #e6d2d5 蓟粉红 jifenhong [16 79 14 1] [195 86 145] #c35691 电气石红 dianqishihong [19 68 18 1] [192 111 152] #c06f98 樱草紫 yingcaozi [25 31 26 5] [189 174 173] #bdaead 芦穗灰 lusuihui [26 43 26 6] [181 152 161] #b598a1 隐红灰 yinhonghui [27 97 27 14] [155 30 100] #9b1e64 苋菜紫 xiancaizi [39 53 38 25] [133 109 114] #856d72 芦灰 luhui [49 71 49 58] [79 56 62] #4f383e 暮云灰 muyunhui [49 82 46 63] [72 41 54] #482936 斑鸠灰 banjiuhui [4 11 9 0] [242 231 229] #f2e7e5 淡藤萝紫 dantengluozi [10 27 11 0] [224 200 209] #e0c8d1 淡青紫 danqingzi [24 58 15 1] [188 132 168] #bc84a8 青蛤壳紫 qinghakezi [31 71 15 1] [173 101 152] #ad6598 豆蔻紫 doukouzi [35 75 18 2] [163 92 143] #a35c8f 扁豆紫 biandouzi [39 91 15 3] [152 54 128] #983680 芥花紫 jiehuazi [43 97 19 8] [139 38 113] #8b2671 青莲 qinglian [44 85 24 10] [137 66 118] #894276 芓紫 zizi [45 99 24 16] [126 32 101] #7e2065 葛巾紫 gejinzi [49 100 29 32] [104 23 82] #681752 牵牛紫 qianniuzi [53 75 41 41] [93 63 81] #5d3f51 紫灰 zihui [55 87 41 52] [78 42 64] #4e2a40 龙睛鱼紫 longjingyuzi [58 96 40 61] [65 28 53] #411c35 荸荠紫 biqizi [63 74 52 70] [54 41 47] #36292f 古鼎灰 gudinghui [81 87 54 84] [30 19 29] #1e131d 乌梅紫 wumeizi [83 87 55 86] [28 13 26] #1c0d1a 深牵牛紫 shenqianniuzi [7 5 7 0] [241 240 237] #f1f0ed 银白 yinbai [13 10 9 0] [226 225 228] #e2e1e4 芡食白 qianshibai [23 18 12 1] [204 204 214] #ccccd6 远山紫 yuanshanzi [39 31 17 2] [167 168 189] #a7a8bd 淡蓝紫 danlanzi [74 64 14 1] [97 100 159] #61649f 山梗紫 shangengzi [63 53 22 5] [116 117 155] #74759b 螺甸紫 luodianzi [21 17 19 1] [207 204 201] #cfccc9 玛瑙灰 manaohui [80 73 21 6] [82 82 136] #525288 野菊紫 yejuzi [100 93 21 5] [46 49 124] #2e317c 满天星紫 mantianxingzi [48 45 40 26] [122 115 116] #7a7374 锌灰 xinhui [91 84 40 43] [48 47 75] #302f4b 野葡萄紫 yeputaozi [70 69 49 56] [62 56 65] #3e3841 剑锋紫 jianfengzi [79 74 49 60] [50 47 59] #322f3b 龙葵紫 longkuizi [90 84 50 69] [34 32 46] #22202e 暗龙胆紫 anlongdanzi [98 93 48 73] [31 32 64] #1f2040 晶石紫 jingshizi [100 94 52 77] [19 17 36] #131124 暗蓝紫 anlanzi [95 46 10 1] [39 117 182] #2775b6 景泰蓝 jingtailan [96 47 11 1] [36 116 181] #2474b5 尼罗蓝 niluolan [25 6 10 0] [208 223 230] #d0dfe6 远天蓝 yuantianlan [53 19 15 1] [147 181 207] #93b5cf 星蓝 xinglan [74 27 16 2] [97 154 195] #619ac3 羽扇豆蓝 yushandoulan [95 45 10 1] [35 118 183] #2376b7 花青 huaqing [78 27 17 2] [86 152 195] #5698c3 睛蓝 jinglan [99 44 10 1] [33 119 184] #2177b8 虹蓝 honglan [43 4 16 0] [176 213 223] #b0d5df 湖水蓝 hushuilan [59 12 19 0] [138 188 209] #8abcd1 秋波蓝 qiubolan [73 17 20 1] [102 169 201] #66a9c9 涧石蓝 jianshilan [93 36 15 2] [41 131 187] #2983bb 潮蓝 chaolan [99 48 11 1] [23 114 180] #1772b4 群青 qunqing [74 2 24 0] [99 187 208] #63bbd0 霁青 jiqing [77 7 24 0] [92 179 204] #5cb3cc 碧青 biqing [94 32 17 3] [36 134 185] #2486b9 宝石蓝 baoshilan [98 43 14 2] [22 119 179] #1677b3 天蓝 tianlan [100 52 11 1] [18 107 174] #126bae 柏林蓝 bolinlan [92 10 25 1] [34 162 195] #22a2c3 海青 haiqing [94 16 23 3] [26 148 188] #1a94bc 钴蓝 gulan [95 25 20 4] [21 139 184] #158bb8 鸢尾蓝 yuanweilan [98 42 16 3] [17 119 176] #1177b0 牵牛花蓝 qianniuhualan [100 65 11 1] [15 89 164] #0f59a4 飞燕草蓝 feiyancaolan [95 47 14 2] [43 115 175] #2b73af 品蓝 pinlan [24 14 16 1] [205 209 211] #cdd1d3 银鱼白 yinyubai [93 49 17 3] [49 112 167] #3170a7 安安蓝 ananlan [64 52 39 28] [94 97 109] #5e616d 鱼尾灰 yuweihui [78 60 40 31] [71 81 100] #475164 鲸鱼灰 jingyuhui [69 64 52 59] [255 254 250] #fffefa 海参灰 haishenhui [76 70 51 60] [53 51 60] #35333c 沙鱼灰 shayuhui [100 89 54 79] [15 20 35] #0f1423 钢蓝 ganglan [35 13 13 0] [186 204 217] #baccd9 云水蓝 yunshuilan [55 20 18 1] [143 178 201] #8fb2c9 晴山蓝 qingshanlan [100 60 8 1] [22 97 171] #1661ab 靛青 dianqing [29 16 17 1] [196 203 207] #c4cbcf 大理石灰 dalishihui [100 67 16 3] [21 85 154] #15559a 海涛蓝 haitaolan [81 41 24 8] [78 124 161] #4e7ca1 蝶翅蓝 diechilan [93 50 21 6] [52 108 156] #346c9c 海军蓝 haijunlan [77 68 54 66] [47 47 53] #2f2f35 水牛灰 shuiniuhui [80 70 53 65] [45 46 54] #2d2e36 牛角灰 niujiaohui [100 86 54 78] [19 24 36] #131824 燕颔蓝 yanhanlan [21 6 10 0] [216 227 231] #d8e3e7 云峰白 yunfengbai [32 8 13 0] [195 215 223] #c3d7df 井天蓝 jingtianlan [91 24 22 4] [47 144 185] #2f90b9 云山蓝 yunshanlan [96 34 18 4] [23 129 181] #1781b5 釉蓝 youlan [28 12 17 0] [199 210 212] #c7d2d4 鸥蓝 oulan [100 53 21 6] [17 101 154] #11659a 搪磁蓝 tangcilan [29 18 21 2] [192 196 195] #c0c4c3 月影白 yueyingbai [36 20 23 2] [178 187 190] #b2bbbe 星灰 xinghui [70 38 36 18] [94 121 135] #5e7987 淡蓝灰 danlanhui [100 68 32 20] [20 74 116] #144a74 鷃蓝 yanlan [55 40 40 23] [116 120 122] #74787a 嫩灰 nenhui [77 50 41 31] [73 92 105] #495c69 战舰灰 zhanjianhui [67 57 49 49] [71 72 76] #47484c 瓦罐灰 waguanhui [87 69 51 58] [43 51 62] #2b333e 青灰 qinghui [100 77 50 62] [28 41 56] #1c2938 鸽蓝 gelan [100 82 51 64] [20 35 52] #142334 钢青 gangqing [100 84 51 68] [16 31 48] #101f30 暗蓝 anlan [11 0 8 0] [238 247 242] #eef7f2 月白 yuebai [33 0 14 0] [198 230 232] #c6e6e8 海天蓝 haitianlan [57 0 22 0] [147 213 220] #93d5dc 清水蓝 qingshuilan [79 0 27 0] [81 196 211] #51c4d3 瀑布蓝 pubulan [89 0 29 0] [41 183 203] #29b7cb 蔚蓝 weilan [92 0 28 0] [14 176 201] #0eb0c9 孔雀蓝 kongquelan [93 0 31 0] [16 174 194] #10aec2 甸子蓝 dianzilan [78 36 0 0] [87 195 194] #57c3c2 石绿 shilv [40 0 30 0] [185 222 201] #b9dec9 竹篁绿 zhuhuanglv [64 0 46 0] [131 203 172] #83cbac 粉绿 fenlv [95 0 52 0] [18 170 156] #12aa9c 美蝶绿 meidielv [75 0 61 0] [102 193 140] #66c18c 毛绿 maolv [78 0 62 0] [93 190 138] #5dbe8a 蔻梢绿 koushaolv [81 0 62 0] [85 187 138] #55bb8a 麦苗绿 maimiaolv [86 0 63 0] [69 183 135] #45b787 蛙绿 walv [92 0 64 0] [43 174 133] #2bae85 铜绿 tonglv [96 0 64 0] [27 167 132] #1ba784 竹绿 zhulv [98 2 64 0] [18 161 130] #12a182 蓝绿 lanlv [32 7 18 0] [196 215 214] #c4d7d6 穹灰 qionghui [94 11 33 1] [30 158 179] #1e9eb3 翠蓝 cuilan [96 16 31 3] [15 149 176] #0f95b0 胆矾蓝 danfanlan [96 18 34 4] [20 145 168] #1491a8 樫鸟蓝 jianniaolan [64 18 32 2] [124 171 177] #7cabb1 闪蓝 shanlan [40 24 32 6] [164 172 167] #a4aca7 冰山蓝 bingshanlan [56 26 36 7] [134 157 157] #869d9d 虾壳青 xiakeqing [71 28 39 10] [100 142 147] #648e93 晚波蓝 wanbolan [89 27 41 13] [59 129 140] #3b818c 蜻蜓蓝 qingtinglan [99 33 38 21] [18 110 130] #126e82 玉鈫蓝 yuqinlan [57 37 42 21] [115 124 123] #737c7b 垩灰 ehui [65 40 44 26] [97 113 114] #617172 夏云灰 xiayunhui [100 52 46 43] [19 72 87] #134857 苍蓝 canglan [67 53 51 50] [71 75 76] #474b4c 黄昏灰 huanghunhui [94 58 54 60] [33 55 61] #21373d 灰蓝 huilan [100 64 56 68] [19 44 51] #132c33 深灰蓝 shenhuilan [49 5 37 0] [164 202 182] #a4cab6 玉簪绿 yuzanlv [96 12 66 2] [44 150 120] #2c9678 青矾绿 qingfanlv [52 11 37 0] [154 190 175] #9abeaf 草原远绿 caoyuanyuanlv [74 14 51 1] [105 167 148] #69a794 梧枝绿 wuzhilv [55 16 40 1] [146 179 165] #92b3a5 浪花绿 langhualv [99 23 70 10] [36 128 103] #248067 海王绿 haiwanglv [88 24 61 9] [66 134 117] #428675 亚丁绿 yadinglv [40 27 36 8] [159 163 154] #9fa39a 镍灰 niehui [52 28 42 10] [138 152 142] #8a988e 明灰 minghui [63 31 50 14] [112 136 125] #70887d 淡绿灰 danlvhui [82 32 60 20] [73 117 104] #497568 飞泉绿 feiquanlv [62 43 52 34] [93 101 95] #5d655f 狼烟灰 langyanhui [85 44 64 52] [49 74 67] #314a43 绿灰 lvhui [93 46 70 61] [34 62 54] #223e36 苍绿 canglv [98 46 73 63] [26 59 50] #1a3b32 深海绿 shenhailv [67 60 57 68] [54 52 51] #363433 长石灰 changshihui [82 60 65 80] [31 38 35] #1f2623 苷蓝绿 ganlanlv [90 62 67 86] [20 30 27] #141e1b 莽丛绿 mangconglv [33 1 29 0] [198 223 200] #c6dfc8 淡翠绿 dancuilv [53 1 44 0] [158 204 171] #9eccab 明绿 minglv [75 0 59 0] [104 184 142] #68b88e 田园绿 tianyuanlv [98 0 82 0] [32 161 98] #20a162 翠绿 cuilv [78 6 62 0] [97 172 133] #61ac85 淡绿 danlv [90 7 73 0] [64 160 112] #40a070 葱绿 conglv [99 10 91 2] [34 148 83] #229453 孔雀绿 kongquelv [27 11 27 1] [202 211 195] #cad3c3 艾绿 ailv [92 14 76 2] [60 149 102] #3c9566 蟾绿 chanlv [100 17 92 5] [32 137 77] #20894d 宫殿绿 gongdianlv [61 19 52 3] [131 167 141] #83a78d 松霜绿 songshuanglv [81 19 67 4] [87 149 114] #579572 蛋白石绿 danbaishilv [100 22 90 10] [32 127 76] #207f4c 薄荷绿 bohelv [66 29 58 12] [110 139 116] #6e8b74 瓦松绿 wasonglv [100 31 91 25] [26 104 64] #1a6840 荷叶绿 heyelv [62 42 56 34] [94 102 91] #5e665b 田螺绿 tianluolv [74 42 65 40] [72 91 77] #485b4d 白屈菜绿 baiqucailv [64 57 60 67] [57 55 51] #393733 河豚灰 hetunhui [68 56 60 66] [55 56 52] #373834 蒽油绿 enyoulv [76 56 75 72] [43 49 44] #2b312c 槲寄生绿 hujishenglv [91 60 76 83] [21 35 27] #15231b 云杉绿 yunshanlv [9 1 14 0] [240 245 229] #f0f5e5 嫩菊绿 nenjulv [20 1 23 0] [223 236 213] #dfecd5 艾背绿 aibeilv [47 0 49 0] [173 213 162] #add5a2 嘉陵水绿 jialingshuilv [89 0 96 0] [65 179 73] #41b349 玉髓绿 yusuilv [88 0 99 0] [67 178 68] #43b244 鲜绿 xianlv [90 0 100 0] [65 174 60] #41ae3c 宝石绿 baoshilv [18 4 33 0] [226 231 191] #e2e7bf 海沬绿 haimeilv [28 4 44 0] [208 222 170] #d0deaa 姚黄 yaohuang [44 3 61 0] [178 207 135] #b2cf87 橄榄石绿 ganlanshilv [62 0 76 0] [140 194 105] #8cc269 水绿 shuilv [42 3 67 0] [183 208 122] #b7d07a 芦苇绿 luweilv [28 6 66 0] [210 217 122] #d2d97a 槐花黄绿 huaihuahuanglv [41 4 76 0] [186 207 101] #bacf65 苹果绿 pingguolv [58 1 88 0] [150 194 78] #96c24e 芽绿 yalv [19 9 84 1] [226 216 73] #e2d849 蝶黄 diehuang [38 8 94 1] [190 201 54] #bec936 橄榄黄绿 ganlanhuanglv [81 0 100 0] [91 174 35] #5bae23 鹦鹉绿 yingwulv [84 64 94 45] [37 61 36] #253d24 油绿 youlv [0 1 4 0] [255 254 248] #fffef8 象牙白 xiangyabai [3 5 8 0] [248 244 237] #f8f4ed 汉白玉 hanbaiyu [0 1 3 0] [255 254 249] #fffef9 雪白 xuebai [4 4 8 0] [247 244 237] #f7f4ed 鱼肚白 yudubai [12 12 16 0] [228 223 215] #e4dfd7 珍珠灰 zhenzhuhui [16 15 20 1] [218 212 203] #dad4cb 浅灰 qianhui [28 5 30 5] [187 181 172] #bbb5ac 铅灰 qianhui [28 25 30 5] [187 181 172] #bbb5ac 中灰 zhonghui [42 40 43 23] [134 126 118] #867e76 瓦灰 wahui [43 40 44 42] [132 124 116] #847c74 夜灰 yehui [42 42 45 27] [128 118 110] #80766e 雁灰 yanhui [42 42 46 27] [129 119 110] #81776e 深灰 shenhui myData.csv 0 1 2 3 4 5 6 date sleepTime bikeToHome Cook drinkWater sad events 2023-12-0 2023-12-0 2023-12-0 2023-12-0 2023-12-22 3;7 2 计网(待补)，数据结构(待补);;;github 热力图 2023-12-21 23;7 2 计网(待补)，数据结构;;;键位清单修改 2023-12-20 23;8 2 计网，数据结构(补充);;;188购买了ltao.top域名 2023-12-19 3;8 2 计网，数据结构(这天熬夜，没有去做);;;首页修改卡片化布局;;;ltao.cc域名要到期了，考虑购买ltao.top(阿里云) 2023-12-18 0;9 1 2 计网，数据结构;;;同步键位修改;;;严重迟到.下次注意 2023-12-17 0;9 我是谁，没有真正的安全 2023-12-16 0;9 铁雨;;;铁雨2 2023-12-15 3;9 1 2 2023-12-14 1;8 2 2023-12-13 2;8 2 2023-12-12 0;8 2 申请社保卡(支付宝) 2023-12-11 0;8 2 颜色板;;;引用结构优化 2023-12-10 0;8 1 2023-12-09 0;8 2023-12-08 23;7 2 办理社保卡;;;关于我的(创建);;;首页美化(添加创建文档) 2023-12-07 23;8 燕麦粥\t2 复查出牙龈炎;;;滚动条美化、Data展示、颜色美化 2023-12-06 2;8 八宝粥 2 日历美化;;;markDown格式美化 2023-12-05 23;7 燕麦粥 2 1 timeline美化、日历美化 2023-12-04 1;7 食谱参考;;;timeline美化 2023-12-03 3;10 1 重置电脑 2023-12-02 4;10 妙三多第第二针 2023-12-01 2;7 1 2023-11-30 0;7 2 美年大健康体检(补牙720下周四固定，右侧有一颗肾结石，多喝水少坐) 2023-11-29 4;8 1 1 TCP 内容补充;;;插入排序 2023-11-28 23;7 计网1小时(TCP三次握手和三次挥手);;;数据结构1小时(顺序\\二分\\分块) 2023-11-27 12;7 快餐 2 更新python 方法参考;;;更新hugo 方法参考 2023-11-26 0;7 快餐 2023-11-25 1;7 快餐 1 打了篮球1小时 2023-11-24 2;7 粥 1 1 优化代码 2023-11-23 2;7 快餐 2 从快倒闭的时光相册里下载照片;;;再次更新changeKey.ahk 2023-11-22 1;7 快餐 1 时间树外观调整;;;进一步优化数据处理及其结构 2023-11-21 1;7 快餐 导入myData数据 2023-11-20 23;8 粥 1 创建时间树 2023-11-19 23;7 快餐 2023-11-18 1;7 快餐 2023-11-17 1;7 快餐 1 写完了findAllJson.py 2023-11-16 1;7 快餐 2 2023-11-15 0;7 快餐 2 看udp和tcp 视频;;;下载阿里云盘的电影 2023-11-14 1;9 外卖 1 2023-11-13 23;7 五香干\u0026#43;猪肉 2 半小时午休 2023-11-12 23;7 4个小时午休 2023-11-11 2个小时投篮 2023-11-10 3;7 五香干\u0026#43;猪肉\u0026#43;煎蛋 1 1 购入两个两盘盒和硬盘 2023-11-09 23;7 3 json 汇总并转为csv 2023-11-08 0;7 2 1 新增myData.csv;;;HttpCanary抓包微信支付和美团共享单车 2023-11-07 3 2023-10-16 23;7 18:33 2023-10-15 统一颜色 color-light;;;code 代码块更改: 文本折行 \\ 高亮 \\ 字体和大小;;;把 neo 5 SE 解开 bl 获取 root 了 差点成砖. 2023-10-14 把 小米9 刷成 miui13了 2023-10-13 买了个 apple music 的家庭会员 效果还不错 但是有一些歌没有 2023-10-12 新增第三行内容(原第三行成第四行) 确定所有文章的字数之和;;;写完了第一行内容: 时间段确定 判断早中晚\\上下班确定 判断离上下班有多久时间 \\ 离本周与本月有多久 2023-10-11 运动打球一次;;;确定首页展示内容，包括 万物皆有定数 和 首页美景 2023-10-10 找到如何修改首页的方法了，明天再改过去。;;;时间格式化完成， 模仿 微博 格式 (秒级别的还没改) 2023-10-09 带饭的玻璃碗在微波炉里裂开了 退了 8.5;;;_index.md(首页) 补充一些语录;;;日志的文件 _index.md(首页) → 日志.md(列表下);;;新增稿 技术记录 并将每个问题记录文件改为添加到该文件中的 3 级标题下 2023-10-08 2023-10-07 2023-10-06 2023-10-05 2023-10-04 增加文章数量统计 2023-10-03 2023-10-02 买了一个99元一年的碎屏险 2023-10-01 2023-09-30 退掉 neo5，买 neo 5 SE（花了2100） 2023-09-29 安装插件接入chatGPT;;;增加字数统计 countWords(同 word 字数) 2023-09-28 2023-09-27 花 2800 买了一个realme gt neo5 16g 1T;;; 2023-09-26 把obsidian 项目搭建到 GitHub，并修改网站颜色和字体，完成更新时间自动修复。;;;开始记日记;;;失眠 2023-09-25 开始部署搭建 obsidian环境 2023-09-21 18:17 2023-05-29 18:34 2023-05-28 2023-05-27 2023-05-26 2023-05-25 18:36 2023-05-24 2023-05-23 2023-05-22 19:04 2023-05-19 18:34 2023-05-18 18:55 2023-05-17 18:36 2023-05-16 18:18 2023-05-15 18:23 2023-04-28 18:49 2023-04-27 18:24 2023-04-26 18:35 2023-04-18 19:45 "},{"id":24,"href":"/posts/%E6%AD%8C%E8%AF%8D/%E6%99%9A%E9%A3%8E/","title":"晚风","section":"歌词","content":" 作曲 : Copy/BT07-PZ\n作词 : Copy/BT07-PZ\n编曲：July\n采样：星爷\n混音：XTONE\n将近的晚风快吹干整条小巷\n燃尽的灯光无法再将我们点亮\n要明白有些事情不能总靠想象\n大不了今晚继续喝到明天早上\n看不到希望的人还在自言自语说着\n抱怨得不到温暖的人还在继续作着\n他对着电话那头说着自己过得很好\n挂断之后他又在被子里面偷偷哭了\n不存在一帆风顺 偶尔也会去疯混\n尽管有好多人讨论着你是什么门货\n慢慢也有了分寸 不屑于那些争论\n所以我大多数的时候都会选择沉默\n付出的一切难免最后都会化为落尘\n就算整个世界空绝就剩我独自一人\n感觉到肩上重了 心里又再次痛了\n把委屈偷偷收好索性忘掉那些过程\n一个人漫无目的 迷失在晚风里\n我知道后会无期 但也不能逃避\n迷惘的日子 感谢能遇见你\n究竟还要经历多少荆棘\n也许该为我的选择庆幸\n人活着到底为了什么东西忙碌可能为了一张到老也不够还清的账单\n我每天碌碌无为却又感觉活的累总有人劝我别追梦了快去上班\n混到头来不过为了一个名称\n你喜欢的东西总有许多人争\n他们随便动动手指就能得到的你却要付出百倍努力还要赌上你的人生\n或许被打到鼻青脸肿也不敢还手吧\n你知道后果没有人可以来为你承担\n吃完泡面会撒谎自己的钱还有\n一半是不想被担心一半怕再难堪\n我没有他们那么出众没有开豪车的叔送\n就这样其实我也无所谓\n不就是被骂了两句并不值得你去选择放弃\n听完这首歌就早点睡\n一个人漫无目的 迷失在晚风里\n我知道后会无期 但也不能逃避\n迷惘的日子 感谢能遇见你\n究竟还要经历多少荆棘\n也许该为我的选择庆幸\n你没做怎么知道没搞头\n你不要做了 我劝你要脚踏实地的做人嘛\n这里有份洗厕所的工作你先做着 你就别做梦了\n做人如果没梦想 那跟咸鱼有什么分别啊\n你连鞋都没有 那不就是咸鱼一条喽 还学人家讲理想？\n话不能这么讲 我心中的一团火是不会熄的\n那把它吹熄了 不熄？\n熄了可以再点着它\n"},{"id":25,"href":"/posts/%E7%BD%91%E7%AB%99%E6%94%B6%E8%97%8F/","title":"网站收藏","section":"  ","content":" 学习网站 全历史 https://www.allhistory.com 今日热榜 https://tophub.today 知乎日报 https://tophub.today 网络工具 科学上网 机场巴巴 http://www.ckcloud.cc 白嫖机场 https://yyds.白嫖.net 机场推荐 http://www.maomeng.cf SMS-activate https://sms-activate.org 内网穿透 https://www.natfrp.com/ 画图工具 https://handraw.top Chatgpt https://chat.openai.com 建站参考 hugo https://hugo.aiaide.com/post Lyricify https://github.com/WXRIW/Lyricify-App 颜色墙 http://zhongguose.com/#shangengzi Lunar https://6tail.cn/calendar/api.html fullcalendar https://fullcalendar.io/docs 雷雷屋头 https://ll.sc.cn jsDelivr * vercel https://cloud.tencent.com/developer/article/1875306 nameSilo https://www.namesilo.com 百度是一家怎么样的公司\n"},{"id":26,"href":"/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91/","title":"维基百科","section":"技术","content":"维基百科（Wikipedia）提供了一套API，允许开发者通过HTTP请求来获取和检索维基百科的内容。以下是一些关于维基百科API的基本信息：\n维基百科 API 基本信息 Endpoint（终端点）： https://en.wikipedia.org/w/api.php （英语维基百科的API终端点，你可以替换 en 为其他语言标识符）\n请求方式： 主要使用HTTP GET请求，但也支持POST请求。\n返回格式： 默认返回JSON格式，也可以选择其他格式，如XML。\n常用维基百科 API 请求参数 action（动作）： 定义API的行为，常见值包括 query（查询）、parse（解析）、opensearch（开放搜索）等。\nformat（格式）： 指定返回结果的格式，常见值包括 json 和 xml。\ntitles（标题）： 指定要查询的页面标题，可以是单个标题或多个标题。\npageid（页面ID）： 指定要查询的页面的ID，与标题二选一使用。\nprop（属性）： 查询页面的属性，如 revisions（修订版本）、categories（分类）等。\nrvprop（修订版本属性）： 用于指定 revisions 属性的具体内容，如 content（内容）、timestamp（时间戳）等。\nredirects（重定向）： 控制是否将重定向页面包含在结果中。\nlimit（限制）： 用于限制查询结果的数量。\n示例：获取页面内容 https://en.wikipedia.org/w/api.php?action=query\u0026amp;format=json\u0026amp;titles=Python_(programming_language)\u0026amp;prop=revisions\u0026amp;rvprop=content 这个例子用于获取“Python编程语言”页面的内容。你可以通过修改参数来执行不同的操作和查询其他页面。\n请注意：使用维基百科API时，你可能需要遵循维基百科的使用政策和服务条款。详细的API文档和更多信息可以在 维基百科开发者页面找到。\n"},{"id":27,"href":"/posts/%E6%9D%82%E6%80%9D/%E4%BF%A1%E6%81%AF%E5%8F%82%E8%80%83/","title":"信息参考","section":"杂思","content":" low high 悲观 乐观 紧张 放松 怀疑 自信 懒惰 勤劳 内向 外向 疲惫 兴奋 麻烦 方便 伤心 开心 肮脏 干净 虚假 真实 失败 胜利 轻盈 沉重 善变 稳定 冷淡 热烈 异常 正常 模糊 清晰 狭窄 宽阔 短暂 长久 温和 强硬 小气 大方 分离 统一 "},{"id":28,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E5%85%B4%E8%B5%B7/","title":"兴起","section":"个人","content":" 首页美化计划 目的是增强博客的丰富度和内容,使得博客不再那么枯燥无味,并进一步将个人数据透明化和可视化\n步骤如下\n初步利用网页组件美化 搞定数据的存储和传输 图表可视化 万物皆有定数 方式: 系统api/相关软件/自行记录\n数据格式: JSON\n内容: 与我有关的所有数据,单位为天\n步数 睡眠时长, 睡眠起始点 键盘输入字符数量 \\ 鼠标点击次数 饮水量 \\ 吃饭内容 洗澡 \\ 洗头 购物记录 重要的定数 计算力 记忆力 意志力 一言 介绍 在息屏或者锁屏状态下显示一段话,可以运行在移动端或者PC端,每隔一定的时间按照某种顺序来切换另一段话,数据接口可以为本地或网络上的.JSON文件和.CSV文件等.\n待定计划 短信应用开发 移动端和PC端应用开发 参考内容 http://blog.lwons.com/archieve/3_entity_search_databases.html https://languageresources.github.io/2018/03/07/%E8%8B%97%E8%8F%81%E8%8F%81_Wikidata%E7%9F%A5%E8%AF%86%E5%BA%93/ https://www.wikidata.org/w/api.php?action=wbsearchentities\u0026search=Fudan\u0026language=en\u0026limit=20\u0026format=json Wikipedia json数据 https://dumps.wikimedia.org/wikidatawiki/entities/ 有书可读方案 电子书 下载到本地 优秀的阅读体验 个人存储方案 NAS\n好处在于可扩展存储，数据安全，价格也不算特别高\n坏处在于速度和可用性需要网络支持，需要内网穿透或者公网IP，且需要24小时开启，费电\nType-C U盘\n好处在于速度有保障、不需要依赖网络\n坏处在于用时候没法充电，容易丢失，带来发热量，价格略贵\nSD 卡 存储\n好处在于速度有保障、不需要依赖网络\n坏处在于容易丢失，带来发热量，价格贵\n网络云盘（阿里云盘等）\n好处在于可扩展存储，数据安全，价格也不算特别高\n坏处在于速度和可用性需要运营商支持，一般来说，速度都比较慢\n最后总结一下,四个存储方案,供大家参考\n价格 读写速度 可扩展性 稳定性 其他问题 NAS 硬盘便宜,NAS本身贵,网费和电费月支 网速 多块硬盘 极其稳定 Type-C U盘 价格 SD 卡存储 网络云盘(阿里云盘等) "},{"id":29,"href":"/posts/%E4%B8%AA%E4%BA%BA/%E4%BF%AE%E8%BA%AB/","title":"修身","section":"个人","content":" 内在 主要 11 点前睡觉 次要 不在手机上刷短视频 多看书 408科目复习 刷算法题 做 50道计算题 外在 主要 骑车回去 次要 20 个俯卧撑 100 个单腿,左50,右50 穿好衣服,整理仪容仪表 定时 体检,选重要的关键的体检项目, "},{"id":30,"href":"/posts/%E6%9D%82%E6%80%9D/%E9%A2%9C%E8%89%B2%E6%9D%BF/","title":"颜色板","section":"杂思","content":" [4 5 18 0] [249 244 220] #f9f4dc 乳白 rubai [3 8 30 0] [249 236 195] #f7e8aa 杏仁黄 xingrenhuang [4 13 67 0] [248 223 114] #f8df72 茉莉黄 molihuang [5 14 68 1] [248 223 112] #f8df70 麦秆黄 maiganhuang [2 16 84 0] [251 218 65] #fbda41 油菜花黄 youcaihuahuang [1 18 94 0] [254 215 26] #fed71a 佛手黄 foshouhuang [3 16 50 0] [247 222 152] #f7de98 篾黄 miehuang [3 17 69 0] [248 216 106] #f8d86a 葵扇黄 kuishanhuang [0 20 87 0] [252 211 55] #fcd337 柠檬黄 ningmenghuang [0 20 95 0] [252 210 23] #fcd217 金瓜黄 jinguahuang [0 21 94 0] [254 209 16] #ffd111 藤黄 tenghuang [2 16 39 0] [246 222 173] #f6dead 酪黄 laohuang [1 17 50 0] [247 218 148] #f7da94 香水玫瑰黄 xiangshuimeiguihuang [1 21 70 0] [249 211 103] #f9d367 淡密黄 danmihuang [0 23 88 0] [251 205 49] #fbcd31 大豆黄 dadouhuang [0 24 94 0] [252 203 22] #fccb16 素馨黄 suxinhuang [0 24 94 0] [254 204 17] #fecc11 向日葵黄 xiangrikuihuang [0 27 88 0] [251 200 47] #fbc82f 雅梨黄 yalihuang [0 28 94 0] [252 197 21] #fcc515 黄连黄 huanglianhuang [0 29 95 0] [252 195 7] #fcc307 金盏黄 jinzhanhuang [0 32 52 0] [248 195 135] #f8c387 蛋壳黄 dankehuang [0 32 52 0] [247 193 115] #f7c173 肉色 rouse [0 35 89 0] [251 185 41] #fbb929 鹅掌黄 ezhanghuang [0 36 93 0] [251 182 18] #fbb612 鸡蛋黄 jidanhuang [0 35 94 0] [252 183 10] #fcb70a 鼬黄 youhuang [0 44 84 0] [249 166 51] #f9a633 榴萼黄 liuehuang [0 45 92 0] [251 164 20] #fba414 淡橘橙 danjucheng [0 47 92 0] [252 161 6] #fca106 枇杷黄 pipahuang [0 47 92 0] [252 161 4] #fca104 橙皮黄 chengpihuang [0 56 87 0] [252 140 35] #fc8c23 北瓜黄 beiguahuang [0 54 92 0] [250 142 22] #f28e16 杏黄 xinghuang [0 51 91 0] [255 153 0] #ff9900 雄黄 xionghuang [0 56 91 0] [251 139 5] #fb8b05 万寿菊黄 wanshoujuhuang [10 13 35 1] [233 221 182] #e9ddb6 菊蕾白 juleibai [8 19 84 1] [238 208 69] #eed045 秋葵黄 qiukuihuang [6 20 92 1] [242 206 43] #f2ce2b 硫华黄 liuhuahuang [6 22 92 0] [241 202 23] #f1ca17 柚黄 youhuang [15 20 66 2] [221 200 113] #ddc871 芒果黄 mangguohuang [14 22 85 2] [223 194 67] #dfc243 蒿黄 haohuang [12 24 95 2] [226 192 39] #e2c027 姜黄 jianghuang [11 25 99 1] [228 191 17] #e4bf11 香蕉黄 xiangjiaohuang [17 27 94 4] [210 180 44] #d2b42c 草黄 caohuang [17 29 100 4] [210 177 22] #d2b116 新禾绿 xinhelv [28 26 45 7] [183 174 143] #b7ae8f 月灰 yuehui [30 30 70 12] [173 158 85] #ad9e5f 淡灰绿 danhuilv [38 38 76 24] [142 128 75] #8e804b 草灰绿 caohuilv [36 42 100 29] [136 115 34] #887322 苔绿 tailv [36 42 100 30] [134 112 24] #867018 碧螺春绿 biluochunlv [47 47 65 42] [104 94 72] #685e48 燕羽灰 yanyuhui [46 47 69 42] [105 94 69] #695e45 蟹壳灰 xiekehui [48 48 100 45] [100 88 34] #645822 潭水绿 tanshuilv [50 50 10 48] [94 83 20] #5e5314 橄榄绿 ganlanlv [2 6 18 0] [249 241 219] #f9f1db 蚌肉白 bangroubai [3 10 31 0] [248 232 193] #f8e8c1 豆汁黄 douzhihuang [1 19 66 0] [249 215 112] #f9d770 淡茧黄 danjianhuang [0 26 94 0] [255 201 12] #ffc90c 乳鸭黄 ruyahuang [5 11 22 0] [242 230 206] #f2e6ce 荔肉白 liroubai [5 19 50 0] [240 214 149] #f0d695 象牙黄 xiangyahuang [3 23 69 0] [244 206 105] #f4ce69 炒米黄 chaomihuang [1 28 89 0] [246 196 48] #f6c430 鹦鹉冠黄 yingwuguanhuang [0 30 95 0] [249 193 22] #f9c116 木瓜黄 muguahuang [0 32 95 0] [249 189 16] #f9bd10 浅烙黄 qianlaohuang [11 18 39 1] [229 211 170] #e5d3aa 莲子白 lianzibai [5 35 99 0] [232 176 4] #e8b004 谷黄 guhuang [3 36 99 0] [235 177 13] #ebb10d 栀子黄 zhizihuang [11 39 100 2] [217 164 14] #d9a40e 芥黄 jiehuang [28 27 43 8] [181 170 144] #b5aa90 银鼠灰 yinshuhui [26 31 57 10] [182 164 118] #b6a476 尘灰 chenhui [21 43 100 11] [183 141 18] #b78d12 枯绿 kulv [35 44 80 30] [135 114 62] #87723e 鲛青 jiaoqing [32 50 100 31] [135 104 24] #876818 粽叶绿 zongyelv [31 51 100 30] [138 105 19] #8a6913 灰绿 huilv [52 56 64 62] [74 64 53] #4a4035 鹤灰 hehui [48 58 70 62] [77 64 48] #4d4030 淡松烟 dansongyan [45 56 100 56] [88 71 23] #584717 暗海水绿 anhaishuilv [45 55 100 54] [91 73 19] #5b4913 棕榈绿 zonglvlv [1 11 24 0] [249 223 205] #f9e9cd 米色 mise [1 15 38 0] [248 224 176] #f8e0b0 淡肉色 danrouse [0 23 59 0] [249 210 125] #f9d27d 麦芽糖黄 maiyatanghuang [0 34 93 0] [254 186 7] #feba07 琥珀黄 hupohuang [1 31 79 0] [243 191 76] #f3bf4c 甘草黄 gancaohuang [0 33 83 0] [248 188 49] #f8bc31 初熟杏黄 chushuxinghuang [10 27 59 1] [226 193 124] #e2c17c 浅驼色 qiantuose [7 32 78 1] [229 183 81] #e5b751 沙石黄 shashihuang [3 38 97 0] [234 173 26] #eaad1a 虎皮黄 hupihuang [12 41 98 2] [214 160 29] #d6a01d 土黄 tuhuang [28 28 41 9] [180 169 146] #b4a992 百灵鸟灰 bailingniaohui [21 44 97 11] [183 139 38] #b78b26 山鸡黄 shanjihuang [35 47 71 33] [130 107 72] #826b48 龟背黄 guibeihuang [34 52 85 35] [128 99 50] #806332 苍黄 canghuang [32 56 96 34] [129 95 37] #815f25 莱阳梨黄 laiyanglihuang [31 57 100 33] [131 94 29] #835e1d 蜴蜊绿 yililv [46 59 68 61] [79 64 50] #4f4032 松鼠灰 songshuhui [44 61 76 62] [80 62 42] #503e2a 橄榄灰 ganlanhui [43 63 88 61] [81 60 32] #513c20 蟹壳绿 xiekelv [42 64 94 60] [83 60 27] #533c1b 古铜绿 gutonglv [41 66 94 60] [85 59 24] #553b18 焦茶绿 jiaochalv [1 7 13 0] [251 242 227] #fbf2e3 粉白 fenbai [1 12 22 0] [249 232 208] #f9e8d0 落英淡粉 luoyingdanfen [0 27 51 0] [249 203 139] #f9cb8b 瓜瓤粉 guarangfen [0 36 72 0] [251 185 87] #fbb957 蜜黄 mihuang [0 44 91 0] [255 166 15] #ffa60f 金叶黄 jinyehuang [0 43 82 0] [244 168 58] #f4a83a 金莺黄 jinyinghuang [8 31 50 1] [227 189 141] #e3bd8d 鹿角棕 lujiaozong [2 44 83 0] [231 162 63] #e7a23f 凋叶棕 diaoyezong [10 41 72 1] [218 164 90] #daa45a 玳瑁黄 daimaohuang [7 45 82 1] [222 158 68] #de9e44 软木黄 ruanmuhuang [6 51 95 1] [220 145 35] #dc9123 风帆黄 fengfanhuang [19 44 75 7] [192 147 81] #c09351 桂皮淡棕 guipidanzong [32 40 53 22] [151 132 108] #97846c 猴毛灰 houmaohui [27 60 97 21] [152 101 36] #986524 山鸡褐 shanjihe [37 65 84 49] [102 70 42] #66462a 驼色 tuose [38 69 90 54] [93 61 33] #5d3d21 茶褐 chahe [37 74 96 55] [92 55 25] #5c3719 古铜褐 gutonghe [0 10 14 0] [251 236 222] #fbecde 荷花白 hehuabai [0 40 52 0] [248 179 127] #f8b37f 玫瑰粉 meiguifen [0 62 88 0] [249 125 28] #f97d1c 橘橙 jucheng [0 62 85 0] [250 126 35] #fa7e23 美人焦橙 meirenjiaocheng [0 28 25 0] [247 205 188] #f7cdbc 润红 runhong [0 28 22 0] [246 206 193] #f6cec1 淡桃红 dantaohong [0 53 65 0] [240 148 93] #f0945d 海螺橙 hailuocheng [0 44 32 0] [240 173 160] #f0ada0 桃红 taohong [0 45 34 0] [238 170 156] #eeaa9c 颊红 jiahong [0 49 41 0] [238 160 140] #eea08c 淡罂粟红 danyingsuhong [0 58 67 0] [234 137 88] #ea8958 晨曦红 chenxihong [0 65 80 0] [242 118 53] #f27635 蟹壳红 xiekehong [0 69 86 0] [248 107 29] #f86b1d 金莲花橙 jinlianhuacheng [0 69 70 0] [239 111 72] #ef6f48 草莓红 caomeihong [0 72 82 0] [239 99 43] #ef632b 龙睛鱼红 longjingyuhong [0 81 84 0] [241 68 29] #f1441d 蜻蜓红 qingtinghong [0 80 83 0] [240 75 34] #f04b22 大红 dahong [0 80 85 0] [242 72 27] #f2481b 柿红 shihong [0 80 85 0] [243 71 24] #f34718 榴花红 liuhuahong [0 83 87 0] [244 62 6] #f43e06 银朱 yinzhu [0 78 83 0] [237 81 38] #ed5126 朱红 zhuhong [0 50 68 0] [240 156 90] #f09c5a 鲑鱼红 guiyuhong [5 69 87 0] [242 123 31] #f26b1f 金黄 jinhuang [7 52 71 1] [217 145 86] #d99156 鹿皮褐 lupihe [4 57 82 1] [219 133 64] #db8540 醉瓜肉 zuiguarou [0 64 93 0] [222 118 34] #de7622 麂棕 jizong [22 28 34 6] [193 178 163] #c1b2a3 淡银灰 danyinhui [18 57 76 6] [190 126 74] #be7e4a 淡赭 danzhe [14 69 100 4] [193 101 26] #c1651a 槟榔综 binglangzong [34 42 46 23] [145 128 114] #918072 银灰 yinhui [42 40 46 20] [154 136 120] #9a8878 海鸥灰 haiouhui [27 69 85 22] [148 88 51] #945833 淡咖啡 dankafei [26 76 97 20] [150 77 34] #964d22 岩石棕 yanshizong [25 80 100 20] [149 68 22] #954416 芒果棕 mangguozong [39 60 58 51] [98 73 65] #624941 石板灰 shibanhui [38 63 63 50] [100 72 61] #64483d 珠母灰 zhumuhui [32 83 96 41] [113 54 29] #71361d 丁香棕 dingxiangzong [30 87 100 38] [117 49 23] #753117 咖啡 kafei [30 89 100 39] [115 46 18] #732e12 筍皮棕 sunpizong [0 72 86 0] [252 99 21] #fc6315 燕颔红 yanhanhong [3 38 39 0] [232 180 154] #e8b49a 玉粉红 yufenhong [0 70 87 0] [228 104 40] #e46828 金驼 jintuo [0 76 97 0] [216 89 22] #d85916 铁棕 tiezong [23 35 38 10] [183 160 145] #b7a091 蛛网灰 zhuwanghui [16 77 100 6] [183 81 29] #b7511d 淡可可棕 dankekezong [31 63 66 31] [139 97 77] #8b614d 中红灰 zhonghonghui [28 76 82 26] [140 75 49] #8c4b31 淡土黄 dantuhuang [28 83 92 28] [135 61 36] #873d24 淡豆沙 dandousha [27 85 98 27] [136 58 30] #883a1e 椰壳棕 yekezong [40 64 61 56] [91 66 58] #5b423a 淡铁灰 dantiehui [37 72 72 52] [96 61 48] #603d30 中灰驼 zhonghuituo [34 82 85 47] [103 52 36] #673424 淡栗棕 danlizong [33 89 92 48] [101 43 28] #652b1c 可可棕 kekezong [32 90 95 45] [105 42 27] #692a1b 柞叶棕 zhayezong [0 53 59 0] [251 153 104] #fb9968 野蔷薇红 yeqiangweihong [0 65 79 0] [252 121 48] #fc7930 菠萝红 boluohong [2 31 31 0] [237 195 174] #edc3ae 藕荷 ouhe [0 70 91 0] [225 103 35] #e16723 陶瓷红 taocihong [16 23 27 2] [212 196 183] #d4c4b7 晓灰 xiaohui [9 64 78 1] [207 117 67] #cf7543 余烬红 yujinhong [8 72 93 1] [205 98 39] #cd6227 火砖红 huozhuanhong [22 64 71 12] [170 106 76] #aa6a4c 火泥棕 huonizong [20 76 92 9] [166 82 44] #a6522c 绀红 ganhong [31 79 77 37] [119 61 49] #773d31 橡树棕 xiangshuzong [45 68 57 66] [72 51 50] #483332 海报灰 haibaohui [41 76 64 65] [175 46 43] #4b2e2b 玫瑰灰 meiguihui [41 84 71 67] [72 37 34] #482522 火山棕 huoshanzong [40 92 78 66] [72 30 28] #481e1c 豆沙 dousha [0 9 12 0] [251 238 226] #fbeee2 淡米粉 danmifen [0 19 19 0] [246 220 206] #f6dcce 初桃粉红 chutaofenhong [0 27 27 0] [247 207 186] #f7cfba 介壳淡粉红 jieqiaodanfenhong [0 43 43 0] [246 173 143] #f6ad8f 淡藏花红 dancanghuahong [0 58 61 0] [246 140 96] #f68c60 瓜瓤红 guaranghong [0 67 74 0] [249 114 61] #f9723d 芙蓉红 furonghong [0 74 85 0] [250 93 25] #fa5d19 莓酱红 meijianghong [0 62 66 0] [238 128 85] #ee8055 法螺红 faluohong [4 82 99 0] [207 72 19] #cf4813 落霞红 luoxiahong [21 43 43 9] [184 148 133] #b89485 淡玫瑰灰 danmeiguihui [18 80 92 7] [177 75 40] #b14b28 蟹蝥红 xiemaohong [27 91 95 28] [134 48 32] #863020 火岩棕 huoyanzong [27 96 100 27] [134 38 23] #862617 赭石 zheshi [36 90 82 56] [89 38 32] #592620 暗驼棕 antuozong [35 96 88 55] [90 31 27] #5a1f1b 酱棕 jiangzong [34 98 91 53] [92 30 25] #5c1e19 栗棕 lizong [0 31 24 0] [244 199 186] #f4c7ba 洋水仙红 yangshuixianhong [0 67 55 0] [241 118 102] #f17666 谷鞘红 guqiaohong [0 77 69 0] [241 86 66] #f15642 苹果红 pingguohong [0 84 82 0] [245 57 28] #f5391c 铁水红 tieshuihong [0 76 67 0] [242 90 71] #f25a47 桂红 guihong [0 84 82 0] [243 59 31] #f33b1f 极光红 jiguanghong [0 38 25 0] [242 185 178] #f2b9b2 粉红 fenhong [0 53 36 0] [241 151 144] #f19790 舌红 shehong [0 76 68 0] [240 90 70] #f05a46 曲红 quhong [0 83 81 0] [242 62 35] #f23e23 红汞红 honggonghong [0 29 16 0] [242 202 201] #f2cac9 淡绯 danfei [0 43 24 0] [239 175 173] #efafad 无花果红 wuhuaguohong [0 57 36 0] [241 144 140] #f1908c 榴子红 liuzihong [0 83 81 0] [240 63 36] #f03f24 胭脂红 yanzhihong [0 50 23 0] [240 161 168] #f0a1a8 合欢红 hehuanhong [0 56 27 0] [241 147 156] #f1939c 春梅红 chunmeihong [0 65 38 0] [240 124 130] #f07c82 香叶红 xiangyehong [0 80 72 0] [240 74 58] #f04a3a 珊瑚红 shanhuhong [0 84 82 0] [241 60 34] #f13c22 萝卜红 luobohong [0 65 29 0] [231 124 142] #e77c8e 淡茜红 danqianhong [0 77 49 0] [237 90 101] #ed5a65 艳红 yanhong [0 81 66 0] [237 72 69] #ed4845 淡菽红 danshuhong [0 84 76 0] [237 59 47] #ed3b2f 鱼鳃红 yusaihong [0 86 82 0] [237 51 33] #ed3321 樱桃红 yingtaohong [0 82 44 0] [238 72 102] #ee4866 淡蕊香红 danruixianghong [0 82 46 0] [238 72 99] #ee4863 石竹红 shizhuhong [0 82 50 0] [239 71 93] #ef475d 草茉莉红 caomolihong [0 84 60 0] [238 63 77] #ee3f4d 茶花红 chahuahong [0 86 74 0] [237 51 51] #ed3333 枸枢红 goushuhong [0 88 81 0] [236 43 36] #ec2b24 秋海棠红 qiuhaitanghong [0 89 84 0] [235 38 26] #eb261a 丽春红 lichunhong [0 90 90 0] [222 42 24] #de2a18 夕阳红 xiyanghong [0 92 95 0] [212 37 23] #d42517 鹤顶红 hedinghong [19 89 85 9] [171 55 47] #ab372f 鹅血石红 exueshihong [17 98 100 8] [172 31 24] #ac1f18 覆盆子红 fupenzihong [36 81 64 54] [93 49 49] #5d3131 貂紫 diaozi [35 94 77 53] [92 34 35] #5c2223 暗玉紫 anyuzi [35 100 85 54] [90 25 27] #5a191b 栗紫 lizi [35 100 80 54] [90 18 22] #5a1216 葡萄酱紫 putaojiangzi [0 49 27 0] [238 162 164] #eea2a4 牡丹粉红 mudanfenhong [0 78 44 0] [237 85 106] #ed556a 山茶红 shanchahong [0 86 55 0] [240 55 82] #f03752 海棠红 haitanghong [13 83 62 3] [192 72 81] #c04851 玉红 yuhong [11 93 77 2] [192 44 56] #c02c38 高粱红 gaolianghong [22 76 54 12] [167 83 90] #a7535a 满江红 manjianghong [28 100 86 33] [124 24 35] #7c1823 枣红 zaohong [39 92 67 64] [76 31 36] #4c1f24 葡萄紫 putaozi [39 100 79 63] [77 16 24] #4d1018 酱紫 jiangzi [0 89 62 0] [238 39 70] #ee2746 淡曙红 danshuhong [0 93 76 0] [222 28 49] #de1c31 唐菖蒲红 tangchangpuhong [1 95 82 0] [209 26 45] #d11a2d 鹅冠红 eguanhong [13 76 50 2] [196 90 101] #c45a65 莓红 meihong [10 96 82 2] [194 31 48] #c21f30 枫叶红 fengyehong [19 99 86 11] [166 27 41] #a61b29 苋菜红 xiancaihong [29 73 51 28] [137 78 84] #894e54 烟红 yanhong [27 98 79 30] [130 32 43] #82202b 暗紫苑红 anziyuanhong [27 100 90 29] [130 17 31] #82111f 殷红 yanhong [36 95 71 59] [84 30 36] #541e24 猪肝紫 zhuganzi [38 100 81 61] [80 10 22] #500a16 金鱼紫 jinyuzi [1 11 9 0] [248 235 230] #f8ebe6 草珠红 caozhuhong [0 68 21 0] [236 118 150] #ec7696 淡绛红 danjianghong [0 86 30 0] [239 52 115] #ef3473 品红 pinhong [0 69 22 0] [234 114 147] #ea7293 凤仙花红 fengxianhuahong [0 52 18 0] [236 155 173] #ec9bad 粉团花红 fentuanhuahong [0 80 28 0] [235 80 126] #eb507e 夹竹桃红 jiazhutaohong [0 88 36 0] [237 47 106] #ed2f6a 榲桲红 wenpohong [0 39 14 0] [238 184 195] #eeb8c3 姜红 jianghong [0 80 27 0] [234 81 127] #ea517f 莲瓣红 lianbanhong [0 33 11 0] [241 196 205] #f1c4cd 水红 shuihong [0 60 18 0] [236 138 164] #ec8aa4 报春红 baochunhong [8 78 35 1] [206 87 109] #ce5777 月季红 yuejihong [0 52 15 0] [237 157 178] #ed9db2 豇豆红 jiangdouhong [0 63 18 0] [239 130 160] #ef82a0 霞光红 xiaguanghong [0 85 33 0] [235 60 112] #eb3c70 松叶牡丹红 songyemudanhong [0 88 40 0] [236 44 100] #ec2c64 喜蛋红 xidanhong [5 38 20 0] [227 180 184] #e3b4b8 鼠鼻红 shubihong [5 96 73 1] [204 22 58] #cc163a 尖晶玉红 jianjingyuhong [16 61 34 4] [194 124 136] #c27c88 山黎豆红 shanlidouhong [13 90 56 3] [191 53 83] #bf3553 锦葵红 jinkuihong [41 64 44 36] [115 87 92] #73575c 鼠背灰 shubeihui [33 100 75 49] [98 22 36] #621624 甘蔗紫 ganzhezi [32 100 84 49] [99 7 28] #63071c 石竹紫 shizhuzi [57 72 54 74] [54 40 43] #36282b 苍蝇灰 cangyinghui [52 88 58 81] [48 22 28] #30161c 卵石紫 luanshizi [56 88 62 84] [43 18 22] #2b1216 李紫 lizi [58 90 63 83] [45 12 19] #2d0c13 茄皮紫 qiepizi [0 76 16 0] [206 94 138] #ce5e8a 吊钟花红 diaozhonghuahong [0 81 18 0] [236 78 138] #ec4e8a 兔眼红 tuyanhong [0 87 24 0] [238 44 121] #ee2c79 紫荆红 zijinghong [24 99 52 19] [149 28 72] #951c48 菜头紫 caitouzi [34 97 54 50] [98 29 52] #621d34 鹞冠紫 yaoguanzi [33 100 58 60] [98 16 46] #62102e 葡萄酒红 putaojiuhong [53 81 50 74] [56 33 41] #382129 磨石紫 moshizi [48 90 50 76] [56 25 36] #381924 檀紫 tanzi [50 91 54 79] [51 20 30] #33141e 火鹅紫 huoezi [53 92 55 81] [49 15 27] #310f1b 墨紫 mozi [0 48 15 0] [238 166 183] #eea6b7 晶红 jinghong [0 82 16 0] [239 73 139] #ef498b 扁豆花红 biandouhuahong [2 66 22 0] [222 120 151] #de7897 白芨红 baijihong [0 85 24 0] [222 63 124] #de3f7c 嫩菱红 nenlinghong [5 87 30 1] [209 60 116] #d13c74 菠根红 bogenhong [15 68 28 2] [197 112 139] #c5708b 酢酱草红 cujiangcaohong [22 83 34 11] [168 69 107] #a8456b 洋葱紫 yangcongzi [40 92 47 64] [75 30 47] #4b1e2f 海象紫 haixiangzi [41 97 49 68] [70 22 41] #461629 绀紫 ganzi [42 99 51 69] [68 14 37] #440e25 古铜紫 gutongzi [0 30 12 0] [240 201 207] #f0c9cf 石蕊红 shiruihong [0 50 16 0] [235 160 179] #eba0b3 芍药耕红 shaoyaogenghong [0 88 23 0] [236 45 122] #ec2d7a 藏花红 canghuahong [0 71 18 0] [225 108 150] #e16c96 初荷红 chuhehong [6 13 7 0] [237 227 231] #ede3e7 马鞭草紫 mabiancaozi [7 20 8 0] [233 215 223] #e9d7df 丁香淡紫 dingxiangdanzi [7 79 18 0] [210 86 140] #d2568c 丹紫红 danzihong [4 89 21 0] [210 53 125] #d2357d 玫瑰红 meiguihong [19 27 9 0] [209 194 211] #d1c2d3 淡牵牛紫 danqianniuzi [21 37 12 0] [200 173 196] #c8adc4 凤信紫 fengxinzi [23 53 14 1] [192 142 175] #c08eaf 萝兰紫 luolanzi [18 91 18 2] [186 47 123] #ba2f7b 玫瑰紫 meiguizi [58 56 17 2] [128 118 163] #8076a3 藤萝紫 tengluozi [57 62 16 2] [128 109 158] #806d9e 槿紫 jinzi [56 72 15 1] [129 92 148] #815c94 蕈紫 xunzi [54 89 12 1] [129 60 133] #813c85 桔梗紫 jiegengzi [52 100 17 7] [126 22 113] #7e1671 魏紫 weizi [3 26 10 0] [233 204 211] #e9ccd3 芝兰紫 zhilanzi [10 67 12 0] [210 118 163] #d276a3 菱锰红 lingmenghong [11 97 10 0] [204 85 149] #cc5595 龙须红 longxuhong [8 22 12 0] [230 210 213] #e6d2d5 蓟粉红 jifenhong [16 79 14 1] [195 86 145] #c35691 电气石红 dianqishihong [19 68 18 1] [192 111 152] #c06f98 樱草紫 yingcaozi [25 31 26 5] [189 174 173] #bdaead 芦穗灰 lusuihui [26 43 26 6] [181 152 161] #b598a1 隐红灰 yinhonghui [27 97 27 14] [155 30 100] #9b1e64 苋菜紫 xiancaizi [39 53 38 25] [133 109 114] #856d72 芦灰 luhui [49 71 49 58] [79 56 62] #4f383e 暮云灰 muyunhui [49 82 46 63] [72 41 54] #482936 斑鸠灰 banjiuhui [4 11 9 0] [242 231 229] #f2e7e5 淡藤萝紫 dantengluozi [10 27 11 0] [224 200 209] #e0c8d1 淡青紫 danqingzi [24 58 15 1] [188 132 168] #bc84a8 青蛤壳紫 qinghakezi [31 71 15 1] [173 101 152] #ad6598 豆蔻紫 doukouzi [35 75 18 2] [163 92 143] #a35c8f 扁豆紫 biandouzi [39 91 15 3] [152 54 128] #983680 芥花紫 jiehuazi [43 97 19 8] [139 38 113] #8b2671 青莲 qinglian [44 85 24 10] [137 66 118] #894276 芓紫 zizi [45 99 24 16] [126 32 101] #7e2065 葛巾紫 gejinzi [49 100 29 32] [104 23 82] #681752 牵牛紫 qianniuzi [53 75 41 41] [93 63 81] #5d3f51 紫灰 zihui [55 87 41 52] [78 42 64] #4e2a40 龙睛鱼紫 longjingyuzi [58 96 40 61] [65 28 53] #411c35 荸荠紫 biqizi [63 74 52 70] [54 41 47] #36292f 古鼎灰 gudinghui [81 87 54 84] [30 19 29] #1e131d 乌梅紫 wumeizi [83 87 55 86] [28 13 26] #1c0d1a 深牵牛紫 shenqianniuzi [7 5 7 0] [241 240 237] #f1f0ed 银白 yinbai [13 10 9 0] [226 225 228] #e2e1e4 芡食白 qianshibai [23 18 12 1] [204 204 214] #ccccd6 远山紫 yuanshanzi [39 31 17 2] [167 168 189] #a7a8bd 淡蓝紫 danlanzi [74 64 14 1] [97 100 159] #61649f 山梗紫 shangengzi [63 53 22 5] [116 117 155] #74759b 螺甸紫 luodianzi [21 17 19 1] [207 204 201] #cfccc9 玛瑙灰 manaohui [80 73 21 6] [82 82 136] #525288 野菊紫 yejuzi [100 93 21 5] [46 49 124] #2e317c 满天星紫 mantianxingzi [48 45 40 26] [122 115 116] #7a7374 锌灰 xinhui [91 84 40 43] [48 47 75] #302f4b 野葡萄紫 yeputaozi [70 69 49 56] [62 56 65] #3e3841 剑锋紫 jianfengzi [79 74 49 60] [50 47 59] #322f3b 龙葵紫 longkuizi [90 84 50 69] [34 32 46] #22202e 暗龙胆紫 anlongdanzi [98 93 48 73] [31 32 64] #1f2040 晶石紫 jingshizi [100 94 52 77] [19 17 36] #131124 暗蓝紫 anlanzi [95 46 10 1] [39 117 182] #2775b6 景泰蓝 jingtailan [96 47 11 1] [36 116 181] #2474b5 尼罗蓝 niluolan [25 6 10 0] [208 223 230] #d0dfe6 远天蓝 yuantianlan [53 19 15 1] [147 181 207] #93b5cf 星蓝 xinglan [74 27 16 2] [97 154 195] #619ac3 羽扇豆蓝 yushandoulan [95 45 10 1] [35 118 183] #2376b7 花青 huaqing [78 27 17 2] [86 152 195] #5698c3 睛蓝 jinglan [99 44 10 1] [33 119 184] #2177b8 虹蓝 honglan [43 4 16 0] [176 213 223] #b0d5df 湖水蓝 hushuilan [59 12 19 0] [138 188 209] #8abcd1 秋波蓝 qiubolan [73 17 20 1] [102 169 201] #66a9c9 涧石蓝 jianshilan [93 36 15 2] [41 131 187] #2983bb 潮蓝 chaolan [99 48 11 1] [23 114 180] #1772b4 群青 qunqing [74 2 24 0] [99 187 208] #63bbd0 霁青 jiqing [77 7 24 0] [92 179 204] #5cb3cc 碧青 biqing [94 32 17 3] [36 134 185] #2486b9 宝石蓝 baoshilan [98 43 14 2] [22 119 179] #1677b3 天蓝 tianlan [100 52 11 1] [18 107 174] #126bae 柏林蓝 bolinlan [92 10 25 1] [34 162 195] #22a2c3 海青 haiqing [94 16 23 3] [26 148 188] #1a94bc 钴蓝 gulan [95 25 20 4] [21 139 184] #158bb8 鸢尾蓝 yuanweilan [98 42 16 3] [17 119 176] #1177b0 牵牛花蓝 qianniuhualan [100 65 11 1] [15 89 164] #0f59a4 飞燕草蓝 feiyancaolan [95 47 14 2] [43 115 175] #2b73af 品蓝 pinlan [24 14 16 1] [205 209 211] #cdd1d3 银鱼白 yinyubai [93 49 17 3] [49 112 167] #3170a7 安安蓝 ananlan [64 52 39 28] [94 97 109] #5e616d 鱼尾灰 yuweihui [78 60 40 31] [71 81 100] #475164 鲸鱼灰 jingyuhui [69 64 52 59] [255 254 250] #fffefa 海参灰 haishenhui [76 70 51 60] [53 51 60] #35333c 沙鱼灰 shayuhui [100 89 54 79] [15 20 35] #0f1423 钢蓝 ganglan [35 13 13 0] [186 204 217] #baccd9 云水蓝 yunshuilan [55 20 18 1] [143 178 201] #8fb2c9 晴山蓝 qingshanlan [100 60 8 1] [22 97 171] #1661ab 靛青 dianqing [29 16 17 1] [196 203 207] #c4cbcf 大理石灰 dalishihui [100 67 16 3] [21 85 154] #15559a 海涛蓝 haitaolan [81 41 24 8] [78 124 161] #4e7ca1 蝶翅蓝 diechilan [93 50 21 6] [52 108 156] #346c9c 海军蓝 haijunlan [77 68 54 66] [47 47 53] #2f2f35 水牛灰 shuiniuhui [80 70 53 65] [45 46 54] #2d2e36 牛角灰 niujiaohui [100 86 54 78] [19 24 36] #131824 燕颔蓝 yanhanlan [21 6 10 0] [216 227 231] #d8e3e7 云峰白 yunfengbai [32 8 13 0] [195 215 223] #c3d7df 井天蓝 jingtianlan [91 24 22 4] [47 144 185] #2f90b9 云山蓝 yunshanlan [96 34 18 4] [23 129 181] #1781b5 釉蓝 youlan [28 12 17 0] [199 210 212] #c7d2d4 鸥蓝 oulan [100 53 21 6] [17 101 154] #11659a 搪磁蓝 tangcilan [29 18 21 2] [192 196 195] #c0c4c3 月影白 yueyingbai [36 20 23 2] [178 187 190] #b2bbbe 星灰 xinghui [70 38 36 18] [94 121 135] #5e7987 淡蓝灰 danlanhui [100 68 32 20] [20 74 116] #144a74 鷃蓝 yanlan [55 40 40 23] [116 120 122] #74787a 嫩灰 nenhui [77 50 41 31] [73 92 105] #495c69 战舰灰 zhanjianhui [67 57 49 49] [71 72 76] #47484c 瓦罐灰 waguanhui [87 69 51 58] [43 51 62] #2b333e 青灰 qinghui [100 77 50 62] [28 41 56] #1c2938 鸽蓝 gelan [100 82 51 64] [20 35 52] #142334 钢青 gangqing [100 84 51 68] [16 31 48] #101f30 暗蓝 anlan [11 0 8 0] [238 247 242] #eef7f2 月白 yuebai [33 0 14 0] [198 230 232] #c6e6e8 海天蓝 haitianlan [57 0 22 0] [147 213 220] #93d5dc 清水蓝 qingshuilan [79 0 27 0] [81 196 211] #51c4d3 瀑布蓝 pubulan [89 0 29 0] [41 183 203] #29b7cb 蔚蓝 weilan [92 0 28 0] [14 176 201] #0eb0c9 孔雀蓝 kongquelan [93 0 31 0] [16 174 194] #10aec2 甸子蓝 dianzilan [78 36 0 0] [87 195 194] #57c3c2 石绿 shilv [40 0 30 0] [185 222 201] #b9dec9 竹篁绿 zhuhuanglv [64 0 46 0] [131 203 172] #83cbac 粉绿 fenlv [95 0 52 0] [18 170 156] #12aa9c 美蝶绿 meidielv [75 0 61 0] [102 193 140] #66c18c 毛绿 maolv [78 0 62 0] [93 190 138] #5dbe8a 蔻梢绿 koushaolv [81 0 62 0] [85 187 138] #55bb8a 麦苗绿 maimiaolv [86 0 63 0] [69 183 135] #45b787 蛙绿 walv [92 0 64 0] [43 174 133] #2bae85 铜绿 tonglv [96 0 64 0] [27 167 132] #1ba784 竹绿 zhulv [98 2 64 0] [18 161 130] #12a182 蓝绿 lanlv [32 7 18 0] [196 215 214] #c4d7d6 穹灰 qionghui [94 11 33 1] [30 158 179] #1e9eb3 翠蓝 cuilan [96 16 31 3] [15 149 176] #0f95b0 胆矾蓝 danfanlan [96 18 34 4] [20 145 168] #1491a8 樫鸟蓝 jianniaolan [64 18 32 2] [124 171 177] #7cabb1 闪蓝 shanlan [40 24 32 6] [164 172 167] #a4aca7 冰山蓝 bingshanlan [56 26 36 7] [134 157 157] #869d9d 虾壳青 xiakeqing [71 28 39 10] [100 142 147] #648e93 晚波蓝 wanbolan [89 27 41 13] [59 129 140] #3b818c 蜻蜓蓝 qingtinglan [99 33 38 21] [18 110 130] #126e82 玉鈫蓝 yuqinlan [57 37 42 21] [115 124 123] #737c7b 垩灰 ehui [65 40 44 26] [97 113 114] #617172 夏云灰 xiayunhui [100 52 46 43] [19 72 87] #134857 苍蓝 canglan [67 53 51 50] [71 75 76] #474b4c 黄昏灰 huanghunhui [94 58 54 60] [33 55 61] #21373d 灰蓝 huilan [100 64 56 68] [19 44 51] #132c33 深灰蓝 shenhuilan [49 5 37 0] [164 202 182] #a4cab6 玉簪绿 yuzanlv [96 12 66 2] [44 150 120] #2c9678 青矾绿 qingfanlv [52 11 37 0] [154 190 175] #9abeaf 草原远绿 caoyuanyuanlv [74 14 51 1] [105 167 148] #69a794 梧枝绿 wuzhilv [55 16 40 1] [146 179 165] #92b3a5 浪花绿 langhualv [99 23 70 10] [36 128 103] #248067 海王绿 haiwanglv [88 24 61 9] [66 134 117] #428675 亚丁绿 yadinglv [40 27 36 8] [159 163 154] #9fa39a 镍灰 niehui [52 28 42 10] [138 152 142] #8a988e 明灰 minghui [63 31 50 14] [112 136 125] #70887d 淡绿灰 danlvhui [82 32 60 20] [73 117 104] #497568 飞泉绿 feiquanlv [62 43 52 34] [93 101 95] #5d655f 狼烟灰 langyanhui [85 44 64 52] [49 74 67] #314a43 绿灰 lvhui [93 46 70 61] [34 62 54] #223e36 苍绿 canglv [98 46 73 63] [26 59 50] #1a3b32 深海绿 shenhailv [67 60 57 68] [54 52 51] #363433 长石灰 changshihui [82 60 65 80] [31 38 35] #1f2623 苷蓝绿 ganlanlv [90 62 67 86] [20 30 27] #141e1b 莽丛绿 mangconglv [33 1 29 0] [198 223 200] #c6dfc8 淡翠绿 dancuilv [53 1 44 0] [158 204 171] #9eccab 明绿 minglv [75 0 59 0] [104 184 142] #68b88e 田园绿 tianyuanlv [98 0 82 0] [32 161 98] #20a162 翠绿 cuilv [78 6 62 0] [97 172 133] #61ac85 淡绿 danlv [90 7 73 0] [64 160 112] #40a070 葱绿 conglv [99 10 91 2] [34 148 83] #229453 孔雀绿 kongquelv [27 11 27 1] [202 211 195] #cad3c3 艾绿 ailv [92 14 76 2] [60 149 102] #3c9566 蟾绿 chanlv [100 17 92 5] [32 137 77] #20894d 宫殿绿 gongdianlv [61 19 52 3] [131 167 141] #83a78d 松霜绿 songshuanglv [81 19 67 4] [87 149 114] #579572 蛋白石绿 danbaishilv [100 22 90 10] [32 127 76] #207f4c 薄荷绿 bohelv [66 29 58 12] [110 139 116] #6e8b74 瓦松绿 wasonglv [100 31 91 25] [26 104 64] #1a6840 荷叶绿 heyelv [62 42 56 34] [94 102 91] #5e665b 田螺绿 tianluolv [74 42 65 40] [72 91 77] #485b4d 白屈菜绿 baiqucailv [64 57 60 67] [57 55 51] #393733 河豚灰 hetunhui [68 56 60 66] [55 56 52] #373834 蒽油绿 enyoulv [76 56 75 72] [43 49 44] #2b312c 槲寄生绿 hujishenglv [91 60 76 83] [21 35 27] #15231b 云杉绿 yunshanlv [9 1 14 0] [240 245 229] #f0f5e5 嫩菊绿 nenjulv [20 1 23 0] [223 236 213] #dfecd5 艾背绿 aibeilv [47 0 49 0] [173 213 162] #add5a2 嘉陵水绿 jialingshuilv [89 0 96 0] [65 179 73] #41b349 玉髓绿 yusuilv [88 0 99 0] [67 178 68] #43b244 鲜绿 xianlv [90 0 100 0] [65 174 60] #41ae3c 宝石绿 baoshilv [18 4 33 0] [226 231 191] #e2e7bf 海沬绿 haimeilv [28 4 44 0] [208 222 170] #d0deaa 姚黄 yaohuang [44 3 61 0] [178 207 135] #b2cf87 橄榄石绿 ganlanshilv [62 0 76 0] [140 194 105] #8cc269 水绿 shuilv [42 3 67 0] [183 208 122] #b7d07a 芦苇绿 luweilv [28 6 66 0] [210 217 122] #d2d97a 槐花黄绿 huaihuahuanglv [41 4 76 0] [186 207 101] #bacf65 苹果绿 pingguolv [58 1 88 0] [150 194 78] #96c24e 芽绿 yalv [19 9 84 1] [226 216 73] #e2d849 蝶黄 diehuang [38 8 94 1] [190 201 54] #bec936 橄榄黄绿 ganlanhuanglv [81 0 100 0] [91 174 35] #5bae23 鹦鹉绿 yingwulv [84 64 94 45] [37 61 36] #253d24 油绿 youlv [0 1 4 0] [255 254 248] #fffef8 象牙白 xiangyabai [3 5 8 0] [248 244 237] #f8f4ed 汉白玉 hanbaiyu [0 1 3 0] [255 254 249] #fffef9 雪白 xuebai [4 4 8 0] [247 244 237] #f7f4ed 鱼肚白 yudubai [12 12 16 0] [228 223 215] #e4dfd7 珍珠灰 zhenzhuhui [16 15 20 1] [218 212 203] #dad4cb 浅灰 qianhui [28 5 30 5] [187 181 172] #bbb5ac 铅灰 qianhui [28 25 30 5] [187 181 172] #bbb5ac 中灰 zhonghui [42 40 43 23] [134 126 118] #867e76 瓦灰 wahui [43 40 44 42] [132 124 116] #847c74 夜灰 yehui [42 42 45 27] [128 118 110] #80766e 雁灰 yanhui [42 42 46 27] [129 119 110] #81776e 深灰 shenhui "},{"id":31,"href":"/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E5%BA%94%E7%94%A8%E5%B1%82-qa/","title":"应用层-Q\u0026A","section":"理论知识","content":"应用层是指电脑上各种应用软件进程通过何种应用层协议来使用网络提供的通信服务\n域名系统DNS是什么 域名系统是指 Internet 中用于把主机名字转换成IP的系统\n为啥 IP 数据包不使用域名而是用 IP 地址呢 因为 IP 地址的长度是固定的32位或者固定的128位，而域名的长度是可变的\n域名服务器DNS使用频率非常高，如何解决域名服务器可能出现的故障问题呢 域名服务器DNS被设计成联机分布式数据系统，采用B/S架构, 大多域名在本地进行解析,少量解析需要通过互联网.\n域名到IP地址的解析过程是怎么样的呢 当应用需要将域名转 IP 地址时, 应用就调用解析程序( resolver ), 把待解析的域名放在 DNS 请求报文中, 以 UDP 方式发送给本地域名服务器,本地服务查找域名之后, 把对应的 IP 地址发送给应用主机.\n域名是怎么组成的呢 早期是无层次的名字空间, 后来因为用户数量急剧增加, 管理这个域名集合空间非常困难, 互联网才用了层次树状结构的命名方法, 任何在互联网上的主机或者路由器, 都有一个唯一层次结构的名字(即域名)，域名由标号和点组成，如 www.baidu.com ，其中com为顶层域名，baidu为二级域名，www为三级域名。\n互联网域名空间是一个倒过来的树状结构，最上面的是根，根下面的第一层是顶级域名，第二层是二级域名，第三层是三级域名，以此类推，最后一层是叶子节点，也就是这主机名字。\n域名中的标号是怎么规定的呢 由英文字母和数字组成，不区分大小写，每个标号不超过63个字符（为记忆最好不要超过12个字符）。\n前面提到域名服务器是联机分布式数据系统，那么它是如何分布管理的呢 域名服务器采用分区的方法来管理，因为这样相比起按照域名来划分，会使域名服务器的数量太多，使域名系统的运行效率降低。\n区（zone）是指域名服务器负责的范围。\n域名服务器之间的解析过程是怎么样的呢？ 主机向本地域名服务器查询基本采用递归查询。\n本地域名服务器想根域名服务器采用迭代查询。\n文件传输协议有哪些？ 文件传输协议包括两种FTP和TFTP协议，FTP基于TCP支持文件传输和交互，而TFTP基于UDP支持文件传输不能交互。\nTELNET 是什么协议？ TELNET 是一个基于TCP的简单远程终端协议，用于远程登录另一台主机。\nWWW 、HTTP、HTML 是指什么？两者有什么关系 ？ WWW（World Wide Web）是一个基于HTTP协议的、分布式的、超文本的信息存储系统。\nHTTP （HyperText Transfer Protocol）是一个无状态的、基于TCP的应用层协议。\nURL 的格式？URL 是否区分大小写? \u0026lt;协议\u0026gt;://\u0026lt;主机\u0026gt;:\u0026lt;端口\u0026gt;/\u0026lt;路径\u0026gt;\n不区分大小写\nHTTP 的传输过程 建立 TCP 连接 B发送 请求报文 C发送 响应报文 关闭 TCP 连接 HTTP 的状态码分别代表什么? 1xx代表通知信息,如何请求收到了或正在处理\n2xx代表成功,如接受或知道了\n3xx代表重定向, 如完成请求还要进一步采取行动\n4xx代表客户端请求错误,如因为客户端输入错误的URL而无法访问\n5xx代表服务器响应错误, 如服务器已关闭连接.\n为什么存在 Cookie 这种东西? 由于 HTTP 本身是无状态的，但是在一些网站实际业务中不可避免要记住用户的当前状态，如果要记住用户的登录状态，当用户登录成功之后，网站服务器便在响应中设置一个识别码“Set-cookie”，当用户的浏览器收到响应之后，就会将其中的 Cookie 予以保存到本地，并在下次请求时将 Cookie 放到请求头中去。\n"},{"id":32,"href":"/posts/%E6%9D%82%E6%80%9D/%E6%9C%89%E4%B9%A6%E5%8F%AF%E8%AF%BB%E6%96%B9%E6%A1%88/","title":"有书可读方案","section":"杂思","content":" 电子书 下载到本地 优秀的阅读体验 "},{"id":33,"href":"/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E8%BF%90%E8%BE%93%E5%B1%82-qa/","title":"运输层-Q\u0026A","section":"理论知识","content":" 运输层是干啥的？为啥会有运输层 运输层是为进程与进程之间通信服务用的，规定了进程与进程之间应该以何种协议进行传输数据。\n如果没有运输层，通信数据的传输将不可靠稳定，从而影响整个网络的通信速度质量。\n运输层包括哪些协议内容？这些协议内容有哪些异同点？ 运输层主要包括TCP【传输控制协议】协议和UDP【用户数据报协议】协议。\n不同点：\nUDP 不需要建立连接直接发送数据包，TCP需要进行三次握手再发送数据 UDP支持一对一、一对多、多对一、多对多的相互通信，TCP支持一对一的点对点通信 UDP不保证数据传输能顺利抵达目的，TCP通过一些内部协议来保证数据传输的一定抵达目的 TCP 协议的三次握手四次挥手过程是怎么样的？ 三次握手是指客户端和服务端之间建立连接的过程，而四次挥手则是两者释放连接的过程。\n第一次握手：客户向服务端主动发送信号【SYN】，具体内容为我已经准备好同步了，如果你要开始与同步，发送一个确认码ack给我（Acknowledge number，值我发送的随机码+1），代表你真的收到我发的东西了。\n"},{"id":34,"href":"/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","title":"正则表达式","section":"技术","content":"正则表达式的所有元字符\n正则表达式的所有元字符包括(markdown表格列出来)：\n元字符 描述 . 匹配任意字符（除了换行符） \\d 匹配数字字符 \\D 匹配非数字字符 \\w 匹配单词字符（字母、数字、下划线） \\W 匹配非单词字符 \\s 匹配空白字符（空格、制表符、换行符等） \\S 匹配非空白字符 ^ 匹配字符串的开头 $ 匹配字符串的结尾 * 匹配前面的元素零次或多次 + 匹配前面的元素一次或多次 ? 表示前面的元素是可选的，匹配零次或一次 {n} 表示前面的元素恰好出现 n 次 {n,} 表示前面的元素至少出现 n 次 {n,m} 表示前面的元素出现 n 到 m 次之间 [] 字符集，匹配括号中任意一个字符 [^] 或 [^\u0026hellip;] 否定字符集，匹配除了括号中指定的任意字符之外的其他字符 "}]