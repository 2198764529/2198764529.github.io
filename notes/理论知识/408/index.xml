<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>理论知识 on 流笔</title>
    <link>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/</link>
    <description>Recent content in 理论知识 on 流笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机网络</title>
      <link>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
      <description>## 概览 计网的层次体系可以用两个体系来解释， 分别是理论上七层的 OSI 体系 和 实际采用的 四层 TCP/IP 体系， 后者是对前者的继承和简化， 现实中基本上都是 TCP/IP 四层，但是要理解计网的内容则还要结合两者进行学习。
下面是有关 TCP/IP 体系和 OSI 体系的 数据单元、主要设备、相关协议的一览表。
TCP/IP 体系 OSI 体系 数据单元 主要设备 相关协议 ^应用层 应用层 ^数据(Data) 服务器 SMTP、HTTP、HTTP、Telent、SSH、DNS、FTP 表示层 ^无专门设备 会话层 消息(Messages) 运输层 运输层 数据报(Datagrams) TCP、UDP 网络层 网络层 数据包(Packets) 路由器、三层交换机 ARP、RARP、ICMP、IP、IMGP ^数据链路层 数据链路层 帧(Frames) 交换机、网桥、网卡 PPP、CRC 物理层 比特流 网卡、集线器、网络电缆、中继器 IEEE802.1A IEEE802.2到IEEE802.11 在计网层次里面, 其中
应用层负责为应用软件提供网络服务的接口 会话层负责管理会话进程，包括建立、管理、终止会话进程。 运输层负责提供端到端传输、差错控制和流量控制，其中，端到端的传输包括 TCP 协议、UDP协议。 ## 其他重点 ### 应用层协议及其端口 应用层负责为应用软件提供网络服务的接口
FTP——文件传输协议【21】 SSH——加密远程登录协议【22】 Telent——远程登录协议【23】 SMTP——简单邮件传输协议【25】 DNS——域名系统【UDP、TCP】【53】 HTTP——超文本传输协议【80】 POP3——邮件接收协议【98】 IMAP——邮件同步协议【143】 DHCP——动态IP协议【UDP】【67客户端请求、68服务器响应】 HTTPS——SSL/TLS加密的HTTP协议【443】 ### TCP 、UDP 协议之对比 下表为 TCP 、UDP 协议之间的不同之处。</description>
    </item>
    
    <item>
      <title>数据结构和算法</title>
      <link>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</guid>
      <description> # 参考 https://www.cs.usfca.edu/~galles/visualization/Algorithms https://algo.itcharge.cn https://www.hello-algo.com https://pdai.tech/md/algorithm/alg-basic-overview.html https://www.runoob.com/w3cnote/ten-sorting-algorithm.html https://www.runoob.com/w3cnote/selection-sort.html
# 排序算法 冒泡排序 两两比较, 符合规则就换, 接着滑动窗口往后移动 选择排序 每次选最大的(无序区)放到最后(有序区) 插入排序 每次选的元素插入到有序区,类似打牌时的排序 在第五步排序的过程。程序运行到当前位置，已排好的子表中包含了 “17，26，54，77，93”五个数据。我们想让31插入该子表中。第一次，31和93比较，93要移到 31右边。同理，77和54也要移位。遇到26时，移动步骤停止，31被插入到此处。此时我们就有了 一个含6个数据项的已排好的子表 快速排序
归并排序
堆排序
桶排序
计数排序
基数排序
# 树 ## 完美二叉树(满二叉树) 所有节点都是满的 ## 完满二叉树 只有叶子节点未满，且叶子节点尽量靠左填充。 ## 平衡二叉树 任何两个子树高度差小于2 </description>
    </item>
    
    <item>
      <title>应用层-Q&amp;A</title>
      <link>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E5%BA%94%E7%94%A8%E5%B1%82-qa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E5%BA%94%E7%94%A8%E5%B1%82-qa/</guid>
      <description>应用层是指电脑上各种应用软件进程通过何种应用层协议来使用网络提供的通信服务</description>
    </item>
    
    <item>
      <title>运输层-Q&amp;A</title>
      <link>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E8%BF%90%E8%BE%93%E5%B1%82-qa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.top/notes/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/408/%E8%BF%90%E8%BE%93%E5%B1%82-qa/</guid>
      <description>### 运输层是干啥的？为啥会有运输层 运输层是为进程与进程之间通信服务用的，规定了进程与进程之间应该以何种协议进行传输数据。
如果没有运输层，通信数据的传输将不可靠稳定，从而影响整个网络的通信速度质量。
### 运输层包括哪些协议内容？这些协议内容有哪些异同点？ 运输层主要包括TCP【传输控制协议】协议和UDP【用户数据报协议】协议。
不同点：
UDP 不需要建立连接直接发送数据包，TCP需要进行三次握手再发送数据 UDP支持一对一、一对多、多对一、多对多的相互通信，TCP支持一对一的点对点通信 UDP不保证数据传输能顺利抵达目的，TCP通过一些内部协议来保证数据传输的一定抵达目的 ### TCP 协议的三次握手四次挥手过程是怎么样的？ 三次握手是指客户端和服务端之间建立连接的过程，而四次挥手则是两者释放连接的过程。
第一次握手：客户向服务端主动发送信号【SYN】，具体内容为我已经准备好同步了，如果你要开始与同步，发送一个确认码ack给我（Acknowledge number，值我发送的随机码+1），代表你真的收到我发的东西了。</description>
    </item>
    
  </channel>
</rss>
