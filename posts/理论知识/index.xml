<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>理论知识 on 李枫的地</title>
    <link>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/</link>
    <description>Recent content in 理论知识 on 李枫的地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机网络</title>
      <link>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</guid>
      <description>概述 ​
flowchart TB; subgraph OSI的体系结构 direction TB a1[应用层]--&amp;gt;a2[表示层]--&amp;gt;a3[会话层]--&amp;gt;a4[运输层]--&amp;gt;a5[网络层]--&amp;gt;a6[数据链路层]--&amp;gt;a7[物理层] end subgraph TCP/ID的体系结构 direction TB	b1[应用层]--&amp;gt;|Link text|b2[运输层]--&amp;gt;b3[网际层]--&amp;gt;b4[网络接口层] end subgraph 五层协议 direction TB	c5--&amp;gt;|比特流|c4--&amp;gt;|帧|c3--&amp;gt;|数据帧|c2--&amp;gt;|报文|c1 c1[应用层]--&amp;gt;|应用数据|c2[运输层]--&amp;gt;|报文|c3[网络层]--&amp;gt;|数据帧|c4[数据链路层]--&amp;gt;|帧|c5[物理层] end node node [ 应用层 ---- 运输层 ---- 网络层 ---- 数据链路层 --- 物理层 ] node node2 [ 应用层 ---- 运输层 ---- 网际层 ---- 网络接口层 ] node node3 [ 应用层 ---- 表示层 ---- 会话层 ---- 运输层 --- 网络层 --- 数据链路层 --- 物理层 ] 体系结构 五层协议 应用 运输 网络 数据链路 物理 OSI七层协议 应用 表示 会话 运输 网络 数据链路 物理 TCP/IP五层协议 应用 运输 网际 网络接口 物理层 特性 机械 电气 功能 过程 设备 中继器 集线器 信道 单工 半双工 全双工 数据链路层 应用层 应用层协议是为了各应用进程需要不同的通信规则而存在的, 也是要依赖运输层所提供的基本通信服务。</description>
    </item>
    
    <item>
      <title>数据结构和算法</title>
      <link>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</guid>
      <description>参考 https://www.cs.usfca.edu/~galles/visualization/Algorithms
查找 评价指标: 查找长度(SL) 平均查找长度(ASL):考虑查找成功和失败的平均SL 顺序查找 O(n) def search_seq(ls,k): for i in range(len(ls)): if k == ls[i]: return i return -1 二分查找 O(Log2n) def search_bin(ls,k): low = 0 high = len(ls)-1 while low&amp;lt;=high: mid = (high-low)/2 if ls[mid] == k: return mid elif ls[mid]&amp;lt;k: high = mid+1 else: low = mid-1 如果取整为向上(向下),则左子树比右子数量大(小)1个或相等
排序 评价指标 稳定性 时间复杂度 空间复杂度 读写次数(外部排序时) 分类 数据是否全部在内存中 内部排序:数据都在内存中 外部排序:数据太多,无法全部放入内存中 直接插入排序 元素都要从头到尾遍历自己前面的数组,如果另外一个元素比自己大,移动到后面一格,否则自己插入到另外一个元素的后面,等于说,每个元素都要执行下面的流程
graph TB; n_start([开始])--&amp;gt;n1[&amp;#34;从头到尾遍历自己前面的数组&amp;#34;] n1 --&amp;gt; n2[&amp;#34;指针越界而且指针元素比自己大&amp;#34;] n2--T--&amp;gt;n3[&amp;#34;指针元素移后一格&amp;#34;]--&amp;gt;n4[&amp;#34;指针前移一格&amp;#34;]--&amp;gt;n2 n2--F--&amp;gt;n5[&amp;#34;插入到指针的后一格&amp;#34;] n5--&amp;gt;n_end([结束]) def insertionSort(arr): for i in range(len(arr)): preIndex = i - 1 for j in range(preIndex, 0): if arr[j] &amp;lt; arr[i-1]: arr[j+1] = arr[i] break 冒泡排序 第i个元素都要自己后面的元素进行两两比较</description>
    </item>
    
    <item>
      <title>应用层-Q&amp;A</title>
      <link>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E5%BA%94%E7%94%A8%E5%B1%82-qa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E5%BA%94%E7%94%A8%E5%B1%82-qa/</guid>
      <description>应用层是指电脑上各种应用软件进程通过何种应用层协议来使用网络提供的通信服务
域名系统DNS是什么 域名系统是指 Internet 中用于把主机名字转换成IP的系统
为啥 IP 数据包不使用域名而是用 IP 地址呢 因为 IP 地址的长度是固定的32位或者固定的128位，而域名的长度是可变的
域名服务器DNS使用频率非常高，如何解决域名服务器可能出现的故障问题呢 域名服务器DNS被设计成联机分布式数据系统，采用B/S架构, 大多域名在本地进行解析,少量解析需要通过互联网.
域名到IP地址的解析过程是怎么样的呢 当应用需要将域名转 IP 地址时, 应用就调用解析程序( resolver ), 把待解析的域名放在 DNS 请求报文中, 以 UDP 方式发送给本地域名服务器,本地服务查找域名之后, 把对应的 IP 地址发送给应用主机.
域名是怎么组成的呢 早期是无层次的名字空间, 后来因为用户数量急剧增加, 管理这个域名集合空间非常困难, 互联网才用了层次树状结构的命名方法, 任何在互联网上的主机或者路由器, 都有一个唯一层次结构的名字(即域名)，域名由标号和点组成，如 www.baidu.com ，其中com为顶层域名，baidu为二级域名，www为三级域名。
互联网域名空间是一个倒过来的树状结构，最上面的是根，根下面的第一层是顶级域名，第二层是二级域名，第三层是三级域名，以此类推，最后一层是叶子节点，也就是这主机名字。
域名中的标号是怎么规定的呢 由英文字母和数字组成，不区分大小写，每个标号不超过63个字符（为记忆最好不要超过12个字符）。
前面提到域名服务器是联机分布式数据系统，那么它是如何分布管理的呢 域名服务器采用分区的方法来管理，因为这样相比起按照域名来划分，会使域名服务器的数量太多，使域名系统的运行效率降低。
区（zone）是指域名服务器负责的范围。
域名服务器之间的解析过程是怎么样的呢？ 主机向本地域名服务器查询基本采用递归查询。
本地域名服务器想根域名服务器采用迭代查询。
文件传输协议有哪些？ 文件传输协议包括两种FTP和TFTP协议，FTP基于TCP支持文件传输和交互，而TFTP基于UDP支持文件传输不能交互。
TELNET 是什么协议？ TELNET 是一个基于TCP的简单远程终端协议，用于远程登录另一台主机。
WWW 、HTTP、HTML 是指什么？两者有什么关系 ？ WWW（World Wide Web）是一个基于HTTP协议的、分布式的、超文本的信息存储系统。
HTTP （HyperText Transfer Protocol）是一个无状态的、基于TCP的应用层协议。
URL 的格式？URL 是否区分大小写? &amp;lt;协议&amp;gt;://&amp;lt;主机&amp;gt;:&amp;lt;端口&amp;gt;/&amp;lt;路径&amp;gt;</description>
    </item>
    
    <item>
      <title>运输层-Q&amp;A</title>
      <link>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E8%BF%90%E8%BE%93%E5%B1%82-qa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ltao.fun/posts/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E8%BF%90%E8%BE%93%E5%B1%82-qa/</guid>
      <description>运输层是干啥的？为啥会有运输层 运输层是为进程与进程之间通信服务用的，规定了进程与进程之间应该以何种协议进行传输数据。
如果没有运输层，通信数据的传输将不可靠稳定，从而影响整个网络的通信速度质量。
运输层包括哪些协议内容？这些协议内容有哪些异同点？ 运输层主要包括TCP【传输控制协议】协议和UDP【用户数据报协议】协议。
不同点：
UDP 不需要建立连接直接发送数据包，TCP需要进行三次握手再发送数据 UDP支持一对一、一对多、多对一、多对多的相互通信，TCP支持一对一的点对点通信 UDP不保证数据传输能顺利抵达目的，TCP通过一些内部协议来保证数据传输的一定抵达目的 TCP 协议的三次握手四次挥手过程是怎么样的？ 三次握手是指客户端和服务端之间建立连接的过程，而四次挥手则是两者释放连接的过程。
第一次握手：客户向服务端主动发送信号【SYN】，具体内容为我已经准备好同步了，如果你要开始与同步，发送一个确认码ack给我（Acknowledge number，值我发送的随机码+1），代表你真的收到我发的东西了。</description>
    </item>
    
  </channel>
</rss>
